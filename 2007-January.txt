From sommer at mail.berlios.de  Mon Jan  1 15:04:04 2007
From: sommer at mail.berlios.de (sommer at mail.berlios.de)
Date: Mon, 1 Jan 2007 15:04:04 +0100
Subject: [Supertux-commit] r4519 -
	branches/supertux-sharp/0_3_x/tools/innosetup
Message-ID: <200701011404.l01E44h9012819@sheep.berlios.de>

Author: sommer
Date: 2007-01-01 15:03:55 +0100 (Mon, 01 Jan 2007)
New Revision: 4519

Modified:
   branches/supertux-sharp/0_3_x/tools/innosetup/supertux-editor-mono.iss
Log:
Fixed path names to avoid confusion later on

Modified: branches/supertux-sharp/0_3_x/tools/innosetup/supertux-editor-mono.iss
===================================================================
--- branches/supertux-sharp/0_3_x/tools/innosetup/supertux-editor-mono.iss	2006-12-31 16:17:15 UTC (rev 4518)
+++ branches/supertux-sharp/0_3_x/tools/innosetup/supertux-editor-mono.iss	2007-01-01 14:03:55 UTC (rev 4519)
@@ -9,7 +9,6 @@
 #define MyAppName "SuperTux Editor"
 #define MyAppVer "0.3.0"
 #define MyAppVerName "SuperTux Editor 0.3.0"
-#define MyAppMajVerName "SuperTux Editor 0.3"
 #define MyAppPublisher "SuperTux Development Team"
 #define MyAppURL "http://supertux.berlios.de"
 #define MyAppBaseName "supertux-editor"
@@ -21,12 +20,13 @@
 AppPublisherURL={#MyAppURL}
 AppSupportURL={#MyAppURL}
 AppUpdatesURL={#MyAppURL}
-DefaultDirName={pf}\{#MyAppMajVerName}
-DefaultGroupName=SuperTux
+DefaultDirName={pf}\{#MyAppVerName}
+DefaultGroupName=SuperTux 0.3.0
 AllowNoIcons=true
 VersionInfoVersion={#MyAppVer}
 AppVersion={#MyAppVer}
 LicenseFile=..\..\COPYING
+InfoAfterFile=..\..\README
 OutputBaseFilename={#MyAppBaseName}-{#MyAppVer}-mono-setup
 Compression=Lzma
 SolidCompression=true
@@ -40,6 +40,8 @@
 
 [Files]
 Source: ..\..\{#MyAppBaseName}.exe; DestDir: {app}; Flags: ignoreversion
+Source: ..\..\COPYING; DestDir: {app}; Flags: ignoreversion
+Source: ..\..\README; DestDir: {app}; Flags: ignoreversion
 Source: ..\..\gtkgl-sharp.dll; DestDir: {app}; Flags: ignoreversion
 Source: ..\..\libeditor.dll; DestDir: {app}; Flags: ignoreversion
 Source: ..\..\Lisp.dll; DestDir: {app}; Flags: ignoreversion
@@ -52,9 +54,9 @@
 Source: ..\..\supertux-editor\resources\supertux-editor.ico; DestDir: {app}; Flags: ignoreversion
 
 [Icons]
-Name: {group}\SuperTux Editor; Filename: {app}\monoLaunchW.exe; Parameters: {code:QuoteMainExe|supertux-editor.exe}; WorkingDir: {app}; IconFilename: {app}\supertux-editor.ico; IconIndex: 0; Tasks:
-Name: {group}\{cm:UninstallProgram,SuperTux Editor}; Filename: {uninstallexe}
-Name: {userdesktop}\SuperTux Editor; Filename: {app}\monoLaunchW.exe; Tasks: desktopicon; Parameters: {code:QuoteMainExe|supertux-editor.exe}; WorkingDir: {app}; IconFilename: {app}\supertux-editor.ico; IconIndex: 0
+Name: {group}\{#MyAppVerName}; Filename: {app}\monoLaunchW.exe; Parameters: {code:QuoteMainExe|supertux-editor.exe}; WorkingDir: {app}; IconFilename: {app}\supertux-editor.ico; IconIndex: 0; Tasks: 
+Name: {group}\{cm:UninstallProgram,{#MyAppVerName}}; Filename: {uninstallexe}
+Name: {userdesktop}\{#MyAppVerName}; Filename: {app}\monoLaunchW.exe; Tasks: desktopicon; Parameters: {code:QuoteMainExe|supertux-editor.exe}; WorkingDir: {app}; IconFilename: {app}\supertux-editor.ico; IconIndex: 0
 
 [Code]
 // This checks if another app that installed using Inno Setup is already installed.



From wolfgangb at mail.berlios.de  Mon Jan  1 20:35:09 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Mon, 1 Jan 2007 20:35:09 +0100
Subject: [Supertux-commit] r4520 - in trunk/supertux: . src
Message-ID: <200701011935.l01JZ92T004006@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-01 20:35:08 +0100 (Mon, 01 Jan 2007)
New Revision: 4520

Modified:
   trunk/supertux/configure.ac
   trunk/supertux/src/main.cpp
Log:
Disable scripting console and fps display via command line.


Modified: trunk/supertux/configure.ac
===================================================================
--- trunk/supertux/configure.ac	2007-01-01 14:03:55 UTC (rev 4519)
+++ trunk/supertux/configure.ac	2007-01-01 19:35:08 UTC (rev 4520)
@@ -11,7 +11,7 @@
 
 dnl Process this file with autoconf to produce a configure script.
 AC_PREREQ([2.54])
-AC_INIT(supertux, 0.3.0)
+AC_INIT(supertux, 0.3.0-SVN)
 AC_CONFIG_SRCDIR([src/main.cpp])
 AC_CONFIG_AUX_DIR([mk/autoconf])
 AC_CANONICAL_TARGET

Modified: trunk/supertux/src/main.cpp
===================================================================
--- trunk/supertux/src/main.cpp	2007-01-01 14:03:55 UTC (rev 4519)
+++ trunk/supertux/src/main.cpp	2007-01-01 19:35:08 UTC (rev 4520)
@@ -215,7 +215,9 @@
             "  --help                       Show this help message\n"
             "  --version                    Display SuperTux version and quit\n"
             "  --console                    Enable ingame scripting console\n"
+            "  --noconsole                  Disable ingame scripting console\n"
             "  --show-fps                   Display framerate in levels\n"
+            "  --no-show-fps                Do not display framerate in levels\n"
             "  --record-demo FILE LEVEL     Record a demo to FILE\n"
             "  --play-demo FILE LEVEL       Play a recorded demo\n"
             "\n"));
@@ -265,8 +267,12 @@
       }
     } else if(arg == "--show-fps") {
       config->show_fps = true;
+    } else if(arg == "--no-show-fps") {
+      config->show_fps = false;
     } else if(arg == "--console") {
       config->console_enabled = true;
+    } else if(arg == "--noconsole") {
+      config->console_enabled = false;
     } else if(arg == "--disable-sfx") {
       config->sound_enabled = false;
     } else if(arg == "--disable-music") {
@@ -289,6 +295,7 @@
       config->start_level = arg;
     } else {
       log_warning << "Unknown option '" << arg << "'. Use --help to see a list of options" << std::endl;
+      return true;
     }
   }
 



From wolfgangb at mail.berlios.de  Tue Jan  2 17:14:56 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Tue, 2 Jan 2007 17:14:56 +0100
Subject: [Supertux-commit] r4523 - in trunk/supertux/src: . badguy object
	scripting
Message-ID: <200701021614.l02GEuKa007575@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-02 17:14:53 +0100 (Tue, 02 Jan 2007)
New Revision: 4523

Modified:
   trunk/supertux/src/badguy/angrystone.cpp
   trunk/supertux/src/badguy/badguy.cpp
   trunk/supertux/src/badguy/bomb.cpp
   trunk/supertux/src/badguy/bouncing_snowball.cpp
   trunk/supertux/src/badguy/dart.cpp
   trunk/supertux/src/badguy/fish.cpp
   trunk/supertux/src/badguy/flyingsnowball.cpp
   trunk/supertux/src/badguy/jumpy.cpp
   trunk/supertux/src/badguy/kugelblitz.cpp
   trunk/supertux/src/badguy/mole.cpp
   trunk/supertux/src/badguy/mole_rock.cpp
   trunk/supertux/src/badguy/mriceblock.cpp
   trunk/supertux/src/badguy/mrrocket.cpp
   trunk/supertux/src/badguy/plant.cpp
   trunk/supertux/src/badguy/skullyhop.cpp
   trunk/supertux/src/badguy/snail.cpp
   trunk/supertux/src/badguy/spidermite.cpp
   trunk/supertux/src/badguy/sspiky.cpp
   trunk/supertux/src/badguy/stalactite.cpp
   trunk/supertux/src/badguy/stumpy.cpp
   trunk/supertux/src/badguy/toad.cpp
   trunk/supertux/src/badguy/totem.cpp
   trunk/supertux/src/badguy/walking_badguy.cpp
   trunk/supertux/src/badguy/yeti.cpp
   trunk/supertux/src/badguy/zeekling.cpp
   trunk/supertux/src/object/bullet.cpp
   trunk/supertux/src/object/camera.cpp
   trunk/supertux/src/object/falling_coin.cpp
   trunk/supertux/src/object/growup.cpp
   trunk/supertux/src/object/oneup.cpp
   trunk/supertux/src/object/player.cpp
   trunk/supertux/src/object/powerup.cpp
   trunk/supertux/src/object/pushbutton.cpp
   trunk/supertux/src/object/rock.cpp
   trunk/supertux/src/object/scripted_object.cpp
   trunk/supertux/src/object/skull_tile.cpp
   trunk/supertux/src/object/star.cpp
   trunk/supertux/src/object/trampoline.cpp
   trunk/supertux/src/object/unstable_tile.cpp
   trunk/supertux/src/physic.cpp
   trunk/supertux/src/physic.hpp
   trunk/supertux/src/scripting/functions.cpp
Log:
[ Patch #1793 ] Turn physic into POD
Date: 2007-Jan-02 16:30
Submitted By: tuxdev


Modified: trunk/supertux/src/badguy/angrystone.cpp
===================================================================
--- trunk/supertux/src/badguy/angrystone.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/angrystone.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -47,9 +47,9 @@
 void
 AngryStone::activate()
 {
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
-  physic.enable_gravity(true);
+  physic.vx = 0;
+  physic.vy = 0;
+  physic.gravity_enabled = true;
   sprite->set_action("idle");
 }
 
@@ -63,9 +63,9 @@
       (hit.normal.x == -attackDirection.x) && (hit.normal.y == attackDirection.y)) {
     state = IDLE;
     sprite->set_action("idle");
-    physic.set_velocity_x(0);
-    physic.set_velocity_y(0);
-    physic.enable_gravity(true);
+    physic.vx = 0;
+    physic.vy = 0;
+    physic.gravity_enabled = true;
     oldWallDirection.x = attackDirection.x;
     oldWallDirection.y = attackDirection.y;
   }
@@ -143,9 +143,9 @@
       sprite->set_action("attacking");
       timer.start(ATTACK_TIME);
       state = ATTACKING;
-      physic.enable_gravity(false);
-      physic.set_velocity_x(SPEED * attackDirection.x);
-      physic.set_velocity_y(SPEED * attackDirection.y);
+      physic.gravity_enabled = false;
+      physic.vx = SPEED * attackDirection.x;
+      physic.vy = SPEED * attackDirection.y;
       oldWallDirection.x = 0;
       oldWallDirection.y = 0;
     }
@@ -156,9 +156,9 @@
       timer.start(RECOVER_TIME);
       state = RECOVERING;
       sprite->set_action("idle");
-      physic.enable_gravity(true);
-      physic.set_velocity_x(0);
-      physic.set_velocity_y(0);
+      physic.gravity_enabled = true;
+      physic.vx = 0;
+      physic.vy = 0;
     }
   }
 
@@ -166,9 +166,9 @@
     if (timer.check()) {
       state = IDLE;
       sprite->set_action("idle");
-      physic.enable_gravity(true);
-      physic.set_velocity_x(0);
-      physic.set_velocity_y(0);
+      physic.gravity_enabled = true;
+      physic.vx = 0;
+      physic.vy = 0;
     }
   }
 

Modified: trunk/supertux/src/badguy/badguy.cpp
===================================================================
--- trunk/supertux/src/badguy/badguy.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/badguy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -228,8 +228,8 @@
 void
 BadGuy::collision_solid(const CollisionHit& hit)
 {
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
+  physic.vx = 0;
+  physic.vy = 0;
   update_on_ground_flag(hit);
 }
 
@@ -309,9 +309,9 @@
 BadGuy::kill_squished(GameObject& object)
 {
   sound_manager->play("sounds/squish.wav", get_pos());
-  physic.enable_gravity(true);
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
+  physic.gravity_enabled = true;
+  physic.vx = 0;
+  physic.vy = 0;
   set_state(STATE_SQUISHED);
   set_group(COLGROUP_MOVING_ONLY_STATIC);
   Player* player = dynamic_cast<Player*>(&object);
@@ -326,8 +326,8 @@
 {
   sound_manager->play("sounds/fall.wav", get_pos());
   if (countMe) Sector::current()->get_level()->stats.badguys++;
-  physic.set_velocity_y(0);
-  physic.enable_gravity(true);
+  physic.vy = 0;
+  physic.gravity_enabled = true;
   set_state(STATE_FALLING);
 }
 

Modified: trunk/supertux/src/badguy/bomb.cpp
===================================================================
--- trunk/supertux/src/badguy/bomb.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/bomb.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -61,7 +61,7 @@
 Bomb::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom)
-    physic.set_velocity_y(0);
+    physic.vy = 0;
 }
 
 HitResponse

Modified: trunk/supertux/src/badguy/bouncing_snowball.cpp
===================================================================
--- trunk/supertux/src/badguy/bouncing_snowball.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/bouncing_snowball.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -48,7 +48,7 @@
 void
 BouncingSnowball::activate()
 {
-  physic.set_velocity_x(dir == LEFT ? -WALKSPEED : WALKSPEED);
+  physic.vx = (dir == LEFT ? -WALKSPEED : WALKSPEED);
   sprite->set_action(dir == LEFT ? "left" : "right");
 }
 
@@ -65,18 +65,18 @@
 {
   if(hit.bottom) {
     if(get_state() == STATE_ACTIVE) {
-      physic.set_velocity_y(JUMPSPEED);
+      physic.vy = JUMPSPEED;
     } else {
-      physic.set_velocity_y(0);
+      physic.vy = 0;
     }
   } else if(hit.top) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
   if(hit.left || hit.right) { // left or right collision
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.set_velocity_x(-physic.get_velocity_x());
+    physic.vx = -physic.vx;
   }
 }
 

Modified: trunk/supertux/src/badguy/dart.cpp
===================================================================
--- trunk/supertux/src/badguy/dart.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/dart.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -31,7 +31,7 @@
 Dart::Dart(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/dart/dart.sprite"), parent(0)
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
   countMe = false;
   sound_manager->preload("sounds/darthit.wav");
   sound_manager->preload("sounds/stomp.wav");
@@ -40,7 +40,7 @@
 Dart::Dart(const Vector& pos, Direction d, const BadGuy* parent = 0)
 	: BadGuy(pos, d, "images/creatures/dart/dart.sprite"), parent(parent)
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
   countMe = false;
   sound_manager->preload("sounds/darthit.wav");
   sound_manager->preload("sounds/stomp.wav");
@@ -80,7 +80,7 @@
 void
 Dart::activate()
 {
-  physic.set_velocity_x(dir == LEFT ? -::SPEED : ::SPEED);
+  physic.vx = (dir == LEFT ? -::SPEED : ::SPEED);
   sprite->set_action(dir == LEFT ? "flying-left" : "flying-right");
 
   sound_source.reset(sound_manager->create_sound_source(SOUNDFILE));

Modified: trunk/supertux/src/badguy/fish.cpp
===================================================================
--- trunk/supertux/src/badguy/fish.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/fish.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -30,13 +30,13 @@
 Fish::Fish(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/fish/fish.sprite", LAYER_TILES-1), stop_y(0)
 {
-  physic.enable_gravity(true);
+  physic.gravity_enabled = true;
 }
 
 Fish::Fish(const Vector& pos)
 	: BadGuy(pos, "images/creatures/fish/fish.sprite", LAYER_TILES-1), stop_y(0)
 {
-  physic.enable_gravity(true);
+  physic.gravity_enabled = true;
 }
 
 void
@@ -75,7 +75,7 @@
 Fish::hit(const CollisionHit& hit)
 {
   if(hit.top) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
   return CONTINUE;
@@ -84,7 +84,7 @@
 void
 Fish::collision_tile(uint32_t tile_attributes)
 {
-  if ((tile_attributes & Tile::WATER) && (physic.get_velocity_y() >= 0)) {
+  if ((tile_attributes & Tile::WATER) && (physic.vy >= 0)) {
 
     // initialize stop position if uninitialized
     if (stop_y == 0) stop_y = get_pos().y + get_bbox().get_height();
@@ -111,13 +111,13 @@
 
   // set sprite
   if(!frozen)
-    sprite->set_action(physic.get_velocity_y() < 0 ? "normal" : "down");
+    sprite->set_action(physic.vy < 0 ? "normal" : "down");
 
   // we can't afford flying out of the tilemap, 'cause the engine would remove us.
   if ((get_pos().y - 31.8) < 0) // too high, let us fall
   {
-    physic.set_velocity_y(0);
-    physic.enable_gravity(true);
+    physic.vy = 0;
+    physic.gravity_enabled = true;
   }
 }
 
@@ -126,15 +126,15 @@
 {
   waiting.start(FISH_WAIT_TIME);
   set_group(COLGROUP_DISABLED);
-  physic.enable_gravity(false);
-  physic.set_velocity_y(0);
+  physic.gravity_enabled = false;
+  physic.vy = 0;
 }
 
 void
 Fish::jump()
 {
-  physic.set_velocity_y(FISH_JUMP_POWER);
-  physic.enable_gravity(true);
+  physic.vy = FISH_JUMP_POWER;
+  physic.gravity_enabled = true;
   set_group(COLGROUP_MOVING);
 }
 
@@ -142,7 +142,7 @@
 Fish::freeze()
 {
   BadGuy::freeze();
-  sprite->set_action(physic.get_velocity_y() < 0 ? "iced" : "iced-down");
+  sprite->set_action(physic.vy < 0 ? "iced" : "iced-down");
   waiting.stop();
 }
 

Modified: trunk/supertux/src/badguy/flyingsnowball.cpp
===================================================================
--- trunk/supertux/src/badguy/flyingsnowball.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/flyingsnowball.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -37,13 +37,13 @@
 FlyingSnowBall::FlyingSnowBall(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/flying_snowball/flying_snowball.sprite")
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 FlyingSnowBall::FlyingSnowBall(const Vector& pos)
 	: BadGuy(pos, "images/creatures/flying_snowball/flying_snowball.sprite")
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 void
@@ -62,7 +62,7 @@
 {
   sprite->set_action(dir == LEFT ? "left" : "right");
   mode = FLY_UP;
-  physic.set_velocity_y(FLYSPEED);
+  physic.vy = FLYSPEED;
   timer.start(FLYTIME/2);
   puff_timer.start(systemRandom.randf(PUFF_INTERVAL_MIN, PUFF_INTERVAL_MAX));
 }
@@ -79,7 +79,7 @@
 FlyingSnowBall::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 }
 
@@ -89,14 +89,14 @@
   if(timer.check()) {
     if(mode == FLY_UP) {
       mode = FLY_DOWN;
-      physic.set_velocity_y(-FLYSPEED);
+      physic.vy = -FLYSPEED;
 
       // stop puffing
       puff_timer.stop();
 
     } else if(mode == FLY_DOWN) {
       mode = FLY_UP;
-      physic.set_velocity_y(FLYSPEED);
+      physic.vy = FLYSPEED;
 
       // roll a dice whether to start puffing
       if (systemRandom.randf(0, 1) < PUFF_PROBABILITY) {

Modified: trunk/supertux/src/badguy/jumpy.cpp
===================================================================
--- trunk/supertux/src/badguy/jumpy.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/jumpy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -63,11 +63,11 @@
       groundhit_pos_set = true;
     }
 
-    physic.set_velocity_y(frozen ? 0 : JUMPSPEED);
+    physic.vy = (frozen ? 0 : JUMPSPEED);
     // TODO create a nice sound for this...
     //sound_manager->play("sounds/skid.wav");
   } else if(chit.top) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
   return CONTINUE;
@@ -106,7 +106,7 @@
 Jumpy::freeze()
 {
   BadGuy::freeze();
-  physic.set_velocity_y(std::max(0.0f, physic.get_velocity_y()));
+  physic.vy = std::max(0.0f, physic.vy);
   sprite->set_action(dir == LEFT ? "left-iced" : "right-iced");
 }
 

Modified: trunk/supertux/src/badguy/kugelblitz.cpp
===================================================================
--- trunk/supertux/src/badguy/kugelblitz.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/kugelblitz.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -38,7 +38,7 @@
 {
   reader.get("x", start_position.x);
   sprite->set_action("falling");
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 void
@@ -54,8 +54,8 @@
 void
 Kugelblitz::activate()
 {
-  physic.set_velocity_y(300);
-  physic.set_velocity_x(-20); //fall a little to the left
+  physic.vy = 300;
+  physic.vx = -20; //fall a little to the left
   direction = 1;
   dying = false;
 }
@@ -107,16 +107,16 @@
       groundhit_pos_set = true;
     }
     sprite->set_action("flying");
-    physic.set_velocity_y(0);
+    physic.vy = 0;
     //Set random initial speed and direction
     direction = systemRandom.rand(2)? 1: -1;
     int speed = (BASE_SPEED + (systemRandom.rand(RAND_SPEED))) * direction;
-    physic.set_velocity_x(speed);
+    physic.vx = speed;
     movement_timer.start(MOVETIME);
     lifetime.start(LIFETIME);
 
   } else if(hit.top) { // bumped on roof
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
   return CONTINUE;
@@ -133,7 +133,7 @@
       if (movement_timer.check()) {
         if (direction == 1) direction = -1; else direction = 1;
         int speed = (BASE_SPEED + (systemRandom.rand(RAND_SPEED))) * direction;
-        physic.set_velocity_x(speed);
+        physic.vx = speed;
         movement_timer.start(MOVETIME);
       }
     }

Modified: trunk/supertux/src/badguy/mole.cpp
===================================================================
--- trunk/supertux/src/badguy/mole.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/mole.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -35,13 +35,13 @@
 Mole::Mole(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/mole/mole.sprite", LAYER_TILES-1), state(PRE_THROWING)
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 Mole::Mole(const Vector& pos)
 	: BadGuy(pos, "images/creatures/mole/mole.sprite", LAYER_TILES-1), state(PRE_THROWING)
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 void

Modified: trunk/supertux/src/badguy/mole_rock.cpp
===================================================================
--- trunk/supertux/src/badguy/mole_rock.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/mole_rock.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -25,14 +25,14 @@
 MoleRock::MoleRock(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/mole/mole_rock.sprite", LAYER_TILES - 2), parent(0), initial_velocity(Vector(0, -400))
 {
-  physic.enable_gravity(true);
+  physic.gravity_enabled = true;
   countMe = false;
 }
 
 MoleRock::MoleRock(const Vector& pos, const Vector& velocity, const BadGuy* parent = 0)
 	: BadGuy(pos, LEFT, "images/creatures/mole/mole_rock.sprite", LAYER_TILES - 2), parent(parent), initial_velocity(velocity)
 {
-  physic.enable_gravity(true);
+  physic.gravity_enabled = true;
   countMe = false;
 }
 
@@ -67,7 +67,8 @@
 void
 MoleRock::activate()
 {
-  physic.set_velocity(initial_velocity);
+  physic.vx = initial_velocity.x;
+  physic.vy = initial_velocity.y;
   sprite->set_action("default");
 }
 

Modified: trunk/supertux/src/badguy/mriceblock.cpp
===================================================================
--- trunk/supertux/src/badguy/mriceblock.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/mriceblock.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -92,7 +92,7 @@
   update_on_ground_flag(hit);
 
   if(hit.top || hit.bottom) { // floor or roof
-    physic.set_velocity_y(0);
+    physic.vy = 0;
     return;
   }
 
@@ -105,17 +105,17 @@
       if(hit.right && dir == RIGHT) {
         dir = LEFT;
         sound_manager->play("sounds/iceblock_bump.wav", get_pos());
-        physic.set_velocity_x(-KICKSPEED);
+        physic.vx = -KICKSPEED;
       } else if(hit.left && dir == LEFT) {
         dir = RIGHT;
         sound_manager->play("sounds/iceblock_bump.wav", get_pos());
-        physic.set_velocity_x(KICKSPEED);
+        physic.vx = KICKSPEED;
       }
       sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
       break;
     }
     case ICESTATE_FLAT:
-      physic.set_velocity_x(0);
+      physic.vx = 0;
       break;
     case ICESTATE_GRABBED:
       break;
@@ -220,8 +220,8 @@
       break;
     case ICESTATE_FLAT:
       sound_manager->play("sounds/stomp.wav", get_pos());
-      physic.set_velocity_x(0);
-      physic.set_velocity_y(0);
+      physic.vx = 0;
+      physic.vy = 0;
 
       sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
       flat_timer.start(4);
@@ -229,7 +229,7 @@
     case ICESTATE_KICKED:
       sound_manager->play("sounds/kick.wav", get_pos());
 
-      physic.set_velocity_x(dir == LEFT ? -KICKSPEED : KICKSPEED);
+      physic.vx = (dir == LEFT ? -KICKSPEED : KICKSPEED);
       sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
       // we should slide above 1 block holes now...
       bbox.set_size(34, 31.8);

Modified: trunk/supertux/src/badguy/mrrocket.cpp
===================================================================
--- trunk/supertux/src/badguy/mrrocket.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/mrrocket.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -47,8 +47,8 @@
 void
 MrRocket::activate()
 {
-  physic.set_velocity_x(dir == LEFT ? -SPEED : SPEED);
-  physic.enable_gravity(false);
+  physic.vx = (dir == LEFT ? -SPEED : SPEED);
+  physic.gravity_enabled = false;
   sprite->set_action(dir == LEFT ? "left" : "right");
 }
 
@@ -78,10 +78,10 @@
 MrRocket::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   } else if(hit.left || hit.right) {
     sprite->set_action(dir == LEFT ? "collision-left" : "collision-right");
-    physic.set_velocity_x(0);
+    physic.vx = 0;
     collision_timer.start(0.2, true);
   }
 }

Modified: trunk/supertux/src/badguy/plant.cpp
===================================================================
--- trunk/supertux/src/badguy/plant.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/plant.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -48,7 +48,7 @@
   dir = dir == LEFT ? RIGHT : LEFT;
 
   state = PLANT_SLEEPING;
-  physic.set_velocity_x(0);
+  physic.vx = 0;
   sprite->set_action(dir == LEFT ? "sleeping-left" : "sleeping-right");
 }
 
@@ -56,11 +56,11 @@
 Plant::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   } else if(hit.left || hit.right) {
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.set_velocity_x(-physic.get_velocity_x());
+    physic.vx = -physic.vx;
   }
 }
 
@@ -72,7 +72,7 @@
   if(hit.left || hit.right) {
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.set_velocity_x(-physic.get_velocity_x());
+    physic.vx = -physic.vx;
   }
 
   return CONTINUE;
@@ -107,7 +107,7 @@
     if(timer.check()) {
       // start walking
       sprite->set_action(dir == LEFT ? "left" : "right");
-      physic.set_velocity_x(dir == LEFT ? -WALKSPEED : WALKSPEED);
+      physic.vx = (dir == LEFT ? -WALKSPEED : WALKSPEED);
       state = PLANT_WALKING;
     }
   }

Modified: trunk/supertux/src/badguy/skullyhop.cpp
===================================================================
--- trunk/supertux/src/badguy/skullyhop.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/skullyhop.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -63,8 +63,8 @@
 SkullyHop::set_state(SkullyHopState newState)
 {
   if (newState == STANDING) {
-    physic.set_velocity_x(0);
-    physic.set_velocity_y(0);
+    physic.vx = 0;
+    physic.vy = 0;
     sprite->set_action(dir == LEFT ? "standing-left" : "standing-right");
 
     float recover_time = systemRandom.randf(MIN_RECOVER_TIME,MAX_RECOVER_TIME);
@@ -75,8 +75,8 @@
   } else
   if (newState == JUMPING) {
     sprite->set_action(dir == LEFT ? "jumping-left" : "jumping-right");
-    physic.set_velocity_x(dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
-    physic.set_velocity_y(VERTICAL_SPEED);
+    physic.vx = (dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
+    physic.vy = VERTICAL_SPEED;
     sound_manager->play( HOP_SOUND, get_pos());
   }
 
@@ -104,19 +104,19 @@
     return;
 
   // check if we hit the floor while falling
-  if(hit.bottom && physic.get_velocity_y() > 0 ) {
+  if(hit.bottom && physic.vy > 0 ) {
     set_state(STANDING);
   }
   // check if we hit the roof while climbing
   if(hit.top) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
   // check if we hit left or right while moving in either direction
   if(hit.left || hit.right) {
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "jumping-left" : "jumping-right");
-    physic.set_velocity_x(-0.25*physic.get_velocity_x());
+    physic.vx = -0.25*physic.vx;
   }
 }
 

Modified: trunk/supertux/src/badguy/snail.cpp
===================================================================
--- trunk/supertux/src/badguy/snail.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/snail.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -79,8 +79,8 @@
   sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
   sprite->set_fps(64);
 
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
+  physic.vx = 0;
+  physic.vy = 0;
 
   flat_timer.start(4);
 }
@@ -92,8 +92,8 @@
   sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
   sprite->set_fps(64);
 
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
+  physic.vx = 0;
+  physic.vy = 0;
 
   // start a timer to delay addition of upward movement until we are (hopefully) out from under the player
   kicked_delay_timer.start(0.05);
@@ -125,16 +125,16 @@
 
     case STATE_KICKED_DELAY:
       if (kicked_delay_timer.check()) {
-	physic.set_velocity_x(dir == LEFT ? -KICKSPEED : KICKSPEED);
-	physic.set_velocity_y(KICKSPEED_Y);
+	physic.vx = (dir == LEFT ? -KICKSPEED : KICKSPEED);
+	physic.vy = KICKSPEED_Y;
 	state = STATE_KICKED;
       }
       BadGuy::active_update(elapsed_time);
       break;
 
     case STATE_KICKED:
-      physic.set_velocity_x(physic.get_velocity_x() * pow(0.99, elapsed_time/0.02));
-      if (fabsf(physic.get_velocity_x()) < walk_speed) be_normal();
+      physic.vx = physic.vx * pow(0.99, elapsed_time/0.02);
+      if (fabsf(physic.vx) < walk_speed) be_normal();
       BadGuy::active_update(elapsed_time);
       break;
 
@@ -152,22 +152,22 @@
       break;
     case STATE_FLAT:
       if(hit.top || hit.bottom) {
-	physic.set_velocity_y(0);
+	physic.vy = 0;
       }
       if(hit.left || hit.right) {
       }
       break;
     case STATE_KICKED_DELAY:
       if(hit.top || hit.bottom) {
-	physic.set_velocity_y(0);
+	physic.vy = 0;
       }
       if(hit.left || hit.right) {
-	physic.set_velocity_x(0);
+	physic.vy = 0;
       }
       break;
     case STATE_KICKED:
       if(hit.top || hit.bottom) {
-	physic.set_velocity_y(0);
+	physic.vy = 0;
       }
       if(hit.left || hit.right) {
 	sound_manager->play("sounds/iceblock_bump.wav", get_pos());
@@ -176,8 +176,8 @@
 	  dir = (dir == LEFT) ? RIGHT : LEFT;
 	  sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
 
-	  physic.set_velocity_x(-physic.get_velocity_x()*0.75);
-	  if (fabsf(physic.get_velocity_x()) < walk_speed) be_normal();
+	  physic.vx = -physic.vx*0.75;
+	  if (fabsf(physic.vx) < walk_speed) be_normal();
 	}
 
       }

Modified: trunk/supertux/src/badguy/spidermite.cpp
===================================================================
--- trunk/supertux/src/badguy/spidermite.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/spidermite.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -28,13 +28,13 @@
 SpiderMite::SpiderMite(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/spidermite/spidermite.sprite")
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 SpiderMite::SpiderMite(const Vector& pos)
 	: BadGuy(pos, "images/creatures/spidermite/spidermite.sprite")
 {
-  physic.enable_gravity(false);
+  physic.gravity_enabled = false;
 }
 
 void
@@ -53,7 +53,7 @@
 {
   sprite->set_action(dir == LEFT ? "left" : "right");
   mode = FLY_UP;
-  physic.set_velocity_y(FLYSPEED);
+  physic.vy = FLYSPEED;
   timer.start(FLYTIME/2);
 }
 
@@ -69,7 +69,7 @@
 SpiderMite::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) { // hit floor or roof?
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 }
 
@@ -79,10 +79,10 @@
   if(timer.check()) {
     if(mode == FLY_UP) {
       mode = FLY_DOWN;
-      physic.set_velocity_y(-FLYSPEED);
+      physic.vy = -FLYSPEED;
     } else if(mode == FLY_DOWN) {
       mode = FLY_UP;
-      physic.set_velocity_y(FLYSPEED);
+      physic.vy = FLYSPEED;
     }
     timer.start(FLYTIME);
   }

Modified: trunk/supertux/src/badguy/sspiky.cpp
===================================================================
--- trunk/supertux/src/badguy/sspiky.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/sspiky.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -42,7 +42,7 @@
 SSpiky::activate()
 {
   state = SSPIKY_SLEEPING;
-  physic.set_velocity_x(0);
+  physic.vx = 0;
   sprite->set_action(dir == LEFT ? "sleeping-left" : "sleeping-right");
 }
 

Modified: trunk/supertux/src/badguy/stalactite.cpp
===================================================================
--- trunk/supertux/src/badguy/stalactite.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/stalactite.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -59,7 +59,7 @@
   } else if(state == STALACTITE_SHAKING) {
     if(timer.check()) {
       state = STALACTITE_FALLING;
-      physic.enable_gravity(true);
+      physic.gravity_enabled = true;
     }
   } else if(state == STALACTITE_FALLING || state == STALACTITE_SQUISHED) {
     movement = physic.get_movement(elapsed_time);
@@ -85,7 +85,7 @@
     if (hit.bottom) squish();
   }
   if(state == STALACTITE_SQUISHED) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 }
 

Modified: trunk/supertux/src/badguy/stumpy.cpp
===================================================================
--- trunk/supertux/src/badguy/stumpy.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/stumpy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -61,7 +61,7 @@
     case STATE_INVINCIBLE:
       sprite->set_action(dir == LEFT ? "dizzy-left" : "dizzy-right");
       bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
-      physic.set_velocity_x(0);
+      physic.vx = 0;
       break;
     case STATE_NORMAL:
       WalkingBadguy::activate();
@@ -132,10 +132,10 @@
   switch (mystate) {
     case STATE_INVINCIBLE:
       if(hit.top || hit.bottom) {
-        physic.set_velocity_y(0);
+        physic.vy = 0;
       }
       if(hit.left || hit.right) {
-        physic.set_velocity_x(0);
+        physic.vx = 0;
       }
       break;
     case STATE_NORMAL:
@@ -150,10 +150,10 @@
   switch (mystate) {
     case STATE_INVINCIBLE:
       if(hit.top || hit.bottom) {
-	physic.set_velocity_y(0);
+	physic.vy = 0;
       }
       if(hit.left || hit.right) {
-	physic.set_velocity_x(0);
+	physic.vx = 0;
       }
       return CONTINUE;
       break;

Modified: trunk/supertux/src/badguy/toad.cpp
===================================================================
--- trunk/supertux/src/badguy/toad.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/toad.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -62,16 +62,16 @@
 Toad::set_state(ToadState newState)
 {
   if (newState == IDLE) {
-    physic.set_velocity_x(0);
-    physic.set_velocity_y(0);
+    physic.vx = 0;
+    physic.vy = 0;
     sprite->set_action(dir == LEFT ? "idle-left" : "idle-right");
 
     recover_timer.start(RECOVER_TIME);
   } else
   if (newState == JUMPING) {
     sprite->set_action(dir == LEFT ? "jumping-left" : "jumping-right");
-    physic.set_velocity_x(dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
-    physic.set_velocity_y(VERTICAL_SPEED);
+    physic.vx = (dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
+    physic.vy = VERTICAL_SPEED;
     sound_manager->play( HOP_SOUND, get_pos());
   } else
   if (newState == FALLING) {
@@ -108,7 +108,7 @@
   }
 
   // check if we hit left or right while moving in either direction
-  if(((physic.get_velocity_x() < 0) && hit.left) || ((physic.get_velocity_x() > 0) && hit.right)) {
+  if(((physic.vx < 0) && hit.left) || ((physic.vx > 0) && hit.right)) {
     /*
     dir = dir == LEFT ? RIGHT : LEFT;
     if (state == JUMPING) {
@@ -117,7 +117,7 @@
       sprite->set_action(dir == LEFT ? "idle-left" : "idle-right");
     }
     */
-    physic.set_velocity_x(-0.25*physic.get_velocity_x());
+    physic.vx = -0.25*physic.vx;
   }
 
   // check if we hit the floor while falling
@@ -128,7 +128,7 @@
 
   // check if we hit the roof while climbing
   if ((state == JUMPING) && hit.top) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
 }
@@ -148,7 +148,7 @@
   BadGuy::active_update(elapsed_time);
 
   // change sprite when we are falling
-  if ((state == JUMPING) && (physic.get_velocity_y() > 0)) {
+  if ((state == JUMPING) && (physic.vy > 0)) {
     set_state(FALLING);
     return;
   }

Modified: trunk/supertux/src/badguy/totem.cpp
===================================================================
--- trunk/supertux/src/badguy/totem.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/totem.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -77,7 +77,7 @@
 Totem::activate()
 {
   if (!carried_by) {
-    physic.set_velocity_x(dir == LEFT ? -WALKSPEED : WALKSPEED);
+    physic.vx = (dir == LEFT ? -WALKSPEED : WALKSPEED);
     sprite->set_action(dir == LEFT ? "walking-left" : "walking-right");
     return;
   } else {
@@ -120,7 +120,7 @@
 	float dx = (p1.x - p2.x);
 	if (fabsf(dx - 128) > 2) continue;
 
-	physic.set_velocity_y(JUMP_ON_SPEED_Y);
+	physic.vy = JUMP_ON_SPEED_Y;
 	p1.y -= 1;
 	this->set_pos(p1);
 	break;
@@ -168,7 +168,7 @@
 
   // If we hit something from above or below: stop moving in this direction
   if (hit.top || hit.bottom) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 
   // If we are hit from the direction we are facing: turn around
@@ -259,7 +259,7 @@
   bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
 
 
-  physic.set_velocity_y(JUMP_OFF_SPEED_Y);
+  physic.vy = JUMP_OFF_SPEED_Y;
 }
 
 void
@@ -275,8 +275,8 @@
   pos.y -= sprite->get_current_hitbox_height();
   set_pos(pos);
 
-  physic.set_velocity_x(base->physic.get_velocity_x());
-  physic.set_velocity_y(base->physic.get_velocity_y());
+  physic.vx = base->physic.vx;
+  physic.vy = base->physic.vy;
 }
 
 

Modified: trunk/supertux/src/badguy/walking_badguy.cpp
===================================================================
--- trunk/supertux/src/badguy/walking_badguy.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/walking_badguy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -52,7 +52,7 @@
     return;
   sprite->set_action(dir == LEFT ? walk_left_action : walk_right_action);
   bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
-  physic.set_velocity_x(dir == LEFT ? -walk_speed : walk_speed);
+  physic.vx = (dir == LEFT ? -walk_speed : walk_speed);
 }
 
 void
@@ -76,10 +76,10 @@
   update_on_ground_flag(hit);
 
   if (hit.top) {
-    if (physic.get_velocity_y() < 0) physic.set_velocity_y(0);
+    if (physic.vy < 0) physic.vy = 0;
   }
   if (hit.bottom) {
-    if (physic.get_velocity_y() > 0) physic.set_velocity_y(0);
+    if (physic.vy > 0) physic.vy = 0;
   }
 
   if ((hit.left && (hit.slope_normal.y == 0) && (dir == LEFT)) || (hit.right && (hit.slope_normal.y == 0) && (dir == RIGHT))) {
@@ -106,14 +106,14 @@
     return;
   dir = dir == LEFT ? RIGHT : LEFT;
   sprite->set_action(dir == LEFT ? walk_left_action : walk_right_action);
-  physic.set_velocity_x(-physic.get_velocity_x());
+  physic.vx = -physic.vx;
 }
 
 void
 WalkingBadguy::freeze()
 {
   BadGuy::freeze();
-  physic.set_velocity_x(0);
+  physic.vx = 0;
 }
 
 void
@@ -127,13 +127,13 @@
 float 
 WalkingBadguy::get_velocity_y() const
 {
-  return physic.get_velocity_y();
+  return physic.vy;
 }
 
 void 
 WalkingBadguy::set_velocity_y(float vy)
 {
-  physic.set_velocity_y(vy);
+  physic.vy = vy;
 }
 
 

Modified: trunk/supertux/src/badguy/yeti.cpp
===================================================================
--- trunk/supertux/src/badguy/yeti.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/yeti.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -88,20 +88,20 @@
 {
   switch(state) {
     case JUMP_DOWN:
-      physic.set_velocity_x((dir==RIGHT)?+JUMP_DOWN_VX:-JUMP_DOWN_VX);
+      physic.vx = (dir==RIGHT?JUMP_DOWN_VX:-JUMP_DOWN_VX);
       break;
     case RUN:
-      physic.set_velocity_x((dir==RIGHT)?+RUN_VX:-RUN_VX);
+      physic.vx = (dir==RIGHT?RUN_VX:-RUN_VX);
       if (((dir == RIGHT) && (get_pos().x >= RIGHT_JUMP_X)) || ((dir == LEFT) && (get_pos().x <= LEFT_JUMP_X))) jump_up();
       break;
     case JUMP_UP:
-      physic.set_velocity_x((dir==RIGHT)?+JUMP_UP_VX:-JUMP_UP_VX);
+      physic.vx = (dir==RIGHT?JUMP_UP_VX:-JUMP_UP_VX);
       if (((dir == RIGHT) && (get_pos().x >= RIGHT_STAND_X)) || ((dir == LEFT) && (get_pos().x <= LEFT_STAND_X))) be_angry();
       break;
     case BE_ANGRY:
       if(state_timer.check()) {
         sound_manager->play("sounds/yeti_gna.wav");
-        physic.set_velocity_y(STOMP_VY);
+        physic.vy = STOMP_VY;
         sprite->set_action((dir==RIGHT)?"stomp-right":"stomp-left");
       }
       break;
@@ -119,8 +119,8 @@
 Yeti::jump_down()
 {
   sprite->set_action((dir==RIGHT)?"jump-right":"jump-left");
-  physic.set_velocity_x((dir==RIGHT)?(+JUMP_DOWN_VX):(-JUMP_DOWN_VX));
-  physic.set_velocity_y(JUMP_DOWN_VY);
+  physic.vx = (dir==RIGHT?JUMP_DOWN_VX:-JUMP_DOWN_VX);
+  physic.vy = JUMP_DOWN_VY;
   state = JUMP_DOWN;
 }
 
@@ -128,8 +128,8 @@
 Yeti::run()
 {
   sprite->set_action((dir==RIGHT)?"run-right":"run-left");
-  physic.set_velocity_x((dir==RIGHT)?(+RUN_VX):(-RUN_VX));
-  physic.set_velocity_y(0);
+  physic.vx = (dir==RIGHT?RUN_VX:-RUN_VX);
+  physic.vy = 0;
   state = RUN;
 }
 
@@ -137,8 +137,8 @@
 Yeti::jump_up()
 {
   sprite->set_action((dir==RIGHT)?"jump-right":"jump-left");
-  physic.set_velocity_x((dir==RIGHT)?(+JUMP_UP_VX):(-JUMP_UP_VX));
-  physic.set_velocity_y(JUMP_UP_VY);
+  physic.vx = (dir==RIGHT?JUMP_UP_VX:-JUMP_UP_VX);
+  physic.vy = JUMP_UP_VY;
   state = JUMP_UP;
 }
 
@@ -149,8 +149,8 @@
   dir = (dir==RIGHT)?LEFT:RIGHT;
 
   sprite->set_action((dir==RIGHT)?"stand-right":"stand-left");
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
+  physic.vx = 0;
+  physic.vy = 0;
   if (hit_points < INITIAL_HITPOINTS) summon_snowball();
   stomp_count = 0;
   state = BE_ANGRY;
@@ -191,9 +191,9 @@
 
   if(hit_points <= 0) {
     // We're dead
-    physic.enable_gravity(true);
-    physic.set_velocity_x(0);
-    physic.set_velocity_y(0);
+    physic.gravity_enabled = true;
+    physic.vx = 0;
+    physic.vy = 0;
 
     state = SQUISHED;
     state_timer.start(SQUISH_TIME);
@@ -270,7 +270,7 @@
 {
   if(hit.top || hit.bottom) {
     // hit floor or roof
-    physic.set_velocity_y(0);
+    physic.vy = 0;
     switch (state) {
       case JUMP_DOWN:
 	run();

Modified: trunk/supertux/src/badguy/zeekling.cpp
===================================================================
--- trunk/supertux/src/badguy/zeekling.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/badguy/zeekling.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -52,8 +52,8 @@
 Zeekling::activate()
 {
   speed = systemRandom.rand(130, 171);
-  physic.set_velocity_x(dir == LEFT ? -speed : speed);
-  physic.enable_gravity(false);
+  physic.vx = (dir == LEFT ? -speed : speed);
+  physic.gravity_enabled = false;
   sprite->set_action(dir == LEFT ? "left" : "right");
 }
 
@@ -71,19 +71,19 @@
   if (state == FLYING) {
     dir = (dir == LEFT ? RIGHT : LEFT);
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.set_velocity_x(dir == LEFT ? -speed : speed);
+    physic.vx = (dir == LEFT ? -speed : speed);
   } else
   if (state == DIVING) {
     dir = (dir == LEFT ? RIGHT : LEFT);
     state = FLYING;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.set_velocity_x(dir == LEFT ? -speed : speed);
-    physic.set_velocity_y(0);
+    physic.vx = (dir == LEFT ? -speed : speed);
+    physic.vy = 0;
   } else
   if (state == CLIMBING) {
     dir = (dir == LEFT ? RIGHT : LEFT);
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.set_velocity_x(dir == LEFT ? -speed : speed);
+    physic.vx = (dir == LEFT ? -speed : speed);
   } else {
     assert(false);
   }
@@ -92,16 +92,16 @@
 void
 Zeekling::onBumpVertical() {
   if (state == FLYING) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   } else
   if (state == DIVING) {
     state = CLIMBING;
-    physic.set_velocity_y(-speed);
+    physic.vy = -speed;
     sprite->set_action(dir == LEFT ? "left" : "right");
   } else
   if (state == CLIMBING) {
     state = FLYING;
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
 }
 
@@ -172,7 +172,7 @@
   if (state == FLYING) {
     if (should_we_dive()) {
       state = DIVING;
-      physic.set_velocity_y(2*fabsf(physic.get_velocity_x()));
+      physic.vy = 2*fabsf(physic.vx);
       sprite->set_action(dir == LEFT ? "diving-left" : "diving-right");
     }
     BadGuy::active_update(elapsed_time);
@@ -184,7 +184,7 @@
     // stop climbing when we're back at initial height
     if (get_pos().y <= start_position.y) {
       state = FLYING;
-      physic.set_velocity_y(0);
+      physic.vy = 0;
     }
     BadGuy::active_update(elapsed_time);
     return;

Modified: trunk/supertux/src/object/bullet.cpp
===================================================================
--- trunk/supertux/src/object/bullet.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/bullet.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -37,7 +37,7 @@
   : life_count(3), type(type)
 {
   float speed = dir == RIGHT ? BULLET_XM : -BULLET_XM;
-  physic.set_velocity_x(speed + xm);
+  physic.vx = speed + xm;
 
   if(type == FIRE_BONUS) {
     sprite.reset(sprite_manager->create("images/objects/bullets/firebullet.sprite"));
@@ -84,11 +84,11 @@
 Bullet::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.set_velocity_y(-physic.get_velocity_y());
+    physic.vy = -physic.vy;
     life_count--;
   } else if(hit.left || hit.right) {
     if(type == ICE_BONUS) {
-      physic.set_velocity_x(-physic.get_velocity_x());
+      physic.vx = -physic.vx;
       life_count--;
     } else
       remove_me();

Modified: trunk/supertux/src/object/camera.cpp
===================================================================
--- trunk/supertux/src/object/camera.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/camera.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -279,7 +279,7 @@
   float speed_x = delta_x / elapsed_time;
 
   // limit our speed
-  float maxv = 130 + (fabsf(player->physic.get_velocity_x() * 1.3));
+  float maxv = 130 + (fabsf(player->physic.vx * 1.3));
   if(speed_x > maxv)
     speed_x = maxv;
   else if(speed_x < -maxv)

Modified: trunk/supertux/src/object/falling_coin.cpp
===================================================================
--- trunk/supertux/src/object/falling_coin.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/falling_coin.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -29,8 +29,8 @@
 {
   pos = start_position;
   sprite = sprite_manager->create("images/objects/coin/coin.sprite");
-  physic.set_velocity_y(-800);
-  physic.set_velocity_x(vel_x);
+  physic.vy = -800;
+  physic.vx = vel_x;
 }
 
 FallingCoin::~FallingCoin()

Modified: trunk/supertux/src/object/growup.cpp
===================================================================
--- trunk/supertux/src/object/growup.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/growup.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -30,8 +30,8 @@
 GrowUp::GrowUp(Direction direction)
 	: MovingSprite(Vector(0,0), "images/powerups/egg/egg.sprite", LAYER_OBJECTS, COLGROUP_MOVING)
 {
-  physic.enable_gravity(true);
-  physic.set_velocity_x((direction == LEFT)?-100:100);
+  physic.gravity_enabled = true;
+  physic.vx = (direction == LEFT?-100:100);
   sound_manager->preload("sounds/grow.wav");
 }
 
@@ -45,9 +45,9 @@
 GrowUp::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom)
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   if(hit.left || hit.right)
-    physic.set_velocity_x(-physic.get_velocity_x());
+    physic.vx = -physic.vx;
 }
 
 HitResponse

Modified: trunk/supertux/src/object/oneup.cpp
===================================================================
--- trunk/supertux/src/object/oneup.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/oneup.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -29,7 +29,8 @@
 OneUp::OneUp(const Vector& pos, Direction direction)
 	: MovingSprite(pos, "images/powerups/1up/1up.sprite", LAYER_FLOATINGOBJECTS, COLGROUP_TOUCHABLE)
 {
-  physic.set_velocity((direction == LEFT)?-100:100, -400);
+  physic.vx = ((direction == LEFT)?-100:100);
+  physic.vy = -400;
 }
 
 void

Modified: trunk/supertux/src/object/player.cpp
===================================================================
--- trunk/supertux/src/object/player.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/player.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -166,7 +166,7 @@
   on_ground_flag = false;
   grabbed_object = NULL;
 
-  physic.reset();
+  physic = Physic();
 }
 
 void
@@ -236,7 +236,7 @@
 
   // extend/shrink tux collision rectangle so that we fall through/walk over 1
   // tile holes
-  if(fabsf(physic.get_velocity_x()) > MAX_WALK_XM) {
+  if(fabsf(physic.vx) > MAX_WALK_XM) {
     set_width(34);
   } else {
     set_width(31.8);
@@ -245,8 +245,8 @@
   // on downward slopes, adjust vertical velocity so tux walks smoothly down
   if (on_ground()) {
     if(floor_normal.y != 0) {
-      if ((floor_normal.x * physic.get_velocity_x()) >= 0) {
-        physic.set_velocity_y(250);
+      if ((floor_normal.x * physic.vx) >= 0) {
+        physic.vy = 250;
       }
     }
   }
@@ -255,7 +255,7 @@
   if (backflipping) {
     //prevent player from changing direction when backflipping
     dir = (backflip_direction == 1) ? LEFT : RIGHT;
-    if (backflip_timer.started()) physic.set_velocity_x(100 * backflip_direction);
+    if (backflip_timer.started()) physic.vx = 100 * backflip_direction;
   }
 
   // set fall mode...
@@ -341,26 +341,26 @@
 void
 Player::apply_friction()
 {
-  if ((on_ground()) && (fabs(physic.get_velocity_x()) < WALK_SPEED)) {
-    physic.set_velocity_x(0);
-    physic.set_acceleration_x(0);
-  } else if(physic.get_velocity_x() < 0) {
-    physic.set_acceleration_x(WALK_ACCELERATION_X * 1.5);
+  if ((on_ground()) && (fabs(physic.vx) < WALK_SPEED)) {
+    physic.vx = 0;
+    physic.ax = 0;
+  } else if(physic.vx < 0) {
+    physic.ax = WALK_ACCELERATION_X * 1.5;
   } else {
-    physic.set_acceleration_x(WALK_ACCELERATION_X * -1.5);
+    physic.ax = WALK_ACCELERATION_X * -1.5;
   }
 }
 
 void
 Player::handle_horizontal_input()
 {
-  float vx = physic.get_velocity_x();
-  float vy = physic.get_velocity_y();
-  float ax = physic.get_acceleration_x();
-  float ay = physic.get_acceleration_y();
+  float vx = physic.vx;
+  float vy = physic.vy;
+  float ax = physic.ax;
+  float ay = physic.ay;
 
   float dirsign = 0;
-  if(!duck || physic.get_velocity_y() != 0) {
+  if(!duck || physic.vy != 0) {
     if(controller->hold(Controller::LEFT) && !controller->hold(Controller::RIGHT)) {
       old_dir = dir;
       dir = LEFT;
@@ -421,8 +421,10 @@
     }
   }
 
-  physic.set_velocity(vx, vy);
-  physic.set_acceleration(ax, ay);
+  physic.vx = vx;
+  physic.vy = vy;
+  physic.ax = ax;
+  physic.ay = ay;
 
   // we get slower when not pressing any keys
   if(dirsign == 0) {
@@ -446,7 +448,7 @@
   if (!is_big())
     return;
 
-  if (physic.get_velocity_y() != 0)
+  if (physic.vy != 0)
     return;
   if (!on_ground())
     return;
@@ -505,7 +507,7 @@
   if (!on_ground())
     return;
 
-  physic.set_velocity_y(yspeed);
+  physic.vy = yspeed;
   //bbox.move(Vector(0, -1));
   jumping = true;
   on_ground_flag = false;
@@ -526,17 +528,17 @@
   if(controller->pressed(Controller::JUMP) && (can_jump)) {
     if (duck) {
       // when running, only jump a little bit; else do a backflip
-      if ((physic.get_velocity_x() != 0) || (controller->hold(Controller::LEFT)) || (controller->hold(Controller::RIGHT))) do_jump(-300); else do_backflip();
+      if ((physic.vx != 0) || (controller->hold(Controller::LEFT)) || (controller->hold(Controller::RIGHT))) do_jump(-300); else do_backflip();
     } else {
       // jump a bit higher if we are running; else do a normal jump
-      if (fabs(physic.get_velocity_x()) > MAX_WALK_XM) do_jump(-580); else do_jump(-520);
+      if (fabs(physic.vx) > MAX_WALK_XM) do_jump(-580); else do_jump(-520);
     }
   }
   // Let go of jump key
   else if(!controller->hold(Controller::JUMP)) {
-    if (!backflipping && jumping && physic.get_velocity_y() < 0) {
+    if (!backflipping && jumping && physic.vy < 0) {
       jumping = false;
-      physic.set_velocity_y(0);
+      physic.vy = 0;
     }
   }
 
@@ -551,11 +553,11 @@
     butt_jump = false;
 
   // swimming
-  physic.set_acceleration_y(0);
+  physic.ay = 0;
   if (swimming) {
     if (controller->hold(Controller::UP) || controller->hold(Controller::JUMP))
-      physic.set_acceleration_y(-2000);
-    physic.set_velocity_y(physic.get_velocity_y() * 0.94);
+      physic.ay = -2000;
+    physic.vy = physic.vy * 0.94;
   }
 }
 
@@ -596,7 +598,7 @@
     if(Sector::current()->add_bullet(
          get_pos() + ((dir == LEFT)? Vector(0, bbox.get_height()/2)
                       : Vector(32, bbox.get_height()/2)),
-         physic.get_velocity_x(), dir))
+         physic.vx, dir))
       shooting_timer.start(SHOOTING_TIME);
   }
 
@@ -684,8 +686,10 @@
   if (controller->hold(Controller::ACTION)) {
     set_ghost_mode(false);
   }
-  physic.set_velocity(vx, vy);
-  physic.set_acceleration(0, 0);
+  physic.vx = vx;
+  physic.vy = vy;
+  physic.ax = 0;
+  physic.ay = 0;
 }
 
 void
@@ -876,7 +880,7 @@
     }
   else
     {
-    if (fabsf(physic.get_velocity_x()) < 1.0f) // standing
+    if (fabsf(physic.vx) < 1.0f) // standing
       {
       if(dir == LEFT)
         tux_body->set_action("stand-left");
@@ -905,7 +909,7 @@
     }
 
   // Tux is holding something
-  if ((grabbed_object != 0 && physic.get_velocity_y() == 0) ||
+  if ((grabbed_object != 0 && physic.vy == 0) ||
       (shooting_timer.get_timeleft() > 0 && !shooting_timer.check()))
     {
     if (duck)
@@ -969,18 +973,18 @@
 Player::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom) {
-    if(physic.get_velocity_y() > 0)
-      physic.set_velocity_y(0);
+    if(physic.vy > 0)
+      physic.vy = 0;
 
     on_ground_flag = true;
     floor_normal = hit.slope_normal;
   } else if(hit.top) {
-    if(physic.get_velocity_y() < 0)
-      physic.set_velocity_y(.2);
+    if(physic.vy < 0)
+      physic.vy =  .2;
   }
 
   if(hit.left || hit.right) {
-    physic.set_velocity_x(0);
+    physic.vx = 0;
   }
 
   // crushed?
@@ -1049,7 +1053,7 @@
 
   sound_manager->play("sounds/hurt.wav");
 
-  physic.set_velocity_x(0);
+  physic.vx = 0;
 
   if(!completely && is_big()) {
     if(player_status->bonus == FIRE_BONUS
@@ -1071,9 +1075,11 @@
             Vector(systemRandom.rand(5), systemRandom.rand(-32,18)),
             systemRandom.rand(-100,100)));
     }
-    physic.enable_gravity(true);
-    physic.set_acceleration(0, 0);
-    physic.set_velocity(0, -700);
+    physic.gravity_enabled = true;
+    physic.vx = 0;
+    physic.vy = -700;
+    physic.ax = 0;
+    physic.ay = 0;
     player_status->coins -= 25;
     set_bonus(NO_BONUS, true);
     dying = true;
@@ -1100,7 +1106,7 @@
   duck = false;
   last_ground_y = vector.y;
 
-  physic.reset();
+  physic = Physic();
 }
 
 void
@@ -1134,29 +1140,30 @@
 void
 Player::add_velocity(const Vector& velocity)
 {
-  physic.set_velocity(physic.get_velocity() + velocity);
+  physic.vx += velocity.x;
+  physic.vy += velocity.y;
 }
 
 void
 Player::add_velocity(const Vector& velocity, const Vector& end_speed)
 {
   if (end_speed.x > 0)
-    physic.set_velocity_x(std::min(physic.get_velocity_x() + velocity.x, end_speed.x));
+    physic.vx = std::min(physic.vx + velocity.x, end_speed.x);
   if (end_speed.x < 0)
-    physic.set_velocity_x(std::max(physic.get_velocity_x() + velocity.x, end_speed.x));
+    physic.vx = std::max(physic.vx + velocity.x, end_speed.x);
   if (end_speed.y > 0)
-    physic.set_velocity_y(std::min(physic.get_velocity_y() + velocity.y, end_speed.y));
+    physic.vy = std::min(physic.vy + velocity.y, end_speed.y);
   if (end_speed.y < 0)
-    physic.set_velocity_y(std::max(physic.get_velocity_y() + velocity.y, end_speed.y));
+    physic.vy = std::max(physic.vy + velocity.y, end_speed.y);
 }
 
 void
 Player::bounce(BadGuy& )
 {
   if(controller->hold(Controller::JUMP))
-    physic.set_velocity_y(-520);
+    physic.vy = -520;
   else
-    physic.set_velocity_y(-300);
+    physic.vy = -300;
 }
 
 //Scripting Functions Below
@@ -1167,10 +1174,10 @@
   if (deactivated)
     return;
   deactivated = true;
-  physic.set_velocity_x(0);
-  physic.set_velocity_y(0);
-  physic.set_acceleration_x(0);
-  physic.set_acceleration_y(0);
+  physic.vx = 0;
+  physic.vy = 0;
+  physic.ax = 0;
+  physic.ay = 0;
 }
 
 void
@@ -1183,7 +1190,7 @@
 
 void Player::walk(float speed)
 {
-  physic.set_velocity_x(speed);
+  physic.vx = speed;
 }
 
 void
@@ -1195,12 +1202,12 @@
   if (enable) {
     ghost_mode = true;
     set_group(COLGROUP_DISABLED);
-    physic.enable_gravity(false);
+    physic.gravity_enabled = false;
     log_debug << "You feel lightheaded. Use movement controls to float around, press ACTION to scare badguys." << std::endl;
   } else {
     ghost_mode = false;
     set_group(COLGROUP_MOVING);
-    physic.enable_gravity(true);
+    physic.gravity_enabled = true;
     log_debug << "You feel solid again." << std::endl;
   }
 }

Modified: trunk/supertux/src/object/powerup.cpp
===================================================================
--- trunk/supertux/src/object/powerup.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/powerup.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -36,7 +36,7 @@
   lisp.get("script", script);
   no_physics = false;
   lisp.get("disable-physics", no_physics);
-  physic.enable_gravity(true);
+  physic.gravity_enabled = true;
   sound_manager->preload("sounds/grow.wav");
   sound_manager->preload("sounds/fire-flower.wav");
 }
@@ -45,10 +45,10 @@
 PowerUp::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   }
   if(hit.right || hit.left) {
-    physic.set_velocity_x(-physic.get_velocity_x());
+    physic.vx = -physic.vx;
   }
 }
 

Modified: trunk/supertux/src/object/pushbutton.cpp
===================================================================
--- trunk/supertux/src/object/pushbutton.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/pushbutton.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -53,10 +53,10 @@
 {
   Player* player = dynamic_cast<Player*>(&other);
   if (!player) return FORCE_MOVE;
-  float vy = player->physic.get_velocity_y();
+  float vy = player->physic.vy;
 
   //player->add_velocity(Vector(0, -150));
-  player->physic.set_velocity_y(-150);
+  player->physic.vy = -150;
 
   if (state != OFF) return FORCE_MOVE;
   if (!hit.top) return FORCE_MOVE;

Modified: trunk/supertux/src/object/rock.cpp
===================================================================
--- trunk/supertux/src/object/rock.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/rock.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -64,7 +64,7 @@
   if( grabbed )
     return;
 
-  if (on_ground) physic.set_velocity_x(0);
+  if (on_ground) physic.vx = 0;
 
   movement = physic.get_movement(elapsed_time);
 }
@@ -73,11 +73,12 @@
 Rock::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom)
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   if(hit.left || hit.right)
-    physic.set_velocity_x(0);
+    physic.vx = 0;
   if(hit.crush)
-    physic.set_velocity(0, 0);
+    physic.vx = 0;
+    physic.vy = 0;
 
   if(hit.bottom  && !on_ground) {
     sound_manager->play(ROCK_SOUND, get_pos());
@@ -89,7 +90,7 @@
 Rock::collision(GameObject& other, const CollisionHit& hit)
 {
   if(!on_ground) {
-    if(hit.bottom && physic.get_velocity_y() > 200) {
+    if(hit.bottom && physic.vy > 200) {
       MovingObject* moving_object = dynamic_cast<MovingObject*> (&other);
       if(moving_object) {
         //Getting a rock on the head hurts. A lot.
@@ -118,9 +119,11 @@
   set_group(COLGROUP_MOVING_STATIC);
   on_ground = false;
   if (last_movement.norm() > 1) {
-    physic.set_velocity((dir == RIGHT) ? 200 : -200, -200);
+    physic.vx = ((dir == RIGHT) ? 200 : -200);
+    physic.vy = -200;
   } else {
-    physic.set_velocity(0, 0);
+    physic.vx = 0;
+    physic.vy = 0;
   }
   grabbed = false;
 }

Modified: trunk/supertux/src/object/scripted_object.cpp
===================================================================
--- trunk/supertux/src/object/scripted_object.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/scripted_object.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -79,7 +79,7 @@
 {
   printf("SetPos: %f %f\n", x, y);
   bbox.set_pos(Vector(x, y));
-  physic.reset();
+  physic = Physic();
 }
 
 float
@@ -104,13 +104,13 @@
 float
 ScriptedObject::get_velocity_x()
 {
-  return physic.get_velocity_x();
+  return physic.vx;
 }
 
 float
 ScriptedObject::get_velocity_y()
 {
-  return physic.get_velocity_y();
+  return physic.vy;
 }
 
 void
@@ -168,7 +168,8 @@
     return;
 
   if(new_vel_set) {
-    physic.set_velocity(new_vel.x, new_vel.y);
+    physic.vx = new_vel.x;
+    physic.vy = new_vel.y;
     new_vel_set = false;
   }
   movement = physic.get_movement(elapsed_time);
@@ -190,14 +191,14 @@
     return;
 
   if(hit.bottom) {
-    if(physic.get_velocity_y() > 0)
-      physic.set_velocity_y(0);
+    if(physic.vy > 0)
+      physic.vy = 0;
   } else if(hit.top) {
-    physic.set_velocity_y(.1);
+    physic.vy = .1;
   }
 
   if(hit.left || hit.right) {
-    physic.set_velocity_x(0);
+    physic.vx = 0;
   }
 }
 

Modified: trunk/supertux/src/object/skull_tile.cpp
===================================================================
--- trunk/supertux/src/object/skull_tile.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/skull_tile.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -70,7 +70,7 @@
   } else if(hit) {
     if(timer.check()) {
       falling = true;
-      physic.enable_gravity(true);
+      physic.gravity_enabled = true;
       timer.stop();
     } else if(!timer.started()) {
       timer.start(FALLTIME);

Modified: trunk/supertux/src/object/star.cpp
===================================================================
--- trunk/supertux/src/object/star.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/star.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -33,7 +33,8 @@
 Star::Star(const Vector& pos, Direction direction)
 	: MovingSprite(pos, "images/powerups/star/star.sprite", LAYER_OBJECTS, COLGROUP_MOVING)
 {
-  physic.set_velocity((direction == LEFT) ? -SPEED : SPEED, INITIALJUMP);
+  physic.vx = ((direction == LEFT) ? -SPEED : SPEED);
+  physic.vy = INITIALJUMP;
 }
 
 void
@@ -46,11 +47,11 @@
 Star::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom) {
-    physic.set_velocity_y(JUMPSPEED);
+    physic.vy = JUMPSPEED;
   } else if(hit.top) {
-    physic.set_velocity_y(0);
+    physic.vy = 0;
   } else if(hit.left || hit.right) {
-    physic.set_velocity_x(-physic.get_velocity_x());
+    physic.vx = -physic.vx;
   }
 }
 

Modified: trunk/supertux/src/object/trampoline.cpp
===================================================================
--- trunk/supertux/src/object/trampoline.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/trampoline.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -70,7 +70,7 @@
     Player* player = dynamic_cast<Player*> (&other);
     //Trampoline works for player
     if(player) {
-      float vy = player->physic.get_velocity_y();
+      float vy = player->physic.vy;
       //player is falling down on trampoline
       if(hit.top && vy >= 0) {
 	if(player->get_controller()->hold(Controller::JUMP)) {
@@ -78,7 +78,7 @@
 	} else {
 	  vy = VY_INITIAL;
 	}
-	player->physic.set_velocity_y(vy);
+	player->physic.vy = vy;
 	sound_manager->play(TRAMPOLINE_SOUND);
 	sprite->set_action("swinging", 1);
 	return FORCE_MOVE;

Modified: trunk/supertux/src/object/unstable_tile.cpp
===================================================================
--- trunk/supertux/src/object/unstable_tile.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/object/unstable_tile.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -63,7 +63,7 @@
         state = STATE_DISINTEGRATING;
         sprite->set_action("disintegrating", 1);
         set_group(COLGROUP_DISABLED);
-        physic.enable_gravity(true);
+        physic.gravity_enabled = true;
       }
       break;
 

Modified: trunk/supertux/src/physic.cpp
===================================================================
--- trunk/supertux/src/physic.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/physic.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -23,140 +23,14 @@
 #include "physic.hpp"
 
 Physic::Physic()
-    : ax(0), ay(0), vx(0), vy(0), gravity_enabled_flag(true), gravity(1000)
+    : ax(0), ay(0), vx(0), vy(0), gravity_enabled(true), gravity(1000)
 {
 }
 
-Physic::~Physic()
-{
-}
-
-void
-Physic::reset()
-{
-    ax = ay = vx = vy = 0;
-    gravity_enabled_flag = true;
-}
-
-void
-Physic::set_velocity_x(float nvx)
-{
-  vx = nvx;
-}
-
-void
-Physic::set_velocity_y(float nvy)
-{
-  vy = nvy;
-}
-
-void
-Physic::set_velocity(float nvx, float nvy)
-{
-  vx = nvx;
-  vy = nvy;
-}
-
-void
-Physic::set_velocity(const Vector& vector)
-{
-  vx = vector.x;
-  vy = vector.y;
-}
-
-void Physic::inverse_velocity_x()
-{
-  vx = -vx;
-}
-
-void Physic::inverse_velocity_y()
-{
-  vy = -vy;
-}
-
-float
-Physic::get_velocity_x() const
-{
-    return vx;
-}
-
-float
-Physic::get_velocity_y() const
-{
-    return vy;
-}
-
 Vector
-Physic::get_velocity() const
-{
-  return Vector(vx, vy);
-}
-
-void
-Physic::set_acceleration_x(float nax)
-{
-  ax = nax;
-}
-
-void
-Physic::set_acceleration_y(float nay)
-{
-  ay = nay;
-}
-
-void
-Physic::set_acceleration(float nax, float nay)
-{
-  ax = nax;
-  ay = nay;
-}
-
-float
-Physic::get_acceleration_x() const
-{
-  return ax;
-}
-
-float
-Physic::get_acceleration_y() const
-{
-  return ay;
-}
-
-Vector
-Physic::get_acceleration() const
-{
-  return Vector(ax, ay);
-}
-
-void
-Physic::enable_gravity(bool enable_gravity)
-{
-  gravity_enabled_flag = enable_gravity;
-}
-
-bool
-Physic::gravity_enabled() const
-{
-  return gravity_enabled_flag;
-}
-
-void
-Physic::set_gravity(float gravity)
-{
-  this->gravity = gravity;
-}
-
-float
-Physic::get_gravity() const
-{
-  return gravity;
-}
-
-Vector
 Physic::get_movement(float elapsed_time)
 {
-  float grav = gravity_enabled_flag ? gravity : 0;
+  float grav = gravity_enabled ? gravity : 0;
 
   Vector result(
       vx * elapsed_time + ax * elapsed_time * elapsed_time,

Modified: trunk/supertux/src/physic.hpp
===================================================================
--- trunk/supertux/src/physic.hpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/physic.hpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -31,58 +31,15 @@
 {
 public:
   Physic();
-  ~Physic();
 
-  /// Resets all velocities and accelerations to 0.
-  void reset();
-
-  /// Sets velocity to a fixed value.
-  void set_velocity(float vx, float vy);
-  void set_velocity(const Vector& vector);
-
-  void set_velocity_x(float vx);
-  void set_velocity_y(float vy);
-
-  /// Velocities invertion.
-  void inverse_velocity_x();
-  void inverse_velocity_y();
-
-  Vector get_velocity() const;
-  float get_velocity_x() const;
-  float get_velocity_y() const;
-
-  /// Set acceleration.
-  /** Sets acceleration applied to the object. (Note that gravity is
-   * eventually added to the vertical acceleration)
-   */
-  void set_acceleration(float ax, float ay);
-
-  void set_acceleration_x(float ax);
-  void set_acceleration_y(float ay);
-
-  Vector get_acceleration() const;
-  float get_acceleration_x() const;
-  float get_acceleration_y() const;
-
-  /// Enables or disables handling of gravity.
-  void enable_gravity(bool gravity_enabled);
-  bool gravity_enabled() const;
-
-  /// Set gravity to apply to object when enabled
-  void set_gravity(float gravity);
-
-  /// Get gravity to apply to object when enabled
-  float get_gravity() const;
-
   Vector get_movement(float elapsed_time);
 
-private:
   /// horizontal and vertical acceleration
   float ax, ay;
   /// horizontal and vertical velocity
   float vx, vy;
-  /// should we respect gravity in out calculations?
-  bool gravity_enabled_flag;
+  /// should we respect gravity in our calculations?
+  bool gravity_enabled;
   /// current gravity to apply to object, if enabled
   float gravity;
 };

Modified: trunk/supertux/src/scripting/functions.cpp
===================================================================
--- trunk/supertux/src/scripting/functions.cpp	2007-01-02 10:30:15 UTC (rev 4522)
+++ trunk/supertux/src/scripting/functions.cpp	2007-01-02 16:14:53 UTC (rev 4523)
@@ -203,7 +203,7 @@
 {
   if (!validate_sector_player()) return;
   ::Player* tux = Sector::current()->player; // Scripting::Player != ::Player
-  tux->physic.set_velocity_x(tux->physic.get_velocity_x()*3);
+  tux->physic.vx = tux->physic.vx*3;
 }
 
 void invincible()



From wolfgangb at mail.berlios.de  Tue Jan  2 18:07:52 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Tue, 2 Jan 2007 18:07:52 +0100
Subject: [Supertux-commit] r4524 - in trunk/supertux/src: . badguy object
	scripting
Message-ID: <200701021707.l02H7qv3014013@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-02 18:07:50 +0100 (Tue, 02 Jan 2007)
New Revision: 4524

Modified:
   trunk/supertux/src/badguy/angrystone.cpp
   trunk/supertux/src/badguy/badguy.cpp
   trunk/supertux/src/badguy/bomb.cpp
   trunk/supertux/src/badguy/bouncing_snowball.cpp
   trunk/supertux/src/badguy/dart.cpp
   trunk/supertux/src/badguy/fish.cpp
   trunk/supertux/src/badguy/flyingsnowball.cpp
   trunk/supertux/src/badguy/jumpy.cpp
   trunk/supertux/src/badguy/kugelblitz.cpp
   trunk/supertux/src/badguy/mole.cpp
   trunk/supertux/src/badguy/mole_rock.cpp
   trunk/supertux/src/badguy/mriceblock.cpp
   trunk/supertux/src/badguy/mrrocket.cpp
   trunk/supertux/src/badguy/plant.cpp
   trunk/supertux/src/badguy/skullyhop.cpp
   trunk/supertux/src/badguy/snail.cpp
   trunk/supertux/src/badguy/spidermite.cpp
   trunk/supertux/src/badguy/sspiky.cpp
   trunk/supertux/src/badguy/stalactite.cpp
   trunk/supertux/src/badguy/stumpy.cpp
   trunk/supertux/src/badguy/toad.cpp
   trunk/supertux/src/badguy/totem.cpp
   trunk/supertux/src/badguy/walking_badguy.cpp
   trunk/supertux/src/badguy/yeti.cpp
   trunk/supertux/src/badguy/zeekling.cpp
   trunk/supertux/src/object/bullet.cpp
   trunk/supertux/src/object/camera.cpp
   trunk/supertux/src/object/falling_coin.cpp
   trunk/supertux/src/object/growup.cpp
   trunk/supertux/src/object/oneup.cpp
   trunk/supertux/src/object/player.cpp
   trunk/supertux/src/object/powerup.cpp
   trunk/supertux/src/object/pushbutton.cpp
   trunk/supertux/src/object/rock.cpp
   trunk/supertux/src/object/scripted_object.cpp
   trunk/supertux/src/object/skull_tile.cpp
   trunk/supertux/src/object/star.cpp
   trunk/supertux/src/object/trampoline.cpp
   trunk/supertux/src/object/unstable_tile.cpp
   trunk/supertux/src/physic.cpp
   trunk/supertux/src/physic.hpp
   trunk/supertux/src/scripting/functions.cpp
Log:
Sorry, was too early for that patch.

Modified: trunk/supertux/src/badguy/angrystone.cpp
===================================================================
--- trunk/supertux/src/badguy/angrystone.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/angrystone.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -47,9 +47,9 @@
 void
 AngryStone::activate()
 {
-  physic.vx = 0;
-  physic.vy = 0;
-  physic.gravity_enabled = true;
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
+  physic.enable_gravity(true);
   sprite->set_action("idle");
 }
 
@@ -63,9 +63,9 @@
       (hit.normal.x == -attackDirection.x) && (hit.normal.y == attackDirection.y)) {
     state = IDLE;
     sprite->set_action("idle");
-    physic.vx = 0;
-    physic.vy = 0;
-    physic.gravity_enabled = true;
+    physic.set_velocity_x(0);
+    physic.set_velocity_y(0);
+    physic.enable_gravity(true);
     oldWallDirection.x = attackDirection.x;
     oldWallDirection.y = attackDirection.y;
   }
@@ -143,9 +143,9 @@
       sprite->set_action("attacking");
       timer.start(ATTACK_TIME);
       state = ATTACKING;
-      physic.gravity_enabled = false;
-      physic.vx = SPEED * attackDirection.x;
-      physic.vy = SPEED * attackDirection.y;
+      physic.enable_gravity(false);
+      physic.set_velocity_x(SPEED * attackDirection.x);
+      physic.set_velocity_y(SPEED * attackDirection.y);
       oldWallDirection.x = 0;
       oldWallDirection.y = 0;
     }
@@ -156,9 +156,9 @@
       timer.start(RECOVER_TIME);
       state = RECOVERING;
       sprite->set_action("idle");
-      physic.gravity_enabled = true;
-      physic.vx = 0;
-      physic.vy = 0;
+      physic.enable_gravity(true);
+      physic.set_velocity_x(0);
+      physic.set_velocity_y(0);
     }
   }
 
@@ -166,9 +166,9 @@
     if (timer.check()) {
       state = IDLE;
       sprite->set_action("idle");
-      physic.gravity_enabled = true;
-      physic.vx = 0;
-      physic.vy = 0;
+      physic.enable_gravity(true);
+      physic.set_velocity_x(0);
+      physic.set_velocity_y(0);
     }
   }
 

Modified: trunk/supertux/src/badguy/badguy.cpp
===================================================================
--- trunk/supertux/src/badguy/badguy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/badguy.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -228,8 +228,8 @@
 void
 BadGuy::collision_solid(const CollisionHit& hit)
 {
-  physic.vx = 0;
-  physic.vy = 0;
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
   update_on_ground_flag(hit);
 }
 
@@ -309,9 +309,9 @@
 BadGuy::kill_squished(GameObject& object)
 {
   sound_manager->play("sounds/squish.wav", get_pos());
-  physic.gravity_enabled = true;
-  physic.vx = 0;
-  physic.vy = 0;
+  physic.enable_gravity(true);
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
   set_state(STATE_SQUISHED);
   set_group(COLGROUP_MOVING_ONLY_STATIC);
   Player* player = dynamic_cast<Player*>(&object);
@@ -326,8 +326,8 @@
 {
   sound_manager->play("sounds/fall.wav", get_pos());
   if (countMe) Sector::current()->get_level()->stats.badguys++;
-  physic.vy = 0;
-  physic.gravity_enabled = true;
+  physic.set_velocity_y(0);
+  physic.enable_gravity(true);
   set_state(STATE_FALLING);
 }
 

Modified: trunk/supertux/src/badguy/bomb.cpp
===================================================================
--- trunk/supertux/src/badguy/bomb.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/bomb.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -61,7 +61,7 @@
 Bomb::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom)
-    physic.vy = 0;
+    physic.set_velocity_y(0);
 }
 
 HitResponse

Modified: trunk/supertux/src/badguy/bouncing_snowball.cpp
===================================================================
--- trunk/supertux/src/badguy/bouncing_snowball.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/bouncing_snowball.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -48,7 +48,7 @@
 void
 BouncingSnowball::activate()
 {
-  physic.vx = (dir == LEFT ? -WALKSPEED : WALKSPEED);
+  physic.set_velocity_x(dir == LEFT ? -WALKSPEED : WALKSPEED);
   sprite->set_action(dir == LEFT ? "left" : "right");
 }
 
@@ -65,18 +65,18 @@
 {
   if(hit.bottom) {
     if(get_state() == STATE_ACTIVE) {
-      physic.vy = JUMPSPEED;
+      physic.set_velocity_y(JUMPSPEED);
     } else {
-      physic.vy = 0;
+      physic.set_velocity_y(0);
     }
   } else if(hit.top) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
   if(hit.left || hit.right) { // left or right collision
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.vx = -physic.vx;
+    physic.set_velocity_x(-physic.get_velocity_x());
   }
 }
 

Modified: trunk/supertux/src/badguy/dart.cpp
===================================================================
--- trunk/supertux/src/badguy/dart.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/dart.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -31,7 +31,7 @@
 Dart::Dart(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/dart/dart.sprite"), parent(0)
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
   countMe = false;
   sound_manager->preload("sounds/darthit.wav");
   sound_manager->preload("sounds/stomp.wav");
@@ -40,7 +40,7 @@
 Dart::Dart(const Vector& pos, Direction d, const BadGuy* parent = 0)
 	: BadGuy(pos, d, "images/creatures/dart/dart.sprite"), parent(parent)
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
   countMe = false;
   sound_manager->preload("sounds/darthit.wav");
   sound_manager->preload("sounds/stomp.wav");
@@ -80,7 +80,7 @@
 void
 Dart::activate()
 {
-  physic.vx = (dir == LEFT ? -::SPEED : ::SPEED);
+  physic.set_velocity_x(dir == LEFT ? -::SPEED : ::SPEED);
   sprite->set_action(dir == LEFT ? "flying-left" : "flying-right");
 
   sound_source.reset(sound_manager->create_sound_source(SOUNDFILE));

Modified: trunk/supertux/src/badguy/fish.cpp
===================================================================
--- trunk/supertux/src/badguy/fish.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/fish.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -30,13 +30,13 @@
 Fish::Fish(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/fish/fish.sprite", LAYER_TILES-1), stop_y(0)
 {
-  physic.gravity_enabled = true;
+  physic.enable_gravity(true);
 }
 
 Fish::Fish(const Vector& pos)
 	: BadGuy(pos, "images/creatures/fish/fish.sprite", LAYER_TILES-1), stop_y(0)
 {
-  physic.gravity_enabled = true;
+  physic.enable_gravity(true);
 }
 
 void
@@ -75,7 +75,7 @@
 Fish::hit(const CollisionHit& hit)
 {
   if(hit.top) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
   return CONTINUE;
@@ -84,7 +84,7 @@
 void
 Fish::collision_tile(uint32_t tile_attributes)
 {
-  if ((tile_attributes & Tile::WATER) && (physic.vy >= 0)) {
+  if ((tile_attributes & Tile::WATER) && (physic.get_velocity_y() >= 0)) {
 
     // initialize stop position if uninitialized
     if (stop_y == 0) stop_y = get_pos().y + get_bbox().get_height();
@@ -111,13 +111,13 @@
 
   // set sprite
   if(!frozen)
-    sprite->set_action(physic.vy < 0 ? "normal" : "down");
+    sprite->set_action(physic.get_velocity_y() < 0 ? "normal" : "down");
 
   // we can't afford flying out of the tilemap, 'cause the engine would remove us.
   if ((get_pos().y - 31.8) < 0) // too high, let us fall
   {
-    physic.vy = 0;
-    physic.gravity_enabled = true;
+    physic.set_velocity_y(0);
+    physic.enable_gravity(true);
   }
 }
 
@@ -126,15 +126,15 @@
 {
   waiting.start(FISH_WAIT_TIME);
   set_group(COLGROUP_DISABLED);
-  physic.gravity_enabled = false;
-  physic.vy = 0;
+  physic.enable_gravity(false);
+  physic.set_velocity_y(0);
 }
 
 void
 Fish::jump()
 {
-  physic.vy = FISH_JUMP_POWER;
-  physic.gravity_enabled = true;
+  physic.set_velocity_y(FISH_JUMP_POWER);
+  physic.enable_gravity(true);
   set_group(COLGROUP_MOVING);
 }
 
@@ -142,7 +142,7 @@
 Fish::freeze()
 {
   BadGuy::freeze();
-  sprite->set_action(physic.vy < 0 ? "iced" : "iced-down");
+  sprite->set_action(physic.get_velocity_y() < 0 ? "iced" : "iced-down");
   waiting.stop();
 }
 

Modified: trunk/supertux/src/badguy/flyingsnowball.cpp
===================================================================
--- trunk/supertux/src/badguy/flyingsnowball.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/flyingsnowball.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -37,13 +37,13 @@
 FlyingSnowBall::FlyingSnowBall(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/flying_snowball/flying_snowball.sprite")
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 FlyingSnowBall::FlyingSnowBall(const Vector& pos)
 	: BadGuy(pos, "images/creatures/flying_snowball/flying_snowball.sprite")
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 void
@@ -62,7 +62,7 @@
 {
   sprite->set_action(dir == LEFT ? "left" : "right");
   mode = FLY_UP;
-  physic.vy = FLYSPEED;
+  physic.set_velocity_y(FLYSPEED);
   timer.start(FLYTIME/2);
   puff_timer.start(systemRandom.randf(PUFF_INTERVAL_MIN, PUFF_INTERVAL_MAX));
 }
@@ -79,7 +79,7 @@
 FlyingSnowBall::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 }
 
@@ -89,14 +89,14 @@
   if(timer.check()) {
     if(mode == FLY_UP) {
       mode = FLY_DOWN;
-      physic.vy = -FLYSPEED;
+      physic.set_velocity_y(-FLYSPEED);
 
       // stop puffing
       puff_timer.stop();
 
     } else if(mode == FLY_DOWN) {
       mode = FLY_UP;
-      physic.vy = FLYSPEED;
+      physic.set_velocity_y(FLYSPEED);
 
       // roll a dice whether to start puffing
       if (systemRandom.randf(0, 1) < PUFF_PROBABILITY) {

Modified: trunk/supertux/src/badguy/jumpy.cpp
===================================================================
--- trunk/supertux/src/badguy/jumpy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/jumpy.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -63,11 +63,11 @@
       groundhit_pos_set = true;
     }
 
-    physic.vy = (frozen ? 0 : JUMPSPEED);
+    physic.set_velocity_y(frozen ? 0 : JUMPSPEED);
     // TODO create a nice sound for this...
     //sound_manager->play("sounds/skid.wav");
   } else if(chit.top) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
   return CONTINUE;
@@ -106,7 +106,7 @@
 Jumpy::freeze()
 {
   BadGuy::freeze();
-  physic.vy = std::max(0.0f, physic.vy);
+  physic.set_velocity_y(std::max(0.0f, physic.get_velocity_y()));
   sprite->set_action(dir == LEFT ? "left-iced" : "right-iced");
 }
 

Modified: trunk/supertux/src/badguy/kugelblitz.cpp
===================================================================
--- trunk/supertux/src/badguy/kugelblitz.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/kugelblitz.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -38,7 +38,7 @@
 {
   reader.get("x", start_position.x);
   sprite->set_action("falling");
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 void
@@ -54,8 +54,8 @@
 void
 Kugelblitz::activate()
 {
-  physic.vy = 300;
-  physic.vx = -20; //fall a little to the left
+  physic.set_velocity_y(300);
+  physic.set_velocity_x(-20); //fall a little to the left
   direction = 1;
   dying = false;
 }
@@ -107,16 +107,16 @@
       groundhit_pos_set = true;
     }
     sprite->set_action("flying");
-    physic.vy = 0;
+    physic.set_velocity_y(0);
     //Set random initial speed and direction
     direction = systemRandom.rand(2)? 1: -1;
     int speed = (BASE_SPEED + (systemRandom.rand(RAND_SPEED))) * direction;
-    physic.vx = speed;
+    physic.set_velocity_x(speed);
     movement_timer.start(MOVETIME);
     lifetime.start(LIFETIME);
 
   } else if(hit.top) { // bumped on roof
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
   return CONTINUE;
@@ -133,7 +133,7 @@
       if (movement_timer.check()) {
         if (direction == 1) direction = -1; else direction = 1;
         int speed = (BASE_SPEED + (systemRandom.rand(RAND_SPEED))) * direction;
-        physic.vx = speed;
+        physic.set_velocity_x(speed);
         movement_timer.start(MOVETIME);
       }
     }

Modified: trunk/supertux/src/badguy/mole.cpp
===================================================================
--- trunk/supertux/src/badguy/mole.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/mole.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -35,13 +35,13 @@
 Mole::Mole(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/mole/mole.sprite", LAYER_TILES-1), state(PRE_THROWING)
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 Mole::Mole(const Vector& pos)
 	: BadGuy(pos, "images/creatures/mole/mole.sprite", LAYER_TILES-1), state(PRE_THROWING)
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 void

Modified: trunk/supertux/src/badguy/mole_rock.cpp
===================================================================
--- trunk/supertux/src/badguy/mole_rock.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/mole_rock.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -25,14 +25,14 @@
 MoleRock::MoleRock(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/mole/mole_rock.sprite", LAYER_TILES - 2), parent(0), initial_velocity(Vector(0, -400))
 {
-  physic.gravity_enabled = true;
+  physic.enable_gravity(true);
   countMe = false;
 }
 
 MoleRock::MoleRock(const Vector& pos, const Vector& velocity, const BadGuy* parent = 0)
 	: BadGuy(pos, LEFT, "images/creatures/mole/mole_rock.sprite", LAYER_TILES - 2), parent(parent), initial_velocity(velocity)
 {
-  physic.gravity_enabled = true;
+  physic.enable_gravity(true);
   countMe = false;
 }
 
@@ -67,8 +67,7 @@
 void
 MoleRock::activate()
 {
-  physic.vx = initial_velocity.x;
-  physic.vy = initial_velocity.y;
+  physic.set_velocity(initial_velocity);
   sprite->set_action("default");
 }
 

Modified: trunk/supertux/src/badguy/mriceblock.cpp
===================================================================
--- trunk/supertux/src/badguy/mriceblock.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/mriceblock.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -92,7 +92,7 @@
   update_on_ground_flag(hit);
 
   if(hit.top || hit.bottom) { // floor or roof
-    physic.vy = 0;
+    physic.set_velocity_y(0);
     return;
   }
 
@@ -105,17 +105,17 @@
       if(hit.right && dir == RIGHT) {
         dir = LEFT;
         sound_manager->play("sounds/iceblock_bump.wav", get_pos());
-        physic.vx = -KICKSPEED;
+        physic.set_velocity_x(-KICKSPEED);
       } else if(hit.left && dir == LEFT) {
         dir = RIGHT;
         sound_manager->play("sounds/iceblock_bump.wav", get_pos());
-        physic.vx = KICKSPEED;
+        physic.set_velocity_x(KICKSPEED);
       }
       sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
       break;
     }
     case ICESTATE_FLAT:
-      physic.vx = 0;
+      physic.set_velocity_x(0);
       break;
     case ICESTATE_GRABBED:
       break;
@@ -220,8 +220,8 @@
       break;
     case ICESTATE_FLAT:
       sound_manager->play("sounds/stomp.wav", get_pos());
-      physic.vx = 0;
-      physic.vy = 0;
+      physic.set_velocity_x(0);
+      physic.set_velocity_y(0);
 
       sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
       flat_timer.start(4);
@@ -229,7 +229,7 @@
     case ICESTATE_KICKED:
       sound_manager->play("sounds/kick.wav", get_pos());
 
-      physic.vx = (dir == LEFT ? -KICKSPEED : KICKSPEED);
+      physic.set_velocity_x(dir == LEFT ? -KICKSPEED : KICKSPEED);
       sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
       // we should slide above 1 block holes now...
       bbox.set_size(34, 31.8);

Modified: trunk/supertux/src/badguy/mrrocket.cpp
===================================================================
--- trunk/supertux/src/badguy/mrrocket.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/mrrocket.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -47,8 +47,8 @@
 void
 MrRocket::activate()
 {
-  physic.vx = (dir == LEFT ? -SPEED : SPEED);
-  physic.gravity_enabled = false;
+  physic.set_velocity_x(dir == LEFT ? -SPEED : SPEED);
+  physic.enable_gravity(false);
   sprite->set_action(dir == LEFT ? "left" : "right");
 }
 
@@ -78,10 +78,10 @@
 MrRocket::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   } else if(hit.left || hit.right) {
     sprite->set_action(dir == LEFT ? "collision-left" : "collision-right");
-    physic.vx = 0;
+    physic.set_velocity_x(0);
     collision_timer.start(0.2, true);
   }
 }

Modified: trunk/supertux/src/badguy/plant.cpp
===================================================================
--- trunk/supertux/src/badguy/plant.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/plant.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -48,7 +48,7 @@
   dir = dir == LEFT ? RIGHT : LEFT;
 
   state = PLANT_SLEEPING;
-  physic.vx = 0;
+  physic.set_velocity_x(0);
   sprite->set_action(dir == LEFT ? "sleeping-left" : "sleeping-right");
 }
 
@@ -56,11 +56,11 @@
 Plant::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   } else if(hit.left || hit.right) {
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.vx = -physic.vx;
+    physic.set_velocity_x(-physic.get_velocity_x());
   }
 }
 
@@ -72,7 +72,7 @@
   if(hit.left || hit.right) {
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.vx = -physic.vx;
+    physic.set_velocity_x(-physic.get_velocity_x());
   }
 
   return CONTINUE;
@@ -107,7 +107,7 @@
     if(timer.check()) {
       // start walking
       sprite->set_action(dir == LEFT ? "left" : "right");
-      physic.vx = (dir == LEFT ? -WALKSPEED : WALKSPEED);
+      physic.set_velocity_x(dir == LEFT ? -WALKSPEED : WALKSPEED);
       state = PLANT_WALKING;
     }
   }

Modified: trunk/supertux/src/badguy/skullyhop.cpp
===================================================================
--- trunk/supertux/src/badguy/skullyhop.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/skullyhop.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -63,8 +63,8 @@
 SkullyHop::set_state(SkullyHopState newState)
 {
   if (newState == STANDING) {
-    physic.vx = 0;
-    physic.vy = 0;
+    physic.set_velocity_x(0);
+    physic.set_velocity_y(0);
     sprite->set_action(dir == LEFT ? "standing-left" : "standing-right");
 
     float recover_time = systemRandom.randf(MIN_RECOVER_TIME,MAX_RECOVER_TIME);
@@ -75,8 +75,8 @@
   } else
   if (newState == JUMPING) {
     sprite->set_action(dir == LEFT ? "jumping-left" : "jumping-right");
-    physic.vx = (dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
-    physic.vy = VERTICAL_SPEED;
+    physic.set_velocity_x(dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
+    physic.set_velocity_y(VERTICAL_SPEED);
     sound_manager->play( HOP_SOUND, get_pos());
   }
 
@@ -104,19 +104,19 @@
     return;
 
   // check if we hit the floor while falling
-  if(hit.bottom && physic.vy > 0 ) {
+  if(hit.bottom && physic.get_velocity_y() > 0 ) {
     set_state(STANDING);
   }
   // check if we hit the roof while climbing
   if(hit.top) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
   // check if we hit left or right while moving in either direction
   if(hit.left || hit.right) {
     dir = dir == LEFT ? RIGHT : LEFT;
     sprite->set_action(dir == LEFT ? "jumping-left" : "jumping-right");
-    physic.vx = -0.25*physic.vx;
+    physic.set_velocity_x(-0.25*physic.get_velocity_x());
   }
 }
 

Modified: trunk/supertux/src/badguy/snail.cpp
===================================================================
--- trunk/supertux/src/badguy/snail.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/snail.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -79,8 +79,8 @@
   sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
   sprite->set_fps(64);
 
-  physic.vx = 0;
-  physic.vy = 0;
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
 
   flat_timer.start(4);
 }
@@ -92,8 +92,8 @@
   sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
   sprite->set_fps(64);
 
-  physic.vx = 0;
-  physic.vy = 0;
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
 
   // start a timer to delay addition of upward movement until we are (hopefully) out from under the player
   kicked_delay_timer.start(0.05);
@@ -125,16 +125,16 @@
 
     case STATE_KICKED_DELAY:
       if (kicked_delay_timer.check()) {
-	physic.vx = (dir == LEFT ? -KICKSPEED : KICKSPEED);
-	physic.vy = KICKSPEED_Y;
+	physic.set_velocity_x(dir == LEFT ? -KICKSPEED : KICKSPEED);
+	physic.set_velocity_y(KICKSPEED_Y);
 	state = STATE_KICKED;
       }
       BadGuy::active_update(elapsed_time);
       break;
 
     case STATE_KICKED:
-      physic.vx = physic.vx * pow(0.99, elapsed_time/0.02);
-      if (fabsf(physic.vx) < walk_speed) be_normal();
+      physic.set_velocity_x(physic.get_velocity_x() * pow(0.99, elapsed_time/0.02));
+      if (fabsf(physic.get_velocity_x()) < walk_speed) be_normal();
       BadGuy::active_update(elapsed_time);
       break;
 
@@ -152,22 +152,22 @@
       break;
     case STATE_FLAT:
       if(hit.top || hit.bottom) {
-	physic.vy = 0;
+	physic.set_velocity_y(0);
       }
       if(hit.left || hit.right) {
       }
       break;
     case STATE_KICKED_DELAY:
       if(hit.top || hit.bottom) {
-	physic.vy = 0;
+	physic.set_velocity_y(0);
       }
       if(hit.left || hit.right) {
-	physic.vy = 0;
+	physic.set_velocity_x(0);
       }
       break;
     case STATE_KICKED:
       if(hit.top || hit.bottom) {
-	physic.vy = 0;
+	physic.set_velocity_y(0);
       }
       if(hit.left || hit.right) {
 	sound_manager->play("sounds/iceblock_bump.wav", get_pos());
@@ -176,8 +176,8 @@
 	  dir = (dir == LEFT) ? RIGHT : LEFT;
 	  sprite->set_action(dir == LEFT ? "flat-left" : "flat-right");
 
-	  physic.vx = -physic.vx*0.75;
-	  if (fabsf(physic.vx) < walk_speed) be_normal();
+	  physic.set_velocity_x(-physic.get_velocity_x()*0.75);
+	  if (fabsf(physic.get_velocity_x()) < walk_speed) be_normal();
 	}
 
       }

Modified: trunk/supertux/src/badguy/spidermite.cpp
===================================================================
--- trunk/supertux/src/badguy/spidermite.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/spidermite.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -28,13 +28,13 @@
 SpiderMite::SpiderMite(const lisp::Lisp& reader)
 	: BadGuy(reader, "images/creatures/spidermite/spidermite.sprite")
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 SpiderMite::SpiderMite(const Vector& pos)
 	: BadGuy(pos, "images/creatures/spidermite/spidermite.sprite")
 {
-  physic.gravity_enabled = false;
+  physic.enable_gravity(false);
 }
 
 void
@@ -53,7 +53,7 @@
 {
   sprite->set_action(dir == LEFT ? "left" : "right");
   mode = FLY_UP;
-  physic.vy = FLYSPEED;
+  physic.set_velocity_y(FLYSPEED);
   timer.start(FLYTIME/2);
 }
 
@@ -69,7 +69,7 @@
 SpiderMite::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) { // hit floor or roof?
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 }
 
@@ -79,10 +79,10 @@
   if(timer.check()) {
     if(mode == FLY_UP) {
       mode = FLY_DOWN;
-      physic.vy = -FLYSPEED;
+      physic.set_velocity_y(-FLYSPEED);
     } else if(mode == FLY_DOWN) {
       mode = FLY_UP;
-      physic.vy = FLYSPEED;
+      physic.set_velocity_y(FLYSPEED);
     }
     timer.start(FLYTIME);
   }

Modified: trunk/supertux/src/badguy/sspiky.cpp
===================================================================
--- trunk/supertux/src/badguy/sspiky.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/sspiky.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -42,7 +42,7 @@
 SSpiky::activate()
 {
   state = SSPIKY_SLEEPING;
-  physic.vx = 0;
+  physic.set_velocity_x(0);
   sprite->set_action(dir == LEFT ? "sleeping-left" : "sleeping-right");
 }
 

Modified: trunk/supertux/src/badguy/stalactite.cpp
===================================================================
--- trunk/supertux/src/badguy/stalactite.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/stalactite.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -59,7 +59,7 @@
   } else if(state == STALACTITE_SHAKING) {
     if(timer.check()) {
       state = STALACTITE_FALLING;
-      physic.gravity_enabled = true;
+      physic.enable_gravity(true);
     }
   } else if(state == STALACTITE_FALLING || state == STALACTITE_SQUISHED) {
     movement = physic.get_movement(elapsed_time);
@@ -85,7 +85,7 @@
     if (hit.bottom) squish();
   }
   if(state == STALACTITE_SQUISHED) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 }
 

Modified: trunk/supertux/src/badguy/stumpy.cpp
===================================================================
--- trunk/supertux/src/badguy/stumpy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/stumpy.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -61,7 +61,7 @@
     case STATE_INVINCIBLE:
       sprite->set_action(dir == LEFT ? "dizzy-left" : "dizzy-right");
       bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
-      physic.vx = 0;
+      physic.set_velocity_x(0);
       break;
     case STATE_NORMAL:
       WalkingBadguy::activate();
@@ -132,10 +132,10 @@
   switch (mystate) {
     case STATE_INVINCIBLE:
       if(hit.top || hit.bottom) {
-        physic.vy = 0;
+        physic.set_velocity_y(0);
       }
       if(hit.left || hit.right) {
-        physic.vx = 0;
+        physic.set_velocity_x(0);
       }
       break;
     case STATE_NORMAL:
@@ -150,10 +150,10 @@
   switch (mystate) {
     case STATE_INVINCIBLE:
       if(hit.top || hit.bottom) {
-	physic.vy = 0;
+	physic.set_velocity_y(0);
       }
       if(hit.left || hit.right) {
-	physic.vx = 0;
+	physic.set_velocity_x(0);
       }
       return CONTINUE;
       break;

Modified: trunk/supertux/src/badguy/toad.cpp
===================================================================
--- trunk/supertux/src/badguy/toad.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/toad.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -62,16 +62,16 @@
 Toad::set_state(ToadState newState)
 {
   if (newState == IDLE) {
-    physic.vx = 0;
-    physic.vy = 0;
+    physic.set_velocity_x(0);
+    physic.set_velocity_y(0);
     sprite->set_action(dir == LEFT ? "idle-left" : "idle-right");
 
     recover_timer.start(RECOVER_TIME);
   } else
   if (newState == JUMPING) {
     sprite->set_action(dir == LEFT ? "jumping-left" : "jumping-right");
-    physic.vx = (dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
-    physic.vy = VERTICAL_SPEED;
+    physic.set_velocity_x(dir == LEFT ? -HORIZONTAL_SPEED : HORIZONTAL_SPEED);
+    physic.set_velocity_y(VERTICAL_SPEED);
     sound_manager->play( HOP_SOUND, get_pos());
   } else
   if (newState == FALLING) {
@@ -108,7 +108,7 @@
   }
 
   // check if we hit left or right while moving in either direction
-  if(((physic.vx < 0) && hit.left) || ((physic.vx > 0) && hit.right)) {
+  if(((physic.get_velocity_x() < 0) && hit.left) || ((physic.get_velocity_x() > 0) && hit.right)) {
     /*
     dir = dir == LEFT ? RIGHT : LEFT;
     if (state == JUMPING) {
@@ -117,7 +117,7 @@
       sprite->set_action(dir == LEFT ? "idle-left" : "idle-right");
     }
     */
-    physic.vx = -0.25*physic.vx;
+    physic.set_velocity_x(-0.25*physic.get_velocity_x());
   }
 
   // check if we hit the floor while falling
@@ -128,7 +128,7 @@
 
   // check if we hit the roof while climbing
   if ((state == JUMPING) && hit.top) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
 }
@@ -148,7 +148,7 @@
   BadGuy::active_update(elapsed_time);
 
   // change sprite when we are falling
-  if ((state == JUMPING) && (physic.vy > 0)) {
+  if ((state == JUMPING) && (physic.get_velocity_y() > 0)) {
     set_state(FALLING);
     return;
   }

Modified: trunk/supertux/src/badguy/totem.cpp
===================================================================
--- trunk/supertux/src/badguy/totem.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/totem.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -77,7 +77,7 @@
 Totem::activate()
 {
   if (!carried_by) {
-    physic.vx = (dir == LEFT ? -WALKSPEED : WALKSPEED);
+    physic.set_velocity_x(dir == LEFT ? -WALKSPEED : WALKSPEED);
     sprite->set_action(dir == LEFT ? "walking-left" : "walking-right");
     return;
   } else {
@@ -120,7 +120,7 @@
 	float dx = (p1.x - p2.x);
 	if (fabsf(dx - 128) > 2) continue;
 
-	physic.vy = JUMP_ON_SPEED_Y;
+	physic.set_velocity_y(JUMP_ON_SPEED_Y);
 	p1.y -= 1;
 	this->set_pos(p1);
 	break;
@@ -168,7 +168,7 @@
 
   // If we hit something from above or below: stop moving in this direction
   if (hit.top || hit.bottom) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 
   // If we are hit from the direction we are facing: turn around
@@ -259,7 +259,7 @@
   bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
 
 
-  physic.vy = JUMP_OFF_SPEED_Y;
+  physic.set_velocity_y(JUMP_OFF_SPEED_Y);
 }
 
 void
@@ -275,8 +275,8 @@
   pos.y -= sprite->get_current_hitbox_height();
   set_pos(pos);
 
-  physic.vx = base->physic.vx;
-  physic.vy = base->physic.vy;
+  physic.set_velocity_x(base->physic.get_velocity_x());
+  physic.set_velocity_y(base->physic.get_velocity_y());
 }
 
 

Modified: trunk/supertux/src/badguy/walking_badguy.cpp
===================================================================
--- trunk/supertux/src/badguy/walking_badguy.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/walking_badguy.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -52,7 +52,7 @@
     return;
   sprite->set_action(dir == LEFT ? walk_left_action : walk_right_action);
   bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
-  physic.vx = (dir == LEFT ? -walk_speed : walk_speed);
+  physic.set_velocity_x(dir == LEFT ? -walk_speed : walk_speed);
 }
 
 void
@@ -76,10 +76,10 @@
   update_on_ground_flag(hit);
 
   if (hit.top) {
-    if (physic.vy < 0) physic.vy = 0;
+    if (physic.get_velocity_y() < 0) physic.set_velocity_y(0);
   }
   if (hit.bottom) {
-    if (physic.vy > 0) physic.vy = 0;
+    if (physic.get_velocity_y() > 0) physic.set_velocity_y(0);
   }
 
   if ((hit.left && (hit.slope_normal.y == 0) && (dir == LEFT)) || (hit.right && (hit.slope_normal.y == 0) && (dir == RIGHT))) {
@@ -106,14 +106,14 @@
     return;
   dir = dir == LEFT ? RIGHT : LEFT;
   sprite->set_action(dir == LEFT ? walk_left_action : walk_right_action);
-  physic.vx = -physic.vx;
+  physic.set_velocity_x(-physic.get_velocity_x());
 }
 
 void
 WalkingBadguy::freeze()
 {
   BadGuy::freeze();
-  physic.vx = 0;
+  physic.set_velocity_x(0);
 }
 
 void
@@ -127,13 +127,13 @@
 float 
 WalkingBadguy::get_velocity_y() const
 {
-  return physic.vy;
+  return physic.get_velocity_y();
 }
 
 void 
 WalkingBadguy::set_velocity_y(float vy)
 {
-  physic.vy = vy;
+  physic.set_velocity_y(vy);
 }
 
 

Modified: trunk/supertux/src/badguy/yeti.cpp
===================================================================
--- trunk/supertux/src/badguy/yeti.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/yeti.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -88,20 +88,20 @@
 {
   switch(state) {
     case JUMP_DOWN:
-      physic.vx = (dir==RIGHT?JUMP_DOWN_VX:-JUMP_DOWN_VX);
+      physic.set_velocity_x((dir==RIGHT)?+JUMP_DOWN_VX:-JUMP_DOWN_VX);
       break;
     case RUN:
-      physic.vx = (dir==RIGHT?RUN_VX:-RUN_VX);
+      physic.set_velocity_x((dir==RIGHT)?+RUN_VX:-RUN_VX);
       if (((dir == RIGHT) && (get_pos().x >= RIGHT_JUMP_X)) || ((dir == LEFT) && (get_pos().x <= LEFT_JUMP_X))) jump_up();
       break;
     case JUMP_UP:
-      physic.vx = (dir==RIGHT?JUMP_UP_VX:-JUMP_UP_VX);
+      physic.set_velocity_x((dir==RIGHT)?+JUMP_UP_VX:-JUMP_UP_VX);
       if (((dir == RIGHT) && (get_pos().x >= RIGHT_STAND_X)) || ((dir == LEFT) && (get_pos().x <= LEFT_STAND_X))) be_angry();
       break;
     case BE_ANGRY:
       if(state_timer.check()) {
         sound_manager->play("sounds/yeti_gna.wav");
-        physic.vy = STOMP_VY;
+        physic.set_velocity_y(STOMP_VY);
         sprite->set_action((dir==RIGHT)?"stomp-right":"stomp-left");
       }
       break;
@@ -119,8 +119,8 @@
 Yeti::jump_down()
 {
   sprite->set_action((dir==RIGHT)?"jump-right":"jump-left");
-  physic.vx = (dir==RIGHT?JUMP_DOWN_VX:-JUMP_DOWN_VX);
-  physic.vy = JUMP_DOWN_VY;
+  physic.set_velocity_x((dir==RIGHT)?(+JUMP_DOWN_VX):(-JUMP_DOWN_VX));
+  physic.set_velocity_y(JUMP_DOWN_VY);
   state = JUMP_DOWN;
 }
 
@@ -128,8 +128,8 @@
 Yeti::run()
 {
   sprite->set_action((dir==RIGHT)?"run-right":"run-left");
-  physic.vx = (dir==RIGHT?RUN_VX:-RUN_VX);
-  physic.vy = 0;
+  physic.set_velocity_x((dir==RIGHT)?(+RUN_VX):(-RUN_VX));
+  physic.set_velocity_y(0);
   state = RUN;
 }
 
@@ -137,8 +137,8 @@
 Yeti::jump_up()
 {
   sprite->set_action((dir==RIGHT)?"jump-right":"jump-left");
-  physic.vx = (dir==RIGHT?JUMP_UP_VX:-JUMP_UP_VX);
-  physic.vy = JUMP_UP_VY;
+  physic.set_velocity_x((dir==RIGHT)?(+JUMP_UP_VX):(-JUMP_UP_VX));
+  physic.set_velocity_y(JUMP_UP_VY);
   state = JUMP_UP;
 }
 
@@ -149,8 +149,8 @@
   dir = (dir==RIGHT)?LEFT:RIGHT;
 
   sprite->set_action((dir==RIGHT)?"stand-right":"stand-left");
-  physic.vx = 0;
-  physic.vy = 0;
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
   if (hit_points < INITIAL_HITPOINTS) summon_snowball();
   stomp_count = 0;
   state = BE_ANGRY;
@@ -191,9 +191,9 @@
 
   if(hit_points <= 0) {
     // We're dead
-    physic.gravity_enabled = true;
-    physic.vx = 0;
-    physic.vy = 0;
+    physic.enable_gravity(true);
+    physic.set_velocity_x(0);
+    physic.set_velocity_y(0);
 
     state = SQUISHED;
     state_timer.start(SQUISH_TIME);
@@ -270,7 +270,7 @@
 {
   if(hit.top || hit.bottom) {
     // hit floor or roof
-    physic.vy = 0;
+    physic.set_velocity_y(0);
     switch (state) {
       case JUMP_DOWN:
 	run();

Modified: trunk/supertux/src/badguy/zeekling.cpp
===================================================================
--- trunk/supertux/src/badguy/zeekling.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/badguy/zeekling.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -52,8 +52,8 @@
 Zeekling::activate()
 {
   speed = systemRandom.rand(130, 171);
-  physic.vx = (dir == LEFT ? -speed : speed);
-  physic.gravity_enabled = false;
+  physic.set_velocity_x(dir == LEFT ? -speed : speed);
+  physic.enable_gravity(false);
   sprite->set_action(dir == LEFT ? "left" : "right");
 }
 
@@ -71,19 +71,19 @@
   if (state == FLYING) {
     dir = (dir == LEFT ? RIGHT : LEFT);
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.vx = (dir == LEFT ? -speed : speed);
+    physic.set_velocity_x(dir == LEFT ? -speed : speed);
   } else
   if (state == DIVING) {
     dir = (dir == LEFT ? RIGHT : LEFT);
     state = FLYING;
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.vx = (dir == LEFT ? -speed : speed);
-    physic.vy = 0;
+    physic.set_velocity_x(dir == LEFT ? -speed : speed);
+    physic.set_velocity_y(0);
   } else
   if (state == CLIMBING) {
     dir = (dir == LEFT ? RIGHT : LEFT);
     sprite->set_action(dir == LEFT ? "left" : "right");
-    physic.vx = (dir == LEFT ? -speed : speed);
+    physic.set_velocity_x(dir == LEFT ? -speed : speed);
   } else {
     assert(false);
   }
@@ -92,16 +92,16 @@
 void
 Zeekling::onBumpVertical() {
   if (state == FLYING) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   } else
   if (state == DIVING) {
     state = CLIMBING;
-    physic.vy = -speed;
+    physic.set_velocity_y(-speed);
     sprite->set_action(dir == LEFT ? "left" : "right");
   } else
   if (state == CLIMBING) {
     state = FLYING;
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
 }
 
@@ -172,7 +172,7 @@
   if (state == FLYING) {
     if (should_we_dive()) {
       state = DIVING;
-      physic.vy = 2*fabsf(physic.vx);
+      physic.set_velocity_y(2*fabsf(physic.get_velocity_x()));
       sprite->set_action(dir == LEFT ? "diving-left" : "diving-right");
     }
     BadGuy::active_update(elapsed_time);
@@ -184,7 +184,7 @@
     // stop climbing when we're back at initial height
     if (get_pos().y <= start_position.y) {
       state = FLYING;
-      physic.vy = 0;
+      physic.set_velocity_y(0);
     }
     BadGuy::active_update(elapsed_time);
     return;

Modified: trunk/supertux/src/object/bullet.cpp
===================================================================
--- trunk/supertux/src/object/bullet.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/bullet.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -37,7 +37,7 @@
   : life_count(3), type(type)
 {
   float speed = dir == RIGHT ? BULLET_XM : -BULLET_XM;
-  physic.vx = speed + xm;
+  physic.set_velocity_x(speed + xm);
 
   if(type == FIRE_BONUS) {
     sprite.reset(sprite_manager->create("images/objects/bullets/firebullet.sprite"));
@@ -84,11 +84,11 @@
 Bullet::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom) {
-    physic.vy = -physic.vy;
+    physic.set_velocity_y(-physic.get_velocity_y());
     life_count--;
   } else if(hit.left || hit.right) {
     if(type == ICE_BONUS) {
-      physic.vx = -physic.vx;
+      physic.set_velocity_x(-physic.get_velocity_x());
       life_count--;
     } else
       remove_me();

Modified: trunk/supertux/src/object/camera.cpp
===================================================================
--- trunk/supertux/src/object/camera.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/camera.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -279,7 +279,7 @@
   float speed_x = delta_x / elapsed_time;
 
   // limit our speed
-  float maxv = 130 + (fabsf(player->physic.vx * 1.3));
+  float maxv = 130 + (fabsf(player->physic.get_velocity_x() * 1.3));
   if(speed_x > maxv)
     speed_x = maxv;
   else if(speed_x < -maxv)

Modified: trunk/supertux/src/object/falling_coin.cpp
===================================================================
--- trunk/supertux/src/object/falling_coin.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/falling_coin.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -29,8 +29,8 @@
 {
   pos = start_position;
   sprite = sprite_manager->create("images/objects/coin/coin.sprite");
-  physic.vy = -800;
-  physic.vx = vel_x;
+  physic.set_velocity_y(-800);
+  physic.set_velocity_x(vel_x);
 }
 
 FallingCoin::~FallingCoin()

Modified: trunk/supertux/src/object/growup.cpp
===================================================================
--- trunk/supertux/src/object/growup.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/growup.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -30,8 +30,8 @@
 GrowUp::GrowUp(Direction direction)
 	: MovingSprite(Vector(0,0), "images/powerups/egg/egg.sprite", LAYER_OBJECTS, COLGROUP_MOVING)
 {
-  physic.gravity_enabled = true;
-  physic.vx = (direction == LEFT?-100:100);
+  physic.enable_gravity(true);
+  physic.set_velocity_x((direction == LEFT)?-100:100);
   sound_manager->preload("sounds/grow.wav");
 }
 
@@ -45,9 +45,9 @@
 GrowUp::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom)
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   if(hit.left || hit.right)
-    physic.vx = -physic.vx;
+    physic.set_velocity_x(-physic.get_velocity_x());
 }
 
 HitResponse

Modified: trunk/supertux/src/object/oneup.cpp
===================================================================
--- trunk/supertux/src/object/oneup.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/oneup.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -29,8 +29,7 @@
 OneUp::OneUp(const Vector& pos, Direction direction)
 	: MovingSprite(pos, "images/powerups/1up/1up.sprite", LAYER_FLOATINGOBJECTS, COLGROUP_TOUCHABLE)
 {
-  physic.vx = ((direction == LEFT)?-100:100);
-  physic.vy = -400;
+  physic.set_velocity((direction == LEFT)?-100:100, -400);
 }
 
 void

Modified: trunk/supertux/src/object/player.cpp
===================================================================
--- trunk/supertux/src/object/player.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/player.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -166,7 +166,7 @@
   on_ground_flag = false;
   grabbed_object = NULL;
 
-  physic = Physic();
+  physic.reset();
 }
 
 void
@@ -236,7 +236,7 @@
 
   // extend/shrink tux collision rectangle so that we fall through/walk over 1
   // tile holes
-  if(fabsf(physic.vx) > MAX_WALK_XM) {
+  if(fabsf(physic.get_velocity_x()) > MAX_WALK_XM) {
     set_width(34);
   } else {
     set_width(31.8);
@@ -245,8 +245,8 @@
   // on downward slopes, adjust vertical velocity so tux walks smoothly down
   if (on_ground()) {
     if(floor_normal.y != 0) {
-      if ((floor_normal.x * physic.vx) >= 0) {
-        physic.vy = 250;
+      if ((floor_normal.x * physic.get_velocity_x()) >= 0) {
+        physic.set_velocity_y(250);
       }
     }
   }
@@ -255,7 +255,7 @@
   if (backflipping) {
     //prevent player from changing direction when backflipping
     dir = (backflip_direction == 1) ? LEFT : RIGHT;
-    if (backflip_timer.started()) physic.vx = 100 * backflip_direction;
+    if (backflip_timer.started()) physic.set_velocity_x(100 * backflip_direction);
   }
 
   // set fall mode...
@@ -341,26 +341,26 @@
 void
 Player::apply_friction()
 {
-  if ((on_ground()) && (fabs(physic.vx) < WALK_SPEED)) {
-    physic.vx = 0;
-    physic.ax = 0;
-  } else if(physic.vx < 0) {
-    physic.ax = WALK_ACCELERATION_X * 1.5;
+  if ((on_ground()) && (fabs(physic.get_velocity_x()) < WALK_SPEED)) {
+    physic.set_velocity_x(0);
+    physic.set_acceleration_x(0);
+  } else if(physic.get_velocity_x() < 0) {
+    physic.set_acceleration_x(WALK_ACCELERATION_X * 1.5);
   } else {
-    physic.ax = WALK_ACCELERATION_X * -1.5;
+    physic.set_acceleration_x(WALK_ACCELERATION_X * -1.5);
   }
 }
 
 void
 Player::handle_horizontal_input()
 {
-  float vx = physic.vx;
-  float vy = physic.vy;
-  float ax = physic.ax;
-  float ay = physic.ay;
+  float vx = physic.get_velocity_x();
+  float vy = physic.get_velocity_y();
+  float ax = physic.get_acceleration_x();
+  float ay = physic.get_acceleration_y();
 
   float dirsign = 0;
-  if(!duck || physic.vy != 0) {
+  if(!duck || physic.get_velocity_y() != 0) {
     if(controller->hold(Controller::LEFT) && !controller->hold(Controller::RIGHT)) {
       old_dir = dir;
       dir = LEFT;
@@ -421,10 +421,8 @@
     }
   }
 
-  physic.vx = vx;
-  physic.vy = vy;
-  physic.ax = ax;
-  physic.ay = ay;
+  physic.set_velocity(vx, vy);
+  physic.set_acceleration(ax, ay);
 
   // we get slower when not pressing any keys
   if(dirsign == 0) {
@@ -448,7 +446,7 @@
   if (!is_big())
     return;
 
-  if (physic.vy != 0)
+  if (physic.get_velocity_y() != 0)
     return;
   if (!on_ground())
     return;
@@ -507,7 +505,7 @@
   if (!on_ground())
     return;
 
-  physic.vy = yspeed;
+  physic.set_velocity_y(yspeed);
   //bbox.move(Vector(0, -1));
   jumping = true;
   on_ground_flag = false;
@@ -528,17 +526,17 @@
   if(controller->pressed(Controller::JUMP) && (can_jump)) {
     if (duck) {
       // when running, only jump a little bit; else do a backflip
-      if ((physic.vx != 0) || (controller->hold(Controller::LEFT)) || (controller->hold(Controller::RIGHT))) do_jump(-300); else do_backflip();
+      if ((physic.get_velocity_x() != 0) || (controller->hold(Controller::LEFT)) || (controller->hold(Controller::RIGHT))) do_jump(-300); else do_backflip();
     } else {
       // jump a bit higher if we are running; else do a normal jump
-      if (fabs(physic.vx) > MAX_WALK_XM) do_jump(-580); else do_jump(-520);
+      if (fabs(physic.get_velocity_x()) > MAX_WALK_XM) do_jump(-580); else do_jump(-520);
     }
   }
   // Let go of jump key
   else if(!controller->hold(Controller::JUMP)) {
-    if (!backflipping && jumping && physic.vy < 0) {
+    if (!backflipping && jumping && physic.get_velocity_y() < 0) {
       jumping = false;
-      physic.vy = 0;
+      physic.set_velocity_y(0);
     }
   }
 
@@ -553,11 +551,11 @@
     butt_jump = false;
 
   // swimming
-  physic.ay = 0;
+  physic.set_acceleration_y(0);
   if (swimming) {
     if (controller->hold(Controller::UP) || controller->hold(Controller::JUMP))
-      physic.ay = -2000;
-    physic.vy = physic.vy * 0.94;
+      physic.set_acceleration_y(-2000);
+    physic.set_velocity_y(physic.get_velocity_y() * 0.94);
   }
 }
 
@@ -598,7 +596,7 @@
     if(Sector::current()->add_bullet(
          get_pos() + ((dir == LEFT)? Vector(0, bbox.get_height()/2)
                       : Vector(32, bbox.get_height()/2)),
-         physic.vx, dir))
+         physic.get_velocity_x(), dir))
       shooting_timer.start(SHOOTING_TIME);
   }
 
@@ -686,10 +684,8 @@
   if (controller->hold(Controller::ACTION)) {
     set_ghost_mode(false);
   }
-  physic.vx = vx;
-  physic.vy = vy;
-  physic.ax = 0;
-  physic.ay = 0;
+  physic.set_velocity(vx, vy);
+  physic.set_acceleration(0, 0);
 }
 
 void
@@ -880,7 +876,7 @@
     }
   else
     {
-    if (fabsf(physic.vx) < 1.0f) // standing
+    if (fabsf(physic.get_velocity_x()) < 1.0f) // standing
       {
       if(dir == LEFT)
         tux_body->set_action("stand-left");
@@ -909,7 +905,7 @@
     }
 
   // Tux is holding something
-  if ((grabbed_object != 0 && physic.vy == 0) ||
+  if ((grabbed_object != 0 && physic.get_velocity_y() == 0) ||
       (shooting_timer.get_timeleft() > 0 && !shooting_timer.check()))
     {
     if (duck)
@@ -973,18 +969,18 @@
 Player::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom) {
-    if(physic.vy > 0)
-      physic.vy = 0;
+    if(physic.get_velocity_y() > 0)
+      physic.set_velocity_y(0);
 
     on_ground_flag = true;
     floor_normal = hit.slope_normal;
   } else if(hit.top) {
-    if(physic.vy < 0)
-      physic.vy =  .2;
+    if(physic.get_velocity_y() < 0)
+      physic.set_velocity_y(.2);
   }
 
   if(hit.left || hit.right) {
-    physic.vx = 0;
+    physic.set_velocity_x(0);
   }
 
   // crushed?
@@ -1053,7 +1049,7 @@
 
   sound_manager->play("sounds/hurt.wav");
 
-  physic.vx = 0;
+  physic.set_velocity_x(0);
 
   if(!completely && is_big()) {
     if(player_status->bonus == FIRE_BONUS
@@ -1075,11 +1071,9 @@
             Vector(systemRandom.rand(5), systemRandom.rand(-32,18)),
             systemRandom.rand(-100,100)));
     }
-    physic.gravity_enabled = true;
-    physic.vx = 0;
-    physic.vy = -700;
-    physic.ax = 0;
-    physic.ay = 0;
+    physic.enable_gravity(true);
+    physic.set_acceleration(0, 0);
+    physic.set_velocity(0, -700);
     player_status->coins -= 25;
     set_bonus(NO_BONUS, true);
     dying = true;
@@ -1106,7 +1100,7 @@
   duck = false;
   last_ground_y = vector.y;
 
-  physic = Physic();
+  physic.reset();
 }
 
 void
@@ -1140,30 +1134,29 @@
 void
 Player::add_velocity(const Vector& velocity)
 {
-  physic.vx += velocity.x;
-  physic.vy += velocity.y;
+  physic.set_velocity(physic.get_velocity() + velocity);
 }
 
 void
 Player::add_velocity(const Vector& velocity, const Vector& end_speed)
 {
   if (end_speed.x > 0)
-    physic.vx = std::min(physic.vx + velocity.x, end_speed.x);
+    physic.set_velocity_x(std::min(physic.get_velocity_x() + velocity.x, end_speed.x));
   if (end_speed.x < 0)
-    physic.vx = std::max(physic.vx + velocity.x, end_speed.x);
+    physic.set_velocity_x(std::max(physic.get_velocity_x() + velocity.x, end_speed.x));
   if (end_speed.y > 0)
-    physic.vy = std::min(physic.vy + velocity.y, end_speed.y);
+    physic.set_velocity_y(std::min(physic.get_velocity_y() + velocity.y, end_speed.y));
   if (end_speed.y < 0)
-    physic.vy = std::max(physic.vy + velocity.y, end_speed.y);
+    physic.set_velocity_y(std::max(physic.get_velocity_y() + velocity.y, end_speed.y));
 }
 
 void
 Player::bounce(BadGuy& )
 {
   if(controller->hold(Controller::JUMP))
-    physic.vy = -520;
+    physic.set_velocity_y(-520);
   else
-    physic.vy = -300;
+    physic.set_velocity_y(-300);
 }
 
 //Scripting Functions Below
@@ -1174,10 +1167,10 @@
   if (deactivated)
     return;
   deactivated = true;
-  physic.vx = 0;
-  physic.vy = 0;
-  physic.ax = 0;
-  physic.ay = 0;
+  physic.set_velocity_x(0);
+  physic.set_velocity_y(0);
+  physic.set_acceleration_x(0);
+  physic.set_acceleration_y(0);
 }
 
 void
@@ -1190,7 +1183,7 @@
 
 void Player::walk(float speed)
 {
-  physic.vx = speed;
+  physic.set_velocity_x(speed);
 }
 
 void
@@ -1202,12 +1195,12 @@
   if (enable) {
     ghost_mode = true;
     set_group(COLGROUP_DISABLED);
-    physic.gravity_enabled = false;
+    physic.enable_gravity(false);
     log_debug << "You feel lightheaded. Use movement controls to float around, press ACTION to scare badguys." << std::endl;
   } else {
     ghost_mode = false;
     set_group(COLGROUP_MOVING);
-    physic.gravity_enabled = true;
+    physic.enable_gravity(true);
     log_debug << "You feel solid again." << std::endl;
   }
 }

Modified: trunk/supertux/src/object/powerup.cpp
===================================================================
--- trunk/supertux/src/object/powerup.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/powerup.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -36,7 +36,7 @@
   lisp.get("script", script);
   no_physics = false;
   lisp.get("disable-physics", no_physics);
-  physic.gravity_enabled = true;
+  physic.enable_gravity(true);
   sound_manager->preload("sounds/grow.wav");
   sound_manager->preload("sounds/fire-flower.wav");
 }
@@ -45,10 +45,10 @@
 PowerUp::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   }
   if(hit.right || hit.left) {
-    physic.vx = -physic.vx;
+    physic.set_velocity_x(-physic.get_velocity_x());
   }
 }
 

Modified: trunk/supertux/src/object/pushbutton.cpp
===================================================================
--- trunk/supertux/src/object/pushbutton.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/pushbutton.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -53,10 +53,10 @@
 {
   Player* player = dynamic_cast<Player*>(&other);
   if (!player) return FORCE_MOVE;
-  float vy = player->physic.vy;
+  float vy = player->physic.get_velocity_y();
 
   //player->add_velocity(Vector(0, -150));
-  player->physic.vy = -150;
+  player->physic.set_velocity_y(-150);
 
   if (state != OFF) return FORCE_MOVE;
   if (!hit.top) return FORCE_MOVE;

Modified: trunk/supertux/src/object/rock.cpp
===================================================================
--- trunk/supertux/src/object/rock.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/rock.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -64,7 +64,7 @@
   if( grabbed )
     return;
 
-  if (on_ground) physic.vx = 0;
+  if (on_ground) physic.set_velocity_x(0);
 
   movement = physic.get_movement(elapsed_time);
 }
@@ -73,12 +73,11 @@
 Rock::collision_solid(const CollisionHit& hit)
 {
   if(hit.top || hit.bottom)
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   if(hit.left || hit.right)
-    physic.vx = 0;
+    physic.set_velocity_x(0);
   if(hit.crush)
-    physic.vx = 0;
-    physic.vy = 0;
+    physic.set_velocity(0, 0);
 
   if(hit.bottom  && !on_ground) {
     sound_manager->play(ROCK_SOUND, get_pos());
@@ -90,7 +89,7 @@
 Rock::collision(GameObject& other, const CollisionHit& hit)
 {
   if(!on_ground) {
-    if(hit.bottom && physic.vy > 200) {
+    if(hit.bottom && physic.get_velocity_y() > 200) {
       MovingObject* moving_object = dynamic_cast<MovingObject*> (&other);
       if(moving_object) {
         //Getting a rock on the head hurts. A lot.
@@ -119,11 +118,9 @@
   set_group(COLGROUP_MOVING_STATIC);
   on_ground = false;
   if (last_movement.norm() > 1) {
-    physic.vx = ((dir == RIGHT) ? 200 : -200);
-    physic.vy = -200;
+    physic.set_velocity((dir == RIGHT) ? 200 : -200, -200);
   } else {
-    physic.vx = 0;
-    physic.vy = 0;
+    physic.set_velocity(0, 0);
   }
   grabbed = false;
 }

Modified: trunk/supertux/src/object/scripted_object.cpp
===================================================================
--- trunk/supertux/src/object/scripted_object.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/scripted_object.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -79,7 +79,7 @@
 {
   printf("SetPos: %f %f\n", x, y);
   bbox.set_pos(Vector(x, y));
-  physic = Physic();
+  physic.reset();
 }
 
 float
@@ -104,13 +104,13 @@
 float
 ScriptedObject::get_velocity_x()
 {
-  return physic.vx;
+  return physic.get_velocity_x();
 }
 
 float
 ScriptedObject::get_velocity_y()
 {
-  return physic.vy;
+  return physic.get_velocity_y();
 }
 
 void
@@ -168,8 +168,7 @@
     return;
 
   if(new_vel_set) {
-    physic.vx = new_vel.x;
-    physic.vy = new_vel.y;
+    physic.set_velocity(new_vel.x, new_vel.y);
     new_vel_set = false;
   }
   movement = physic.get_movement(elapsed_time);
@@ -191,14 +190,14 @@
     return;
 
   if(hit.bottom) {
-    if(physic.vy > 0)
-      physic.vy = 0;
+    if(physic.get_velocity_y() > 0)
+      physic.set_velocity_y(0);
   } else if(hit.top) {
-    physic.vy = .1;
+    physic.set_velocity_y(.1);
   }
 
   if(hit.left || hit.right) {
-    physic.vx = 0;
+    physic.set_velocity_x(0);
   }
 }
 

Modified: trunk/supertux/src/object/skull_tile.cpp
===================================================================
--- trunk/supertux/src/object/skull_tile.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/skull_tile.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -70,7 +70,7 @@
   } else if(hit) {
     if(timer.check()) {
       falling = true;
-      physic.gravity_enabled = true;
+      physic.enable_gravity(true);
       timer.stop();
     } else if(!timer.started()) {
       timer.start(FALLTIME);

Modified: trunk/supertux/src/object/star.cpp
===================================================================
--- trunk/supertux/src/object/star.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/star.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -33,8 +33,7 @@
 Star::Star(const Vector& pos, Direction direction)
 	: MovingSprite(pos, "images/powerups/star/star.sprite", LAYER_OBJECTS, COLGROUP_MOVING)
 {
-  physic.vx = ((direction == LEFT) ? -SPEED : SPEED);
-  physic.vy = INITIALJUMP;
+  physic.set_velocity((direction == LEFT) ? -SPEED : SPEED, INITIALJUMP);
 }
 
 void
@@ -47,11 +46,11 @@
 Star::collision_solid(const CollisionHit& hit)
 {
   if(hit.bottom) {
-    physic.vy = JUMPSPEED;
+    physic.set_velocity_y(JUMPSPEED);
   } else if(hit.top) {
-    physic.vy = 0;
+    physic.set_velocity_y(0);
   } else if(hit.left || hit.right) {
-    physic.vx = -physic.vx;
+    physic.set_velocity_x(-physic.get_velocity_x());
   }
 }
 

Modified: trunk/supertux/src/object/trampoline.cpp
===================================================================
--- trunk/supertux/src/object/trampoline.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/trampoline.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -70,7 +70,7 @@
     Player* player = dynamic_cast<Player*> (&other);
     //Trampoline works for player
     if(player) {
-      float vy = player->physic.vy;
+      float vy = player->physic.get_velocity_y();
       //player is falling down on trampoline
       if(hit.top && vy >= 0) {
 	if(player->get_controller()->hold(Controller::JUMP)) {
@@ -78,7 +78,7 @@
 	} else {
 	  vy = VY_INITIAL;
 	}
-	player->physic.vy = vy;
+	player->physic.set_velocity_y(vy);
 	sound_manager->play(TRAMPOLINE_SOUND);
 	sprite->set_action("swinging", 1);
 	return FORCE_MOVE;

Modified: trunk/supertux/src/object/unstable_tile.cpp
===================================================================
--- trunk/supertux/src/object/unstable_tile.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/object/unstable_tile.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -63,7 +63,7 @@
         state = STATE_DISINTEGRATING;
         sprite->set_action("disintegrating", 1);
         set_group(COLGROUP_DISABLED);
-        physic.gravity_enabled = true;
+        physic.enable_gravity(true);
       }
       break;
 

Modified: trunk/supertux/src/physic.cpp
===================================================================
--- trunk/supertux/src/physic.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/physic.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -23,14 +23,140 @@
 #include "physic.hpp"
 
 Physic::Physic()
-    : ax(0), ay(0), vx(0), vy(0), gravity_enabled(true), gravity(1000)
+    : ax(0), ay(0), vx(0), vy(0), gravity_enabled_flag(true), gravity(1000)
 {
 }
 
+Physic::~Physic()
+{
+}
+
+void
+Physic::reset()
+{
+    ax = ay = vx = vy = 0;
+    gravity_enabled_flag = true;
+}
+
+void
+Physic::set_velocity_x(float nvx)
+{
+  vx = nvx;
+}
+
+void
+Physic::set_velocity_y(float nvy)
+{
+  vy = nvy;
+}
+
+void
+Physic::set_velocity(float nvx, float nvy)
+{
+  vx = nvx;
+  vy = nvy;
+}
+
+void
+Physic::set_velocity(const Vector& vector)
+{
+  vx = vector.x;
+  vy = vector.y;
+}
+
+void Physic::inverse_velocity_x()
+{
+  vx = -vx;
+}
+
+void Physic::inverse_velocity_y()
+{
+  vy = -vy;
+}
+
+float
+Physic::get_velocity_x() const
+{
+    return vx;
+}
+
+float
+Physic::get_velocity_y() const
+{
+    return vy;
+}
+
 Vector
+Physic::get_velocity() const
+{
+  return Vector(vx, vy);
+}
+
+void
+Physic::set_acceleration_x(float nax)
+{
+  ax = nax;
+}
+
+void
+Physic::set_acceleration_y(float nay)
+{
+  ay = nay;
+}
+
+void
+Physic::set_acceleration(float nax, float nay)
+{
+  ax = nax;
+  ay = nay;
+}
+
+float
+Physic::get_acceleration_x() const
+{
+  return ax;
+}
+
+float
+Physic::get_acceleration_y() const
+{
+  return ay;
+}
+
+Vector
+Physic::get_acceleration() const
+{
+  return Vector(ax, ay);
+}
+
+void
+Physic::enable_gravity(bool enable_gravity)
+{
+  gravity_enabled_flag = enable_gravity;
+}
+
+bool
+Physic::gravity_enabled() const
+{
+  return gravity_enabled_flag;
+}
+
+void
+Physic::set_gravity(float gravity)
+{
+  this->gravity = gravity;
+}
+
+float
+Physic::get_gravity() const
+{
+  return gravity;
+}
+
+Vector
 Physic::get_movement(float elapsed_time)
 {
-  float grav = gravity_enabled ? gravity : 0;
+  float grav = gravity_enabled_flag ? gravity : 0;
 
   Vector result(
       vx * elapsed_time + ax * elapsed_time * elapsed_time,

Modified: trunk/supertux/src/physic.hpp
===================================================================
--- trunk/supertux/src/physic.hpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/physic.hpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -31,15 +31,58 @@
 {
 public:
   Physic();
+  ~Physic();
 
+  /// Resets all velocities and accelerations to 0.
+  void reset();
+
+  /// Sets velocity to a fixed value.
+  void set_velocity(float vx, float vy);
+  void set_velocity(const Vector& vector);
+
+  void set_velocity_x(float vx);
+  void set_velocity_y(float vy);
+
+  /// Velocities invertion.
+  void inverse_velocity_x();
+  void inverse_velocity_y();
+
+  Vector get_velocity() const;
+  float get_velocity_x() const;
+  float get_velocity_y() const;
+
+  /// Set acceleration.
+  /** Sets acceleration applied to the object. (Note that gravity is
+   * eventually added to the vertical acceleration)
+   */
+  void set_acceleration(float ax, float ay);
+
+  void set_acceleration_x(float ax);
+  void set_acceleration_y(float ay);
+
+  Vector get_acceleration() const;
+  float get_acceleration_x() const;
+  float get_acceleration_y() const;
+
+  /// Enables or disables handling of gravity.
+  void enable_gravity(bool gravity_enabled);
+  bool gravity_enabled() const;
+
+  /// Set gravity to apply to object when enabled
+  void set_gravity(float gravity);
+
+  /// Get gravity to apply to object when enabled
+  float get_gravity() const;
+
   Vector get_movement(float elapsed_time);
 
+private:
   /// horizontal and vertical acceleration
   float ax, ay;
   /// horizontal and vertical velocity
   float vx, vy;
-  /// should we respect gravity in our calculations?
-  bool gravity_enabled;
+  /// should we respect gravity in out calculations?
+  bool gravity_enabled_flag;
   /// current gravity to apply to object, if enabled
   float gravity;
 };

Modified: trunk/supertux/src/scripting/functions.cpp
===================================================================
--- trunk/supertux/src/scripting/functions.cpp	2007-01-02 16:14:53 UTC (rev 4523)
+++ trunk/supertux/src/scripting/functions.cpp	2007-01-02 17:07:50 UTC (rev 4524)
@@ -203,7 +203,7 @@
 {
   if (!validate_sector_player()) return;
   ::Player* tux = Sector::current()->player; // Scripting::Player != ::Player
-  tux->physic.vx = tux->physic.vx*3;
+  tux->physic.set_velocity_x(tux->physic.get_velocity_x()*3);
 }
 
 void invincible()



From sommer at mail.berlios.de  Thu Jan  4 00:35:21 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Thu, 4 Jan 2007 00:35:21 +0100
Subject: [Supertux-commit] r4525 - in trunk/supertux: data/levels/world2
	src/badguy
Message-ID: <200701032335.l03NZLQM018362@sheep.berlios.de>

Author: sommer
Date: 2007-01-04 00:35:19 +0100 (Thu, 04 Jan 2007)
New Revision: 4525

Modified:
   trunk/supertux/data/levels/world2/christoph5.stl
   trunk/supertux/src/badguy/badguy.cpp
   trunk/supertux/src/badguy/badguy.hpp
   trunk/supertux/src/badguy/yeti.cpp
   trunk/supertux/src/badguy/yeti.hpp
Log:
Allow dead-script on any badguy


Modified: trunk/supertux/data/levels/world2/christoph5.stl
===================================================================
(Contents removed)

Modified: trunk/supertux/src/badguy/badguy.cpp
===================================================================
--- trunk/supertux/src/badguy/badguy.cpp	2007-01-02 17:07:50 UTC (rev 4524)
+++ trunk/supertux/src/badguy/badguy.cpp	2007-01-03 23:35:19 UTC (rev 4525)
@@ -28,13 +28,15 @@
 #include "level.hpp"
 #include "object/bullet.hpp"
 #include "main.hpp"
+#include "object/particles.hpp"
+#include "random_generator.hpp"
 
 static const float SQUISH_TIME = 2;
 static const float X_OFFSCREEN_DISTANCE = 1600;
 static const float Y_OFFSCREEN_DISTANCE = 1200;
 
 BadGuy::BadGuy(const Vector& pos, const std::string& sprite_name, int layer)
-  : MovingSprite(pos, sprite_name, layer, COLGROUP_DISABLED), countMe(true), dir(LEFT), start_dir(AUTO), frozen(false), ignited(false), state(STATE_INIT), on_ground_flag(false)
+  : MovingSprite(pos, sprite_name, layer, COLGROUP_DISABLED), countMe(true), dir(LEFT), start_dir(AUTO), frozen(false), ignited(false), draw_dead_script_hint(false), state(STATE_INIT), on_ground_flag(false)
 {
   start_position = bbox.p1;
 
@@ -43,7 +45,7 @@
 }
 
 BadGuy::BadGuy(const Vector& pos, Direction direction, const std::string& sprite_name, int layer)
-  : MovingSprite(pos, sprite_name, layer, COLGROUP_DISABLED), countMe(true), dir(direction), start_dir(direction), frozen(false), ignited(false), state(STATE_INIT), on_ground_flag(false)
+  : MovingSprite(pos, sprite_name, layer, COLGROUP_DISABLED), countMe(true), dir(direction), start_dir(direction), frozen(false), ignited(false), draw_dead_script_hint(false), state(STATE_INIT), on_ground_flag(false)
 {
   start_position = bbox.p1;
 
@@ -60,6 +62,9 @@
   reader.get("direction", dir_str);
   start_dir = str2dir( dir_str );
   dir = start_dir;
+  
+  reader.get("dead-script", dead_script);
+  draw_dead_script_hint = (dead_script != "");
 
   sound_manager->preload("sounds/squish.wav");
   sound_manager->preload("sounds/fall.wav");
@@ -79,6 +84,11 @@
     context.set_drawing_effect(old_effect);
   } else {
     sprite->draw(context, get_pos(), layer);
+    if (draw_dead_script_hint) {
+      Vector ppos = Vector(systemRandom.randf(bbox.p1.x+8, bbox.p2.x-8), bbox.p2.y);
+      Vector pspeed = Vector(0, -100);
+      Sector::current()->add_object(new Particles(ppos, 44, 46, pspeed, Vector(0,0), 1, Color(.6, .2, .2), 3, .1, LAYER_OBJECTS+1));
+    }
   }
 }
 
@@ -319,6 +329,12 @@
     if (countMe) Sector::current()->get_level()->stats.badguys++;
     player->bounce(*this);
   }
+
+  // start dead-script
+  if(dead_script != "") {
+    std::istringstream stream(dead_script);
+    Sector::current()->run_script(stream, "dead-script");
+  }
 }
 
 void
@@ -329,6 +345,12 @@
   physic.set_velocity_y(0);
   physic.enable_gravity(true);
   set_state(STATE_FALLING);
+
+  // start dead-script
+  if(dead_script != "") {
+    std::istringstream stream(dead_script);
+    Sector::current()->run_script(stream, "dead-script");
+  }
 }
 
 void

Modified: trunk/supertux/src/badguy/badguy.hpp
===================================================================
--- trunk/supertux/src/badguy/badguy.hpp	2007-01-02 17:07:50 UTC (rev 4524)
+++ trunk/supertux/src/badguy/badguy.hpp	2007-01-03 23:35:19 UTC (rev 4525)
@@ -226,6 +226,9 @@
 
   bool frozen;
   bool ignited; /**< true if this badguy is currently on fire */
+  
+  std::string dead_script; /**< script to execute when badguy is killed */
+  bool draw_dead_script_hint; /**< whether to draw a visual indication that this Badguy triggers a script */
 
 private:
   void try_activate();

Modified: trunk/supertux/src/badguy/yeti.cpp
===================================================================
--- trunk/supertux/src/badguy/yeti.cpp	2007-01-02 17:07:50 UTC (rev 4524)
+++ trunk/supertux/src/badguy/yeti.cpp	2007-01-03 23:35:19 UTC (rev 4525)
@@ -56,10 +56,10 @@
 	: BadGuy(reader, "images/creatures/yeti/yeti.sprite")
 {
   hit_points = INITIAL_HITPOINTS;
-  reader.get("dead-script", dead_script);
   countMe = false;
   sound_manager->preload("sounds/yeti_gna.wav");
   sound_manager->preload("sounds/yeti_roar.wav");
+  draw_dead_script_hint = false;
 }
 
 Yeti::~Yeti()
@@ -202,7 +202,6 @@
 
     if (countMe) Sector::current()->get_level()->stats.badguys++;
 
-    // start script
     if(dead_script != "") {
       std::istringstream stream(dead_script);
       Sector::current()->run_script(stream, "Yeti - dead-script");
@@ -228,10 +227,6 @@
   writer.write_float("x", start_position.x);
   writer.write_float("y", start_position.y);
 
-  if(dead_script != "") {
-    writer.write_string("dead-script", dead_script);
-  }
-
   writer.end_list("yeti");
 }
 

Modified: trunk/supertux/src/badguy/yeti.hpp
===================================================================
--- trunk/supertux/src/badguy/yeti.hpp	2007-01-02 17:07:50 UTC (rev 4524)
+++ trunk/supertux/src/badguy/yeti.hpp	2007-01-03 23:35:19 UTC (rev 4525)
@@ -62,7 +62,6 @@
   Timer safe_timer;
   int stomp_count;
   int hit_points;
-  std::string dead_script;
 };
 
 #endif



From sommer at mail.berlios.de  Thu Jan  4 11:25:18 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Thu, 4 Jan 2007 11:25:18 +0100
Subject: [Supertux-commit] r4526 - in trunk/supertux: . man man/man6
Message-ID: <200701041025.l04APIcs021469@sheep.berlios.de>

Author: sommer
Date: 2007-01-04 11:25:17 +0100 (Thu, 04 Jan 2007)
New Revision: 4526

Added:
   trunk/supertux/man/
   trunk/supertux/man/man6/
   trunk/supertux/man/man6/supertux.6
Log:
Added manpage draft


Added: trunk/supertux/man/man6/supertux.6
===================================================================
--- trunk/supertux/man/man6/supertux.6	2007-01-03 23:35:19 UTC (rev 4525)
+++ trunk/supertux/man/man6/supertux.6	2007-01-04 10:25:17 UTC (rev 4526)
@@ -0,0 +1,99 @@
+.TH SUPERTUX 6 "December 17, 2006" "0.3.0" "SuperTux"
+.SH NAME
+supertux \- a classic style 2D platform game
+.SH SYNOPSIS
+.B supertux
+.RI [ options ] " level.stl"
+.br
+.B supertux
+.RI [ options ] " worldmap.stwm"
+.br
+.SH DESCRIPTION
+SuperTux is a classic style 2D platform game.
+Run and jump through multiple worlds, fighting off enemies by jumping
+on them, bumping them from below or tossing objects at them, grabbing
+power-ups and other stuff on the way.
+.SH OPTIONS
+These programs follow the usual GNU command line syntax, with long
+options starting with two dashes (`-').
+A summary of options is included below.
+.TP
+.B \-f, \-\-fullscreen
+Run in fullscreen mode
+.TP
+.B \-w, \-\-window
+Run in window mode
+.TP
+.B \-g, \-\-geometry WIDTHxHEIGHT
+Run SuperTux in given resolution
+.TP
+.B \-\-disable\-sfx
+Disable sound effects
+.TP
+.B \-\-disable\-music
+Disable music
+.TP
+.B \-\-help
+Show this help message
+.TP
+.B \-\-version
+Display SuperTux version and quit
+.TP
+.B \-\-console
+Enable ingame scripting console
+.TP
+.B \-\-show\-fps
+Display framerate in levels
+.TP
+.B \-\-record\-demo FILE LEVEL
+Record a demo to FILE
+.TP
+.B \-\-play\-demo FILE LEVEL
+Play a recorded demo
+.SH ENVIRONMENT
+.TP
+.B SUPERTUX_LANG
+overrides locale detection and forces locale to given value, e.g. "de_DE"
+.SH FILES
+.TP
+.B ~/.supertux2
+Contains configuration and savegames.
+Also acts as an overlay of the SuperTux game data path: 
+Files placed here will override or supplement game data files.
+.SH EXAMPLES
+.TP
+supertux --window --geometry 800x600
+"/usr/share/supertux/levels/world1/26 - The Castle of Nolok.stl"
+.TP
+supertux --play-demo 
+"~/Desktop/level26.demo" 
+.br
+"/usr/share/supertux/levels/world1/26 - The Castle of Nolok.stl"
+.PP
+Custom-made levels can be conveniently stored in the overlay data folder. 
+Make sure to also create an "info" file, so the collection will be 
+recognized by SuperTux.
+.PP
+.B ~/.supertux2/levels/sample_collection/info
+.nf
+;SuperTux-Level-Subset
+(supertux-level-subset
+  (title "Sample Collection")
+  (description "")
+)
+.fi
+.PP
+.B ~/.supertux2/levels/sample_collection/level01.stl
+.nf
+(supertux-level
+  (version 2)
+  (name (_ "Sample Level"))
+  (author "Myself")
+  ...
+.fi
+
+.SH BUGS
+This is a development version, so expect plenty of bugs.
+.SH AUTHOR
+This manual page was written by the SuperTux Devel Team 
+and is placed in the public domain.



From sommer at mail.berlios.de  Thu Jan  4 16:16:47 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Thu, 4 Jan 2007 16:16:47 +0100
Subject: [Supertux-commit] r4527 -
	trunk/supertux-sharp/supertux-editor/LevelObjects
Message-ID: <200701041516.l04FGliS006494@sheep.berlios.de>

Author: sommer
Date: 2007-01-04 16:16:44 +0100 (Thu, 04 Jan 2007)
New Revision: 4527

Modified:
   trunk/supertux-sharp/supertux-editor/LevelObjects/Sector.cs
Log:
Worked around crashes with some Mono versions when converting Array<Type> -> List<Type>


Modified: trunk/supertux-sharp/supertux-editor/LevelObjects/Sector.cs
===================================================================
--- trunk/supertux-sharp/supertux-editor/LevelObjects/Sector.cs	2007-01-04 10:25:17 UTC (rev 4526)
+++ trunk/supertux-sharp/supertux-editor/LevelObjects/Sector.cs	2007-01-04 15:16:44 UTC (rev 4527)
@@ -168,8 +168,8 @@
 	}
 
 	public void CustomLispWrite(Writer Writer) {
-		System.Collections.Generic.List<Type> types = new System.Collections.Generic.List<Type>(this.GetType().Assembly.GetTypes());
-		types.Sort(CompareTypeNames);
+		Type[] types = this.GetType().Assembly.GetTypes();
+		Array.Sort(types, CompareTypeNames);
 		foreach(Type type in types) {
 			SupertuxObjectAttribute objectAttribute = (SupertuxObjectAttribute)
 				Attribute.GetCustomAttribute(type, typeof(SupertuxObjectAttribute));



From sommer at mail.berlios.de  Thu Jan  4 16:19:46 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Thu, 4 Jan 2007 16:19:46 +0100
Subject: [Supertux-commit] r4528 -
	trunk/supertux-sharp/supertux-editor/LevelObjects
Message-ID: <200701041519.l04FJke3006973@sheep.berlios.de>

Author: sommer
Date: 2007-01-04 16:19:45 +0100 (Thu, 04 Jan 2007)
New Revision: 4528

Modified:
   trunk/supertux-sharp/supertux-editor/LevelObjects/Objects.cs
   trunk/supertux-sharp/supertux-editor/LevelObjects/SimpleObject.cs
Log:
Editor supports assigning "dead-script"s to any Badguy now 


Modified: trunk/supertux-sharp/supertux-editor/LevelObjects/Objects.cs
===================================================================
--- trunk/supertux-sharp/supertux-editor/LevelObjects/Objects.cs	2007-01-04 15:16:44 UTC (rev 4527)
+++ trunk/supertux-sharp/supertux-editor/LevelObjects/Objects.cs	2007-01-04 15:19:45 UTC (rev 4528)
@@ -304,10 +304,6 @@
                 Target = SupertuxObjectAttribute.Usage.LevelOnly)]
 public sealed class Yeti : SimpleObject
 {
-	[LispChild("dead-script")]
-	[EditScriptSetting]
-	public String DeadScript = "";
-
 	public Yeti() {
 		Sprite = SpriteManager.Create("images/creatures/yeti/yeti.sprite");
 		Sprite.Action = "stand-left";

Modified: trunk/supertux-sharp/supertux-editor/LevelObjects/SimpleObject.cs
===================================================================
--- trunk/supertux-sharp/supertux-editor/LevelObjects/SimpleObject.cs	2007-01-04 15:16:44 UTC (rev 4527)
+++ trunk/supertux-sharp/supertux-editor/LevelObjects/SimpleObject.cs	2007-01-04 15:19:45 UTC (rev 4528)
@@ -125,6 +125,10 @@
 	[PropertyProperties(Tooltip = "Direction the badguy will be facing initaly.")]
 	[LispChild("direction", Optional = true, Default = Directions.auto)]
 	public Directions Direction = Directions.auto;
+
+	[LispChild("dead-script", Optional = true, Default = "")]
+	[EditScriptSetting]
+	public String DeadScript = "";
 }
 
 /// <summary>Base class for area objects in levels</summary>



From wolfgangb at mail.berlios.de  Fri Jan  5 00:37:29 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Fri, 5 Jan 2007 00:37:29 +0100
Subject: [Supertux-commit] r4529 - in trunk/supertux: data/levels/test
	man/man6 src/object
Message-ID: <200701042337.l04NbTO0027572@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-05 00:37:27 +0100 (Fri, 05 Jan 2007)
New Revision: 4529

Modified:
   trunk/supertux/data/levels/test/rock.stl
   trunk/supertux/man/man6/supertux.6
   trunk/supertux/src/object/player.cpp
Log:
Check if area is free of tiles and moving objects before releasing grabbed object.


Modified: trunk/supertux/data/levels/test/rock.stl
===================================================================
(Contents removed)

Modified: trunk/supertux/man/man6/supertux.6
===================================================================
--- trunk/supertux/man/man6/supertux.6	2007-01-04 15:19:45 UTC (rev 4528)
+++ trunk/supertux/man/man6/supertux.6	2007-01-04 23:37:27 UTC (rev 4529)
@@ -42,9 +42,15 @@
 .B \-\-console
 Enable ingame scripting console
 .TP
+.B \-\-noconsole
+Disable ingame scripting console
+.TP
 .B \-\-show\-fps
 Display framerate in levels
 .TP
+.B \-\-no\-show\-fps
+Do not display framerate in levels
+.TP
 .B \-\-record\-demo FILE LEVEL
 Record a demo to FILE
 .TP

Modified: trunk/supertux/src/object/player.cpp
===================================================================
--- trunk/supertux/src/object/player.cpp	2007-01-04 15:19:45 UTC (rev 4528)
+++ trunk/supertux/src/object/player.cpp	2007-01-04 23:37:27 UTC (rev 4529)
@@ -616,7 +616,7 @@
         Vector(dir == LEFT ? -bbox.get_width()-1 : bbox.get_width()+1,
                 bbox.get_height()*0.66666 - 32);
     Rect dest(pos, pos + Vector(32, 32));
-    if(Sector::current()->is_free_of_statics(dest)) {
+    if(Sector::current()->is_free_of_movingstatics(dest)) {
       MovingObject* moving_object = dynamic_cast<MovingObject*> (grabbed_object);
       if(moving_object) {
         moving_object->set_pos(pos);



From sommer at mail.berlios.de  Fri Jan  5 16:43:20 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Fri, 5 Jan 2007 16:43:20 +0100
Subject: [Supertux-commit] r4530 - in trunk/supertux/src: . badguy object
Message-ID: <200701051543.l05FhKDP018367@sheep.berlios.de>

Author: sommer
Date: 2007-01-05 16:43:18 +0100 (Fri, 05 Jan 2007)
New Revision: 4530

Modified:
   trunk/supertux/src/badguy/badguy.hpp
   trunk/supertux/src/object/bullet.hpp
   trunk/supertux/src/object/falling_coin.hpp
   trunk/supertux/src/object/flower.hpp
   trunk/supertux/src/object/gameobjs.hpp
   trunk/supertux/src/object/growup.hpp
   trunk/supertux/src/object/oneup.hpp
   trunk/supertux/src/object/player.hpp
   trunk/supertux/src/object/powerup.hpp
   trunk/supertux/src/object/rock.hpp
   trunk/supertux/src/object/scripted_object.hpp
   trunk/supertux/src/object/skull_tile.hpp
   trunk/supertux/src/object/star.hpp
   trunk/supertux/src/object/trampoline.hpp
   trunk/supertux/src/object/unstable_tile.hpp
   trunk/supertux/src/object/weak_block.hpp
   trunk/supertux/src/physic.hpp
   trunk/supertux/src/sector.cpp
Log:
Merged gravity patch by T. Goya


Modified: trunk/supertux/src/badguy/badguy.hpp
===================================================================
--- trunk/supertux/src/badguy/badguy.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/badguy/badguy.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -38,7 +38,7 @@
 #include "audio/sound_manager.hpp"
 #include "audio/sound_source.hpp"
 
-class BadGuy : public MovingSprite, public Serializable
+class BadGuy : public MovingSprite, protected UsesPhysic, public Serializable
 {
 public:
   BadGuy(const Vector& pos, const std::string& sprite_name, int layer = LAYER_OBJECTS);
@@ -175,8 +175,6 @@
    */
   Player* get_nearest_player();
 
-  Physic physic;
-
   /// is the enemy activated
   bool activated;
   /**

Modified: trunk/supertux/src/object/bullet.hpp
===================================================================
--- trunk/supertux/src/object/bullet.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/bullet.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -25,7 +25,7 @@
 #include "sprite/sprite.hpp"
 #include "player_status.hpp"
 
-class Bullet : public MovingObject
+class Bullet : public MovingObject, private UsesPhysic
 {
 public:
   Bullet(const Vector& pos, float xm, int dir, BonusType type);
@@ -50,7 +50,6 @@
 
 private:
   int life_count;
-  Physic physic;
   std::auto_ptr<Sprite> sprite;
   BonusType type;
 };

Modified: trunk/supertux/src/object/falling_coin.hpp
===================================================================
--- trunk/supertux/src/object/falling_coin.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/falling_coin.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -26,7 +26,7 @@
 #include "video/drawing_context.hpp"
 #include "physic.hpp"
 
-class FallingCoin : public GameObject
+class FallingCoin : public GameObject, private UsesPhysic
 {
 public:
   FallingCoin(const Vector& start_position, const int x_vel);
@@ -37,7 +37,6 @@
 private:
   Vector  pos;
   Sprite* sprite;
-  Physic  physic;
 };
 
 #endif

Modified: trunk/supertux/src/object/flower.hpp
===================================================================
--- trunk/supertux/src/object/flower.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/flower.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -22,7 +22,6 @@
 
 #include "moving_object.hpp"
 #include "sprite/sprite.hpp"
-#include "physic.hpp"
 #include "player_status.hpp"
 
 class Flower : public MovingObject

Modified: trunk/supertux/src/object/gameobjs.hpp
===================================================================
--- trunk/supertux/src/object/gameobjs.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/gameobjs.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -22,7 +22,6 @@
 
 #include "video/surface.hpp"
 #include "timer.hpp"
-#include "physic.hpp"
 #include "game_object.hpp"
 #include "moving_object.hpp"
 #include "serializable.hpp"

Modified: trunk/supertux/src/object/growup.hpp
===================================================================
--- trunk/supertux/src/object/growup.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/growup.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -24,7 +24,7 @@
 #include "physic.hpp"
 #include "direction.hpp"
 
-class GrowUp : public MovingSprite
+class GrowUp : public MovingSprite, private UsesPhysic
 {
 public:
   GrowUp(Direction direction = RIGHT);
@@ -33,9 +33,6 @@
   virtual void update(float elapsed_time);
   virtual void collision_solid(const CollisionHit& hit);
   virtual HitResponse collision(GameObject& other, const CollisionHit& hit);
-
-private:
-  Physic physic;
 };
 
 #endif

Modified: trunk/supertux/src/object/oneup.hpp
===================================================================
--- trunk/supertux/src/object/oneup.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/oneup.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -24,7 +24,7 @@
 #include "physic.hpp"
 #include "direction.hpp"
 
-class OneUp : public MovingSprite
+class OneUp : public MovingSprite, private UsesPhysic
 {
 public:
   OneUp(const Vector& pos, Direction direction = RIGHT);
@@ -32,9 +32,6 @@
 
   virtual void update(float elapsed_time);
   virtual HitResponse collision(GameObject& other, const CollisionHit& hit);
-
-private:
-  Physic physic;
 };
 
 #endif

Modified: trunk/supertux/src/object/player.hpp
===================================================================
--- trunk/supertux/src/object/player.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/player.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -81,7 +81,7 @@
 extern TuxBodyParts* fire_tux;
 extern TuxBodyParts* ice_tux;
 
-class Player : public MovingObject, public Scripting::Player, public ScriptInterface
+class Player : public MovingObject, public UsesPhysic, public Scripting::Player, public ScriptInterface
 {
 public:
   enum FallMode { ON_GROUND, JUMPING, TRAMPOLINE_JUMP, FALLING };
@@ -119,7 +119,6 @@
   Timer growing_timer;
   Timer idle_timer;
   Timer backflip_timer;
-  Physic physic;
 
 public:
   Player(PlayerStatus* player_status, const std::string& name);

Modified: trunk/supertux/src/object/powerup.hpp
===================================================================
--- trunk/supertux/src/object/powerup.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/powerup.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -25,7 +25,7 @@
 #include "collision_hit.hpp"
 #include "physic.hpp"
 
-class PowerUp : public MovingSprite
+class PowerUp : public MovingSprite, private UsesPhysic
 {
 public:
   PowerUp(const lisp::Lisp& lisp);
@@ -35,7 +35,6 @@
   virtual HitResponse collision(GameObject& other, const CollisionHit& hit);
 
 private:
-  Physic physic;
   std::string script;
   bool no_physics;
 };

Modified: trunk/supertux/src/object/rock.hpp
===================================================================
--- trunk/supertux/src/object/rock.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/rock.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -28,7 +28,7 @@
 
 class Sprite;
 
-class Rock : public MovingSprite, public Portable, public Serializable
+class Rock : public MovingSprite, public Portable, protected UsesPhysic, public Serializable
 {
 public:
   Rock(const lisp::Lisp& reader);
@@ -46,7 +46,6 @@
 protected:
   bool on_ground;
   bool grabbed;
-  Physic physic;
   Vector last_movement;
 };
 

Modified: trunk/supertux/src/object/scripted_object.hpp
===================================================================
--- trunk/supertux/src/object/scripted_object.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/scripted_object.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -27,8 +27,8 @@
 #include "script_interface.hpp"
 #include "scripting/scripted_object.hpp"
 
-class ScriptedObject : public MovingSprite, public Scripting::ScriptedObject,
-                       public ScriptInterface
+class ScriptedObject : public MovingSprite, public UsesPhysic, 
+                       public Scripting::ScriptedObject, public ScriptInterface
 {
 public:
   ScriptedObject(const lisp::Lisp& lisp);
@@ -69,7 +69,6 @@
   bool visible;
   bool new_vel_set;
   Vector new_vel;
-  Physic physic;
 };
 
 #endif

Modified: trunk/supertux/src/object/skull_tile.hpp
===================================================================
--- trunk/supertux/src/object/skull_tile.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/skull_tile.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -28,7 +28,7 @@
 class Player;
 
 /** A tile that starts falling down if tux stands to long on it */
-class SkullTile : public MovingSprite
+class SkullTile : public MovingSprite, private UsesPhysic
 {
 public:
   SkullTile(const lisp::Lisp& lisp);
@@ -39,7 +39,6 @@
   void draw(DrawingContext& context);
 
 private:
-  Physic physic;
   Timer timer;
   bool hit;
   bool falling;

Modified: trunk/supertux/src/object/star.hpp
===================================================================
--- trunk/supertux/src/object/star.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/star.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -24,7 +24,7 @@
 #include "physic.hpp"
 #include "direction.hpp"
 
-class Star : public MovingSprite
+class Star : public MovingSprite, private UsesPhysic
 {
 public:
   Star(const Vector& pos, Direction direction = RIGHT);
@@ -33,9 +33,6 @@
   virtual void update(float elapsed_time);
   virtual void collision_solid(const CollisionHit& hit);
   virtual HitResponse collision(GameObject& other, const CollisionHit& hit);
-
-private:
-  Physic physic;
 };
 
 #endif

Modified: trunk/supertux/src/object/trampoline.hpp
===================================================================
--- trunk/supertux/src/object/trampoline.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/trampoline.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -23,7 +23,6 @@
 #include "moving_sprite.hpp"
 #include "lisp/lisp.hpp"
 #include "object/rock.hpp"
-#include "physic.hpp"
 
 /**
  * Jumping on a trampolin makes tux jump higher.

Modified: trunk/supertux/src/object/unstable_tile.hpp
===================================================================
--- trunk/supertux/src/object/unstable_tile.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/unstable_tile.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -29,7 +29,7 @@
 /**
  * A block that disintegrates when stood on
  */
-class UnstableTile : public MovingSprite
+class UnstableTile : public MovingSprite, public UsesPhysic
 {
 public:
   UnstableTile(const lisp::Lisp& lisp);
@@ -45,8 +45,6 @@
     STATE_DISINTEGRATING /**< disintegrating, no longer solid */
   };
   State state;
-
-  Physic physic;
 };
 
 #endif

Modified: trunk/supertux/src/object/weak_block.hpp
===================================================================
--- trunk/supertux/src/object/weak_block.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/object/weak_block.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -29,7 +29,7 @@
 /**
  * A block that can be destroyed by Bullet hits
  */
-class WeakBlock : public MovingSprite
+class WeakBlock : public MovingSprite, public UsesPhysic
 {
 public:
   WeakBlock(const lisp::Lisp& lisp);
@@ -55,8 +55,6 @@
     STATE_DISINTEGRATING /**< crumbling to dust, no longer solid */
   };
   State state;
-
-  Physic physic;
 };
 
 #endif

Modified: trunk/supertux/src/physic.hpp
===================================================================
--- trunk/supertux/src/physic.hpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/physic.hpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -87,4 +87,11 @@
   float gravity;
 };
 
+class UsesPhysic
+{
+public:
+  Physic physic;
+  friend class Sector;
+};
+
 #endif

Modified: trunk/supertux/src/sector.cpp
===================================================================
--- trunk/supertux/src/sector.cpp	2007-01-04 23:37:27 UTC (rev 4529)
+++ trunk/supertux/src/sector.cpp	2007-01-05 15:43:18 UTC (rev 4530)
@@ -74,7 +74,7 @@
 
 Sector::Sector(Level* parent)
   : level(parent), currentmusic(LEVEL_MUSIC),
-  ambient_light( 1.0f, 1.0f, 1.0f, 1.0f ), gravity(10), player(0), camera(0) 
+  ambient_light( 1.0f, 1.0f, 1.0f, 1.0f ), gravity(1000.0), player(0), camera(0) 
 {
   add_object(new Player(player_status, "Tux"));
   add_object(new DisplayEffect("Effect"));
@@ -708,6 +708,13 @@
     this->player = player;
   }
 
+  UsesPhysic *physic_object = dynamic_cast<UsesPhysic *>(object);
+  if(physic_object)
+  {
+    physic_object->physic.set_gravity(gravity);
+  }
+
+
   if(_current == this) {
     try_expose(object);
   }



From wolfgangb at mail.berlios.de  Sun Jan  7 20:28:14 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Sun, 7 Jan 2007 20:28:14 +0100
Subject: [Supertux-commit] r4532 - trunk/supertux/src/object
Message-ID: <200701071928.l07JSEvh030224@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-07 20:28:14 +0100 (Sun, 07 Jan 2007)
New Revision: 4532

Modified:
   trunk/supertux/src/object/player.cpp
Log:
tuxdev fixed the tux floating backwards while jumping bug


Modified: trunk/supertux/src/object/player.cpp
===================================================================
--- trunk/supertux/src/object/player.cpp	2007-01-05 23:00:53 UTC (rev 4531)
+++ trunk/supertux/src/object/player.cpp	2007-01-07 19:28:14 UTC (rev 4532)
@@ -346,7 +346,7 @@
     physic.set_acceleration_x(0);
   } else if(physic.get_velocity_x() < 0) {
     physic.set_acceleration_x(WALK_ACCELERATION_X * 1.5);
-  } else {
+    } else if(physic.get_velocity_x() > 0) {
     physic.set_acceleration_x(WALK_ACCELERATION_X * -1.5);
   }
 }



From sommer at mail.berlios.de  Mon Jan  8 19:18:42 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Mon, 8 Jan 2007 19:18:42 +0100
Subject: [Supertux-commit] r4533 - trunk/supertux/src/object
Message-ID: <200701081818.l08IIgbL026428@sheep.berlios.de>

Author: sommer
Date: 2007-01-08 19:18:41 +0100 (Mon, 08 Jan 2007)
New Revision: 4533

Modified:
   trunk/supertux/src/object/player.cpp
Log:
Merged Patch #1811


Modified: trunk/supertux/src/object/player.cpp
===================================================================
--- trunk/supertux/src/object/player.cpp	2007-01-07 19:28:14 UTC (rev 4532)
+++ trunk/supertux/src/object/player.cpp	2007-01-08 18:18:41 UTC (rev 4533)
@@ -1051,17 +1051,22 @@
 
   physic.set_velocity_x(0);
 
-  if(!completely && is_big()) {
+  if(!completely && (is_big() || growing_timer.started())) {
     if(player_status->bonus == FIRE_BONUS
         || player_status->bonus == ICE_BONUS) {
       safe_timer.start(TUX_SAFE_TIME);
       set_bonus(GROWUP_BONUS, true);
-    } else {
+    } else if(player_status->bonus == GROWUP_BONUS) {
       //growing_timer.start(GROWING_TIME);
       safe_timer.start(TUX_SAFE_TIME /* + GROWING_TIME */);
       adjust_height(30.8);
       duck = false;
       set_bonus(NO_BONUS, true);
+    } else if(player_status->bonus == NO_BONUS) {
+      growing_timer.stop();
+      safe_timer.start(TUX_SAFE_TIME);
+      adjust_height(30.8);
+      duck = false;
     }
   } else {
     for (int i = 0; (i < 5) && (i < player_status->coins); i++)



From sommer at mail.berlios.de  Mon Jan  8 22:13:18 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Mon, 8 Jan 2007 22:13:18 +0100
Subject: [Supertux-commit] r4534 - in trunk/supertux/src: . lisp
Message-ID: <200701082113.l08LDI2E012549@sheep.berlios.de>

Author: sommer
Date: 2007-01-08 22:13:17 +0100 (Mon, 08 Jan 2007)
New Revision: 4534

Modified:
   trunk/supertux/src/lisp/parser.cpp
   trunk/supertux/src/world.cpp
Log:
Enable loading levels from .zip files in config dir, e.g. from ~/.supertux2/foo.zip/levels/01.stl


Modified: trunk/supertux/src/lisp/parser.cpp
===================================================================
--- trunk/supertux/src/lisp/parser.cpp	2007-01-08 18:18:41 UTC (rev 4533)
+++ trunk/supertux/src/lisp/parser.cpp	2007-01-08 21:13:17 UTC (rev 4534)
@@ -60,7 +60,9 @@
 Lisp*
 Parser::parse(const std::string& filename)
 {
-  IFileStream in(filename);
+  IFileStreambuf ins(filename);
+  std::istream in(&ins);
+
   if(!in.good()) {
     std::stringstream msg;
     msg << "Parser problem: Couldn't open file '" << filename << "'.";

Modified: trunk/supertux/src/world.cpp
===================================================================
--- trunk/supertux/src/world.cpp	2007-01-08 18:18:41 UTC (rev 4533)
+++ trunk/supertux/src/world.cpp	2007-01-08 21:13:17 UTC (rev 4534)
@@ -106,7 +106,7 @@
   // Level info file doesn't define any levels, so read the
   // directory to see what we can find
 
-  std::string path = basedir + "/";
+  std::string path = basedir;
   char** files = PHYSFS_enumerateFiles(path.c_str());
   if(!files) {
     log_warning << "Couldn't read subset dir '" << path << "'" << std::endl;



From sommer at mail.berlios.de  Mon Jan  8 22:24:53 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Mon, 8 Jan 2007 22:24:53 +0100
Subject: [Supertux-commit] r4535 - in trunk/supertux: data/levels/world1 src
Message-ID: <200701082124.l08LOrQh014082@sheep.berlios.de>

Author: sommer
Date: 2007-01-08 22:24:52 +0100 (Mon, 08 Jan 2007)
New Revision: 4535

Modified:
   trunk/supertux/data/levels/world1/27 - No More Mr Ice Guy.stl
   trunk/supertux/src/physic.cpp
   trunk/supertux/src/physic.hpp
   trunk/supertux/src/sector.cpp
Log:
Changed default gravity to 10.0


Modified: trunk/supertux/data/levels/world1/27 - No More Mr Ice Guy.stl
===================================================================
(Contents removed)

Modified: trunk/supertux/src/physic.cpp
===================================================================
--- trunk/supertux/src/physic.cpp	2007-01-08 21:13:17 UTC (rev 4534)
+++ trunk/supertux/src/physic.cpp	2007-01-08 21:24:52 UTC (rev 4535)
@@ -23,7 +23,7 @@
 #include "physic.hpp"
 
 Physic::Physic()
-    : ax(0), ay(0), vx(0), vy(0), gravity_enabled_flag(true), gravity(1000)
+    : ax(0), ay(0), vx(0), vy(0), gravity_enabled_flag(true), gravity(10 * 100)
 {
 }
 
@@ -144,13 +144,13 @@
 void
 Physic::set_gravity(float gravity)
 {
-  this->gravity = gravity;
+  this->gravity = gravity * 100;
 }
 
 float
 Physic::get_gravity() const
 {
-  return gravity;
+  return gravity / 100;
 }
 
 Vector

Modified: trunk/supertux/src/physic.hpp
===================================================================
--- trunk/supertux/src/physic.hpp	2007-01-08 21:13:17 UTC (rev 4534)
+++ trunk/supertux/src/physic.hpp	2007-01-08 21:24:52 UTC (rev 4535)
@@ -81,9 +81,9 @@
   float ax, ay;
   /// horizontal and vertical velocity
   float vx, vy;
-  /// should we respect gravity in out calculations?
+  /// should we respect gravity in our calculations?
   bool gravity_enabled_flag;
-  /// current gravity to apply to object, if enabled
+  /// current gravity (multiplied by 100) to apply to object, if enabled
   float gravity;
 };
 

Modified: trunk/supertux/src/sector.cpp
===================================================================
--- trunk/supertux/src/sector.cpp	2007-01-08 21:13:17 UTC (rev 4534)
+++ trunk/supertux/src/sector.cpp	2007-01-08 21:24:52 UTC (rev 4535)
@@ -74,7 +74,7 @@
 
 Sector::Sector(Level* parent)
   : level(parent), currentmusic(LEVEL_MUSIC),
-  ambient_light( 1.0f, 1.0f, 1.0f, 1.0f ), gravity(1000.0), player(0), camera(0) 
+  ambient_light( 1.0f, 1.0f, 1.0f, 1.0f ), gravity(10.0), player(0), camera(0) 
 {
   add_object(new Player(player_status, "Tux"));
   add_object(new DisplayEffect("Effect"));



From sommer at mail.berlios.de  Mon Jan  8 22:56:21 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Mon, 8 Jan 2007 22:56:21 +0100
Subject: [Supertux-commit] r4536 - in trunk/supertux/src: . object
Message-ID: <200701082156.l08LuLCA018512@sheep.berlios.de>

Author: sommer
Date: 2007-01-08 22:56:21 +0100 (Mon, 08 Jan 2007)
New Revision: 4536

Modified:
   trunk/supertux/src/object/tilemap.cpp
   trunk/supertux/src/object/tilemap.hpp
   trunk/supertux/src/sector.cpp
Log:
Improve loading of old levels: Don't quit when background is missing, ignore music, fill empty space at bottom with black tiles


Modified: trunk/supertux/src/object/tilemap.cpp
===================================================================
--- trunk/supertux/src/object/tilemap.cpp	2007-01-08 21:24:52 UTC (rev 4535)
+++ trunk/supertux/src/object/tilemap.cpp	2007-01-08 21:56:21 UTC (rev 4536)
@@ -257,7 +257,7 @@
 }
 
 void
-TileMap::resize(int new_width, int new_height)
+TileMap::resize(int new_width, int new_height, int fill_id)
 {
   if(new_width < width) {
     // remap tiles for new width
@@ -268,14 +268,14 @@
     }
   }
 
-  tiles.resize(new_width * new_height);
+  tiles.resize(new_width * new_height, fill_id);
 
   if(new_width > width) {
     // remap tiles
     for(int y = std::min(height, new_height)-1; y >= 0; --y) {
       for(int x = new_width-1; x >= 0; --x) {
         if(x >= width) {
-          tiles[y * new_width + x] = 0;
+          tiles[y * new_width + x] = fill_id;
           continue;
         }
 

Modified: trunk/supertux/src/object/tilemap.hpp
===================================================================
--- trunk/supertux/src/object/tilemap.hpp	2007-01-08 21:24:52 UTC (rev 4535)
+++ trunk/supertux/src/object/tilemap.hpp	2007-01-08 21:56:21 UTC (rev 4536)
@@ -74,7 +74,7 @@
   /** resizes the tilemap to a new width and height (tries to not destroy the
    * existing map)
    */
-  void resize(int newwidth, int newheight);
+  void resize(int newwidth, int newheight, int fill_id = 0);
 
   size_t get_width() const
   { return width; }

Modified: trunk/supertux/src/sector.cpp
===================================================================
--- trunk/supertux/src/sector.cpp	2007-01-08 21:24:52 UTC (rev 4535)
+++ trunk/supertux/src/sector.cpp	2007-01-08 21:56:21 UTC (rev 4536)
@@ -28,6 +28,7 @@
 #include <float.h>
 #include <math.h>
 #include <limits>
+#include <physfs.h>
 
 #include "sector.hpp"
 #include "object/player.hpp"
@@ -226,8 +227,17 @@
   reader.get("gravity", gravity);
 
   std::string backgroundimage;
-  reader.get("background", backgroundimage);
-  if (backgroundimage == "arctis2.jpg") backgroundimage = "arctis.jpg";
+  if (reader.get("background", backgroundimage)) {
+    if (backgroundimage == "arctis.png") backgroundimage = "arctis.jpg";
+    if (backgroundimage == "arctis2.jpg") backgroundimage = "arctis.jpg";
+    if (backgroundimage == "ocean.png") backgroundimage = "ocean.jpg";
+    backgroundimage = "images/background/" + backgroundimage;
+    if (!PHYSFS_exists(backgroundimage.c_str())) {
+      log_warning << "Background image \"" << backgroundimage << "\" not found. Ignoring." << std::endl;
+      backgroundimage = "";
+    }
+  }
+
   float bgspeed = .5;
   reader.get("bkgd_speed", bgspeed);
   bgspeed /= 100;
@@ -250,8 +260,7 @@
 
   if(backgroundimage != "") {
     Background* background = new Background();
-    background->set_image(
-            std::string("images/background/") + backgroundimage, bgspeed);
+    background->set_image(backgroundimage, bgspeed);
     add_object(background);
   } else {
     Gradient* gradient = new Gradient();
@@ -278,7 +287,10 @@
   spawnpoints.push_back(spawn);
 
   music = "chipdisko.ogg";
+  // skip reading music filename. It's all .ogg now, anyway
+  /*
   reader.get("music", music);
+  */
   music = "music/" + music;
 
   int width = 30, height = 15;
@@ -299,18 +311,24 @@
       }
     }
 
+    if (height < 19) tilemap->resize(width, 19);
     add_object(tilemap);
   }
 
   if(reader.get_vector("background-tm", tiles)) {
     TileMap* tilemap = new TileMap();
     tilemap->set(width, height, tiles, LAYER_BACKGROUNDTILES, false);
+    if (height < 19) tilemap->resize(width, 19);
     add_object(tilemap);
   }
 
   if(reader.get_vector("foreground-tm", tiles)) {
     TileMap* tilemap = new TileMap();
     tilemap->set(width, height, tiles, LAYER_FOREGROUNDTILES, false);
+    
+    // fill additional space in foreground with tiles of ID 2035 (lightmap/black)
+    if (height < 19) tilemap->resize(width, 19, 2035); 
+
     add_object(tilemap);
   }
 



From sommer at mail.berlios.de  Mon Jan  8 23:14:11 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Mon, 8 Jan 2007 23:14:11 +0100
Subject: [Supertux-commit] r4537 - trunk/supertux/src/worldmap
Message-ID: <200701082214.l08MEBBv021249@sheep.berlios.de>

Author: sommer
Date: 2007-01-08 23:14:11 +0100 (Mon, 08 Jan 2007)
New Revision: 4537

Modified:
   trunk/supertux/src/worldmap/worldmap.cpp
Log:
Aborting a level no longer resets Tux to the last finished level: Engine now updates state and savegame when entering levels.


Modified: trunk/supertux/src/worldmap/worldmap.cpp
===================================================================
--- trunk/supertux/src/worldmap/worldmap.cpp	2007-01-08 21:56:21 UTC (rev 4536)
+++ trunk/supertux/src/worldmap/worldmap.cpp	2007-01-08 22:14:11 UTC (rev 4537)
@@ -431,8 +431,6 @@
   calculate_total_stats();
 
   save_state();
-  if(World::current() != NULL)
-    World::current()->save_state();
 
   if (old_level_state != level->solved && level->auto_path) {
     // Try to detect the next direction to which we should walk
@@ -581,6 +579,10 @@
             Vector shrinkpos = Vector(level->pos.x*32 + 16 - camera_offset.x,
                                       level->pos.y*32 + 16 - camera_offset.y);
             std::string levelfile = levels_path + level->get_name();
+
+            // update state and savegame
+            save_state();
+
             main_loop->push_screen(new GameSession(levelfile, &level->statistics),
                                    new ShrinkFade(shrinkpos, 0.5));
             in_level = true;
@@ -954,6 +956,9 @@
   }
 
   sq_settop(vm, oldtop);
+  
+  if(World::current() != NULL)
+    World::current()->save_state();
 }
 
 void



From tuxdev at mail.berlios.de  Tue Jan  9 16:54:29 2007
From: tuxdev at mail.berlios.de (tuxdev at BerliOS)
Date: Tue, 9 Jan 2007 16:54:29 +0100
Subject: [Supertux-commit] r4538 - trunk/supertux
Message-ID: <200701091554.l09FsTKR005588@sheep.berlios.de>

Author: tuxdev
Date: 2007-01-09 16:54:29 +0100 (Tue, 09 Jan 2007)
New Revision: 4538

Modified:
   trunk/supertux/Jamrules
Log:
make jam stop spamming 'Append' for MakePot

Modified: trunk/supertux/Jamrules
===================================================================
--- trunk/supertux/Jamrules	2007-01-08 22:14:11 UTC (rev 4537)
+++ trunk/supertux/Jamrules	2007-01-09 15:54:29 UTC (rev 4538)
@@ -48,7 +48,7 @@
 IncludeDir $(top_builddir) ; # for config.h
 IncludeDir $(top_srcdir)/src ;
 
-actions Append
+actions quietly Append
 {
   echo $(>) >> $(<) ;
 }



From sommer at mail.berlios.de  Tue Jan  9 19:18:17 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Tue, 9 Jan 2007 19:18:17 +0100
Subject: [Supertux-commit] r4539 - trunk/supertux/src
Message-ID: <200701091818.l09IIHdl003022@sheep.berlios.de>

Author: sommer
Date: 2007-01-09 19:18:16 +0100 (Tue, 09 Jan 2007)
New Revision: 4539

Modified:
   trunk/supertux/src/sector.cpp
Log:
Fixed loading of old levels w/o backgroundimage


Modified: trunk/supertux/src/sector.cpp
===================================================================
--- trunk/supertux/src/sector.cpp	2007-01-09 15:54:29 UTC (rev 4538)
+++ trunk/supertux/src/sector.cpp	2007-01-09 18:18:16 UTC (rev 4539)
@@ -227,7 +227,7 @@
   reader.get("gravity", gravity);
 
   std::string backgroundimage;
-  if (reader.get("background", backgroundimage)) {
+  if (reader.get("background", backgroundimage) && (backgroundimage != "")) {
     if (backgroundimage == "arctis.png") backgroundimage = "arctis.jpg";
     if (backgroundimage == "arctis2.jpg") backgroundimage = "arctis.jpg";
     if (backgroundimage == "ocean.png") backgroundimage = "ocean.jpg";



From wolfgangb at mail.berlios.de  Wed Jan 10 18:55:59 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Wed, 10 Jan 2007 18:55:59 +0100
Subject: [Supertux-commit] r4540 - in trunk/supertux/src: . object video
Message-ID: <200701101755.l0AHtxEJ000645@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-10 18:55:56 +0100 (Wed, 10 Jan 2007)
New Revision: 4540

Modified:
   trunk/supertux/src/game_session.hpp
   trunk/supertux/src/object/firefly.cpp
   trunk/supertux/src/object/firefly.hpp
   trunk/supertux/src/video/drawing_context.cpp
Log:
Activate firefly on restart

Modified: trunk/supertux/src/game_session.hpp
===================================================================
--- trunk/supertux/src/game_session.hpp	2007-01-09 18:18:16 UTC (rev 4539)
+++ trunk/supertux/src/game_session.hpp	2007-01-10 17:55:56 UTC (rev 4540)
@@ -62,6 +62,12 @@
   void finish(bool win = true);
   void respawn(const std::string& sectorname, const std::string& spawnpointname);
   void set_reset_point(const std::string& sectorname, const Vector& pos);
+  std::string get_reset_point_sectorname()
+  { return reset_sector; }
+  
+  Vector get_reset_point_pos()
+  { return reset_pos; }
+
   void display_info_box(const std::string& text);
 
   Sector* get_current_sector()

Modified: trunk/supertux/src/object/firefly.cpp
===================================================================
--- trunk/supertux/src/object/firefly.cpp	2007-01-09 18:18:16 UTC (rev 4539)
+++ trunk/supertux/src/object/firefly.cpp	2007-01-10 17:55:56 UTC (rev 4540)
@@ -33,19 +33,34 @@
 Firefly::Firefly(const lisp::Lisp& lisp)
        : MovingSprite(lisp, "images/objects/resetpoints/default-resetpoint.sprite", LAYER_TILES, COLGROUP_TOUCHABLE), activated(false)
 {
-
   if( !lisp.get( "sprite", sprite_name ) ){
+    reactivate();
     return;
   }
   if( sprite_name == "" ){
     sprite_name = "images/objects/resetpoints/default-resetpoint.sprite";
+    reactivate();
     return;
   }
   //Replace sprite
   sprite = sprite_manager->create( sprite_name );
   bbox.set_size(sprite->get_current_hitbox_width(), sprite->get_current_hitbox_height());
+  reactivate();
 }
 
+void 
+Firefly::reactivate()
+{
+  if(GameSession::current()->get_reset_point_pos() == get_pos()){
+    // TODO: && GameSession::current()->get_reset_point_sectorname() ==  <sector this firefly is in>
+    // GameSession::current()->get_current_sector()->get_name() is not yet initialized.
+    // Worst case a resetpoint in a different sector at the same position as the real
+    // resetpoint the player is spawning is set to ringing, too. Until we can check the sector, too, dont set
+    // activated = true; here.
+    sprite->set_action("ringing");
+  }
+}
+
 void
 Firefly::write(lisp::Writer& writer)
 {

Modified: trunk/supertux/src/object/firefly.hpp
===================================================================
--- trunk/supertux/src/object/firefly.hpp	2007-01-09 18:18:16 UTC (rev 4539)
+++ trunk/supertux/src/object/firefly.hpp	2007-01-10 17:55:56 UTC (rev 4540)
@@ -40,6 +40,7 @@
 
 private:
   bool activated;
+  void reactivate();
 };
 
 #endif

Modified: trunk/supertux/src/video/drawing_context.cpp
===================================================================
--- trunk/supertux/src/video/drawing_context.cpp	2007-01-09 18:18:16 UTC (rev 4539)
+++ trunk/supertux/src/video/drawing_context.cpp	2007-01-10 17:55:56 UTC (rev 4540)
@@ -33,7 +33,7 @@
 #include "glutil.hpp"
 #include "texture.hpp"
 #include "texture_manager.hpp"
-#define LIGHTMAP_DIV 1
+#define LIGHTMAP_DIV 5
 
 static inline int next_po2(int val)
 {



From wolfgangb at mail.berlios.de  Wed Jan 10 19:34:33 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Wed, 10 Jan 2007 19:34:33 +0100
Subject: [Supertux-commit] r4541 - trunk/supertux/src/video
Message-ID: <200701101834.l0AIYXFM005025@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-10 19:34:33 +0100 (Wed, 10 Jan 2007)
New Revision: 4541

Modified:
   trunk/supertux/src/video/drawing_context.cpp
Log:
Patch by Klaus Denker:
The little lightmap_resolution.patch makes the Level "light+magic" playable at
any screen resolution. It fixes a TODO to calculate the correct
lightmap-coordinates in the function get_light.



Modified: trunk/supertux/src/video/drawing_context.cpp
===================================================================
--- trunk/supertux/src/video/drawing_context.cpp	2007-01-10 17:55:56 UTC (rev 4540)
+++ trunk/supertux/src/video/drawing_context.cpp	2007-01-10 18:34:33 UTC (rev 4541)
@@ -273,9 +273,8 @@
   for( int i = 0; i<3; i++)
     pixels[i] = 0.0f; //set to black
 
-  float posX = request.pos.x /LIGHTMAP_DIV;
-  //TODO:this works when playing with 800x600 otherwise posY is wrong
-  float posY = screen->h - request.pos.y / LIGHTMAP_DIV;
+  float posX = request.pos.x * lightmap_width / SCREEN_WIDTH;
+  float posY = screen->h - request.pos.y * lightmap_height / SCREEN_HEIGHT;
   glReadPixels((GLint) posX, (GLint) posY , 1, 1, GL_RGB, GL_FLOAT, pixels);
     *(getlightrequest->color_ptr) = Color( pixels[0], pixels[1], pixels[2]);  
   //printf("get_light %f/%f =>%f/%f r%f g%f b%f\n", request.pos.x, request.pos.y, posX, posY, pixels[0], pixels[1], pixels[2]);



From sommer at mail.berlios.de  Wed Jan 10 23:08:15 2007
From: sommer at mail.berlios.de (sommer at BerliOS)
Date: Wed, 10 Jan 2007 23:08:15 +0100
Subject: [Supertux-commit] r4542 - in trunk/supertux: . mk mk/cmake
	src/squirrel
Message-ID: <200701102208.l0AM8F6M023110@sheep.berlios.de>

Author: sommer
Date: 2007-01-10 23:08:15 +0100 (Wed, 10 Jan 2007)
New Revision: 4542

Added:
   trunk/supertux/CMakeLists.txt
   trunk/supertux/mk/cmake/
   trunk/supertux/mk/cmake/FindICONV.cmake
   trunk/supertux/mk/cmake/FindOggVorbis.cmake
   trunk/supertux/src/squirrel/CMakeLists.txt
Log:
Added skeleton build scripts for use with cmake. Note that this is far from finished - only the actual compilation works.


Added: trunk/supertux/CMakeLists.txt
===================================================================
--- trunk/supertux/CMakeLists.txt	2007-01-10 18:34:33 UTC (rev 4541)
+++ trunk/supertux/CMakeLists.txt	2007-01-10 22:08:15 UTC (rev 4542)
@@ -0,0 +1,140 @@
+#
+# SuperTux - root build script
+# Copyright (C) 2006 Christoph Sommer <christoph.sommer at 2006.expires.deltadevelopment.de>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+
+#
+# INSTRUCTIONS:
+# -------------
+#
+# Create a directory build/ and change to it. Run
+#
+#   cmake ..
+#
+# This creates a set of Makefiles to build the project. Run
+#
+#   make
+#
+
+
+#
+# FIXME: create config.h from config.h.in
+# FIXME: compile miniswig
+# FIXME: use miniswig to create squirrel wrappers
+# FIXME: create messages.pot for levels
+# FIXME: provide working install target
+#
+
+
+## (Optional) Generate noisy Makefile
+
+#SET(CMAKE_VERBOSE_MAKEFILE on)
+
+## Project name to use as command prefix
+
+PROJECT(SUPERTUX)
+
+## Search here for additional cmake modules (for finding deps)
+
+set(CMAKE_MODULE_PATH ${SUPERTUX_SOURCE_DIR}/mk/cmake ${CMAKE_MODULE_PATH})
+
+## Add lots of dependencies to compiler switches
+
+FIND_PACKAGE(SDL REQUIRED)
+INCLUDE_DIRECTORIES(${SDL_INCLUDE_DIR})
+LINK_LIBRARIES(${SDL_LIBRARY})
+
+FIND_PACKAGE(SDL_image REQUIRED)
+INCLUDE_DIRECTORIES(${SDLIMAGE_INCLUDE_DIR})
+LINK_LIBRARIES(${SDLIMAGE_LIBRARY})
+
+FIND_PACKAGE(OpenGL REQUIRED)
+INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
+LINK_LIBRARIES(${OPENGL_LIBRARY})
+
+FIND_PACKAGE(OpenAL REQUIRED)
+INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
+LINK_LIBRARIES(${OPENAL_LIBRARY})
+
+FIND_PACKAGE(OggVorbis REQUIRED)
+INCLUDE_DIRECTORIES(${OGGVORBIS_INCLUDE_DIR})
+LINK_LIBRARIES(${OGGVORBIS_LIBRARIES})
+
+FIND_PACKAGE(PhysFS REQUIRED)
+INCLUDE_DIRECTORIES(${PHYSFS_INCLUDE_DIR})
+LINK_LIBRARIES(${PHYSFS_LIBRARY})
+
+## Also execute instructions in src/squirrel/CMakeLists.txt
+
+ADD_SUBDIRECTORY(src/squirrel)
+
+## Add squirrel lib dir to search path
+
+LINK_DIRECTORIES(src/squirrel)
+
+## Some additional include paths
+
+include_directories (${SUPERTUX_SOURCE_DIR}/)
+include_directories (${SUPERTUX_SOURCE_DIR}/src/)
+include_directories (${SUPERTUX_SOURCE_DIR}/src/squirrel/include/)
+
+## Build list of sources for supertux binary
+
+FILE(GLOB SUPERTUX_SOURCES RELATIVE ${SUPERTUX_SOURCE_DIR} src/*.cpp src/audio/*.cpp src/badguy/*.cpp src/binreloc/*.cpp src/control/*.cpp src/gui/*.cpp src/lisp/*.cpp src/math/*.cpp src/object/*.cpp src/physfs/*.cpp src/sprite/*.cpp src/tinygettext/*.cpp src/trigger/*.cpp src/video/*.cpp src/worldmap/*.cpp src/scripting/*.cpp)
+
+## If xgettext is available, generate messages.pot for sources
+
+FIND_PROGRAM(
+  XGETTEXT 
+  NAMES "xgettext"
+  PATHS "/usr/bin"
+)
+IF(${XGETTEXT} STREQUAL "XGETTEXT-NOTFOUND")
+  MESSAGE(STATUS "Warning: xgettext not found - will not update messages.pot")
+ELSE(${XGETTEXT} STREQUAL "XGETTEXT-NOTFOUND")
+  MESSAGE(STATUS "Found xgettext: ${XGETTEXT}")
+  SET(MESSAGES_POT_FILE ${SUPERTUX_SOURCE_DIR}/data/locale/messages.pot)
+  ADD_CUSTOM_TARGET(
+    supertux-messages.pot ALL 
+    COMMAND "/usr/bin/xgettext" -k_ -C -o ${MESSAGES_POT_FILE} ${SUPERTUX_SOURCES}
+    DEPENDS ${SUPERTUX_SOURCES}
+    WORKING_DIRECTORY ${SUPERTUX_SOURCE_DIR}
+  )
+ENDIF(${XGETTEXT} STREQUAL "XGETTEXT-NOTFOUND")
+
+## Some additional compiler switches
+
+ADD_DEFINITIONS(-O2 -fno-strict-aliasing)
+
+## Add target for supertux binary
+
+ADD_EXECUTABLE(supertux ${SUPERTUX_SOURCES} )
+
+## Link supertux binary with squirrel
+
+TARGET_LINK_LIBRARIES(supertux squirrel)
+
+## After building, copy binary to source root
+
+ADD_CUSTOM_COMMAND(
+  TARGET supertux
+  POST_BUILD
+  COMMAND ${CMAKE_COMMAND}
+  ARGS -E copy supertux ${SUPERTUX_SOURCE_DIR}/supertux
+)
+

Added: trunk/supertux/mk/cmake/FindICONV.cmake
===================================================================
--- trunk/supertux/mk/cmake/FindICONV.cmake	2007-01-10 18:34:33 UTC (rev 4541)
+++ trunk/supertux/mk/cmake/FindICONV.cmake	2007-01-10 22:08:15 UTC (rev 4542)
@@ -0,0 +1,94 @@
+#
+#  Copyright (c) 2006, Peter K?mmel, 
+#
+#  Redistribution and use in source and binary forms, with or without
+#  modification, are permitted provided that the following conditions
+#  are met:
+#  
+#  1. Redistributions of source code must retain the copyright
+#     notice, this list of conditions and the following disclaimer.
+#  2. Redistributions in binary form must reproduce the copyright
+#     notice, this list of conditions and the following disclaimer in the
+#     documentation and/or other materials provided with the distribution.
+#  3. The name of the author may not be used to endorse or promote products 
+#     derived from this software without specific prior written permission.
+#  
+#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+#  
+
+if (ICONV_INCLUDE_DIR)
+  # Already in cache, be silent
+  set(ICONV_FIND_QUIETLY TRUE)
+endif (ICONV_INCLUDE_DIR)
+
+FIND_PATH(ICONV_INCLUDE_DIR iconv.h
+ /usr/include
+ /usr/local/include
+)
+
+set(POTENTIAL_ICONV_LIBS iconv libiconv libiconv2)
+FIND_LIBRARY(ICONV_LIBRARY NAMES ${POTENTIAL_ICONV_LIBS}
+PATHS
+ /usr/lib
+ /usr/local/lib
+)
+
+if(WIN32)
+	set(ICONV_DLL_NAMES iconv.dll  libiconv.dll libiconv2.dll)
+	FIND_FILE(ICONV_DLL   
+					NAMES ${ICONV_DLL_NAMES}
+					PATHS ENV PATH
+					NO_DEFAULT_PATH)
+	FIND_FILE(ICONV_DLL_HELP   
+					NAMES ${ICONV_DLL_NAMES}
+					PATHS ENV PATH
+					${ICONV_INCLUDE_DIR}/../bin)
+	IF(ICONV_FIND_REQUIRED)
+		IF(NOT ICONV_DLL AND NOT ICONV_DLL_HELP)
+			MESSAGE(FATAL_ERROR "Could not find iconv.dll, please add correct your PATH environment variable")
+		ENDIF(NOT ICONV_DLL AND NOT ICONV_DLL_HELP)
+		IF(NOT ICONV_DLL AND ICONV_DLL_HELP)
+			GET_FILENAME_COMPONENT(ICONV_DLL_HELP ${ICONV_DLL_HELP} PATH)
+			MESSAGE(STATUS)
+			MESSAGE(STATUS "Could not find iconv.dll in standard search path, please add ")
+			MESSAGE(STATUS "${ICONV_DLL_HELP}")
+			MESSAGE(STATUS "to your PATH environment variable.")
+			MESSAGE(STATUS)
+			MESSAGE(FATAL_ERROR "exit cmake")
+		ENDIF(NOT ICONV_DLL AND ICONV_DLL_HELP)
+	ENDIF(ICONV_FIND_REQUIRED)
+ELSE(WIN32)
+	set(ICONV_DLL TRUE)
+endif(WIN32)
+
+
+IF (ICONV_INCLUDE_DIR AND ICONV_LIBRARY AND ICONV_DLL)
+   SET(ICONV_FOUND TRUE)
+ENDIF (ICONV_INCLUDE_DIR AND ICONV_LIBRARY AND ICONV_DLL)
+
+IF (ICONV_FOUND)
+   IF (NOT ICONV_FIND_QUIETLY)
+      MESSAGE(STATUS "Found iconv library: ${ICONV_LIBRARY}")
+      #MESSAGE(STATUS "Found iconv   dll  : ${ICONV_DLL}")
+   ENDIF (NOT ICONV_FIND_QUIETLY)
+ELSE (ICONV_FOUND)
+   IF (ICONV_FIND_REQUIRED)
+      MESSAGE(STATUS "Looked for iconv library named ${POTENTIAL_ICONV_LIBS}.")
+      MESSAGE(STATUS "Found no acceptable iconv library. This is fatal.")
+      MESSAGE(STATUS "iconv header: ${ICONV_INCLUDE_DIR}")
+      MESSAGE(STATUS "iconv lib   : ${ICONV_LIBRARY}")
+      MESSAGE(FATAL_ERROR "Could NOT find iconv library")
+   ENDIF (ICONV_FIND_REQUIRED)
+ENDIF (ICONV_FOUND)
+
+MARK_AS_ADVANCED(ICONV_LIBRARY ICONV_INCLUDE_DIR)
+

Added: trunk/supertux/mk/cmake/FindOggVorbis.cmake
===================================================================
--- trunk/supertux/mk/cmake/FindOggVorbis.cmake	2007-01-10 18:34:33 UTC (rev 4541)
+++ trunk/supertux/mk/cmake/FindOggVorbis.cmake	2007-01-10 22:08:15 UTC (rev 4542)
@@ -0,0 +1,70 @@
+# - Try to find the OggVorbis libraries
+# Once done this will define
+#
+#  OGGVORBIS_FOUND - system has OggVorbis
+#  OGGVORBIS_VERSION - set either to 1 or 2
+#  OGGVORBIS_INCLUDE_DIR - the OggVorbis include directory
+#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis
+#  OGG_LIBRARY         - The Ogg library
+#  VORBIS_LIBRARY      - The Vorbis library
+#  VORBISFILE_LIBRARY  - The VorbisFile library
+#  VORBISENC_LIBRARY   - The VorbisEnc library
+# Copyright (c) 2006, Richard Laerkaeng, <richard at goteborg.utfors.se>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+include (CheckLibraryExists)
+find_path(VORBIS_INCLUDE_DIR vorbis/vorbisfile.h)
+find_library(OGG_LIBRARY NAMES ogg)
+find_library(VORBIS_LIBRARY NAMES vorbis)
+find_library(VORBISFILE_LIBRARY NAMES vorbisfile)
+find_library(VORBISENC_LIBRARY NAMES vorbisenc)
+if (VORBIS_INCLUDE_DIR AND VORBIS_LIBRARY AND VORBISFILE_LIBRARY AND VORBISENC_LIBRARY)
+   set(OGGVORBIS_FOUND TRUE)
+   set(OGGVORBIS_LIBRARIES ${OGG_LIBRARY} ${VORBIS_LIBRARY} ${VORBISFILE_LIBRARY} ${VORBISENC_LIBRARY})
+   set(_CMAKE_REQUIRED_LIBRARIES_TMP ${CMAKE_REQUIRED_LIBRARIES})
+   set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${OGGVORBIS_LIBRARIES})
+   check_library_exists(vorbis vorbis_bitrate_addblock "" HAVE_LIBVORBISENC2)
+   set(CMAKE_REQUIRED_LIBRARIES ${_CMAKE_REQUIRED_LIBRARIES_TMP})
+   if (HAVE_LIBVORBISENC2)
+      set (OGGVORBIS_VERSION 2)
+   else (HAVE_LIBVORBISENC2)
+      set (OGGVORBIS_VERSION 1)
+   endif (HAVE_LIBVORBISENC2)
+else (VORBIS_INCLUDE_DIR AND VORBIS_LIBRARY AND VORBISFILE_LIBRARY AND VORBISENC_LIBRARY)
+   set (OGGVORBIS_VERSION)
+   set(OGGVORBIS_FOUND FALSE)
+endif (VORBIS_INCLUDE_DIR AND VORBIS_LIBRARY AND VORBISFILE_LIBRARY AND VORBISENC_LIBRARY)
+if (OGGVORBIS_FOUND)
+   if (NOT OggVorbis_FIND_QUIETLY)
+      message(STATUS "Found OggVorbis: ${OGGVORBIS_LIBRARIES}")
+   endif (NOT OggVorbis_FIND_QUIETLY)
+else (OGGVORBIS_FOUND)
+   if (OggVorbis_FIND_REQUIRED)
+      message(FATAL_ERROR "Could NOT find OggVorbis libraries")
+   endif (OggVorbis_FIND_REQUIRED)
+   if (NOT OggVorbis_FIND_QUITELY)
+      message(STATUS "Could NOT find OggVorbis libraries")
+   endif (NOT OggVorbis_FIND_QUITELY)
+endif (OGGVORBIS_FOUND)
+#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)
+#check_library_exists(ogg ogg_page_version "" HAVE_LIBOGG)
+#check_library_exists(vorbis vorbis_info_init "" HAVE_LIBVORBIS)
+#check_library_exists(vorbisfile ov_open "" HAVE_LIBVORBISFILE)
+#check_library_exists(vorbisenc vorbis_info_clear "" HAVE_LIBVORBISENC)
+#check_library_exists(vorbis vorbis_bitrate_addblock "" HAVE_LIBVORBISENC2)
+#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)
+#    message(STATUS "Ogg/Vorbis found")
+#    set (VORBIS_LIBS "-lvorbis -logg")
+#    set (VORBISFILE_LIBS "-lvorbisfile")
+#    set (VORBISENC_LIBS "-lvorbisenc")
+#    set (OGGVORBIS_FOUND TRUE)
+#    if (HAVE_LIBVORBISENC2)
+#        set (HAVE_VORBIS 2)
+#    else (HAVE_LIBVORBISENC2)
+#        set (HAVE_VORBIS 1)
+#    endif (HAVE_LIBVORBISENC2)
+#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)
+#    message(STATUS "Ogg/Vorbis not found")
+#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)
+

Added: trunk/supertux/src/squirrel/CMakeLists.txt
===================================================================
--- trunk/supertux/src/squirrel/CMakeLists.txt	2007-01-10 18:34:33 UTC (rev 4541)
+++ trunk/supertux/src/squirrel/CMakeLists.txt	2007-01-10 22:08:15 UTC (rev 4542)
@@ -0,0 +1,35 @@
+#
+# SuperTux - squirrel library build script
+# Copyright (C) 2006 Christoph Sommer <christoph.sommer at 2006.expires.deltadevelopment.de>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+## Add include/ to include directories
+
+INCLUDE_DIRECTORIES(${SUPERTUX_SOURCE_DIR}/src/squirrel/include/)
+
+## build list of source files
+
+FILE(GLOB SQUIRREL_SOURCES squirrel/*.cpp sqstdlib/*.cpp sqstdlib/*.c)
+
+## add additional compiler switches
+
+ADD_DEFINITIONS(-include ${SUPERTUX_SOURCE_DIR}/config.h)
+
+## define a target for building the library
+
+ADD_LIBRARY(squirrel ${SQUIRREL_SOURCES})
+



From wolfgangb at mail.berlios.de  Fri Jan 12 20:31:08 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Fri, 12 Jan 2007 20:31:08 +0100
Subject: [Supertux-commit] r4543 - trunk/supertux/src/badguy
Message-ID: <200701121931.l0CJV8PZ014927@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-12 20:31:08 +0100 (Fri, 12 Jan 2007)
New Revision: 4543

Modified:
   trunk/supertux/src/badguy/badguy.cpp
Log:
offscreen.patch by Klaus Denker: correct some calculations 


Modified: trunk/supertux/src/badguy/badguy.cpp
===================================================================
--- trunk/supertux/src/badguy/badguy.cpp	2007-01-10 22:08:15 UTC (rev 4542)
+++ trunk/supertux/src/badguy/badguy.cpp	2007-01-12 19:31:08 UTC (rev 4543)
@@ -391,9 +391,9 @@
   float scroll_y = Sector::current()->camera->get_translation().y;
 
   if(bbox.p2.x < scroll_x - X_OFFSCREEN_DISTANCE
-      || bbox.p1.x > scroll_x + X_OFFSCREEN_DISTANCE
+      || bbox.p1.x > scroll_x + X_OFFSCREEN_DISTANCE + SCREEN_WIDTH
       || bbox.p2.y < scroll_y - Y_OFFSCREEN_DISTANCE
-      || bbox.p1.y > scroll_y + Y_OFFSCREEN_DISTANCE)
+      || bbox.p1.y > scroll_y + Y_OFFSCREEN_DISTANCE + SCREEN_HEIGHT)
     return true;
 
   return false;
@@ -412,7 +412,7 @@
   if (start_position.x > scroll_x - X_OFFSCREEN_DISTANCE &&
       start_position.x < scroll_x - bbox.get_width() &&
       start_position.y > scroll_y - Y_OFFSCREEN_DISTANCE &&
-      start_position.y < scroll_y + Y_OFFSCREEN_DISTANCE) {
+      start_position.y < scroll_y + SCREEN_HEIGHT + Y_OFFSCREEN_DISTANCE) {
     if (start_dir != AUTO) dir = start_dir; else dir = RIGHT;
     set_state(STATE_ACTIVE);
     activate();
@@ -420,13 +420,13 @@
   } else if (start_position.x > scroll_x +  SCREEN_WIDTH &&
       start_position.x < scroll_x + SCREEN_WIDTH + X_OFFSCREEN_DISTANCE &&
       start_position.y > scroll_y - Y_OFFSCREEN_DISTANCE &&
-      start_position.y < scroll_y + Y_OFFSCREEN_DISTANCE) {
+      start_position.y < scroll_y + SCREEN_HEIGHT + Y_OFFSCREEN_DISTANCE) {
     if (start_dir != AUTO) dir = start_dir; else dir = LEFT;
     set_state(STATE_ACTIVE);
     activate();
   //Badguy over or under screen
   } else if (start_position.x > scroll_x - X_OFFSCREEN_DISTANCE &&
-       start_position.x < scroll_x + X_OFFSCREEN_DISTANCE &&
+       start_position.x < scroll_x + SCREEN_WIDTH + X_OFFSCREEN_DISTANCE &&
        ((start_position.y > scroll_y + SCREEN_HEIGHT &&
          start_position.y < scroll_y + SCREEN_HEIGHT + Y_OFFSCREEN_DISTANCE) ||
         (start_position.y > scroll_y - Y_OFFSCREEN_DISTANCE &&
@@ -445,9 +445,9 @@
      activate();
   } else if(state == STATE_INIT
       && start_position.x > scroll_x - X_OFFSCREEN_DISTANCE
-      && start_position.x < scroll_x + X_OFFSCREEN_DISTANCE
+      && start_position.x < scroll_x + X_OFFSCREEN_DISTANCE + SCREEN_WIDTH
       && start_position.y > scroll_y - Y_OFFSCREEN_DISTANCE
-      && start_position.y < scroll_y + Y_OFFSCREEN_DISTANCE) {
+      && start_position.y < scroll_y + Y_OFFSCREEN_DISTANCE + SCREEN_HEIGHT ) {
     if (start_dir != AUTO) {
       dir = start_dir;
     } else {



From wolfgangb at mail.berlios.de  Fri Jan 12 20:32:53 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Fri, 12 Jan 2007 20:32:53 +0100
Subject: [Supertux-commit] r4544 - in trunk/supertux: man/man6 src
Message-ID: <200701121932.l0CJWrv8015428@sheep.berlios.de>

Author: wolfgangb
Date: 2007-01-12 20:32:53 +0100 (Fri, 12 Jan 2007)
New Revision: 4544

Modified:
   trunk/supertux/man/man6/supertux.6
   trunk/supertux/src/gameconfig.cpp
   trunk/supertux/src/gameconfig.hpp
   trunk/supertux/src/main.cpp
   trunk/supertux/src/main.hpp
   trunk/supertux/src/textscroller.cpp
Log:
Widescreen-Patch by Klaus Denker.  It includes a new
command-line-parameter "--aspect" or "-a". It defaults to 4:3 but
can be changed to any other ratio. SCREEN_WIDTH and SCREEN_HEIGHT
are calculated from these aspect-values.



Modified: trunk/supertux/man/man6/supertux.6
===================================================================
--- trunk/supertux/man/man6/supertux.6	2007-01-12 19:31:08 UTC (rev 4543)
+++ trunk/supertux/man/man6/supertux.6	2007-01-12 19:32:53 UTC (rev 4544)
@@ -25,8 +25,11 @@
 Run in window mode
 .TP
 .B \-g, \-\-geometry WIDTHxHEIGHT
-Run SuperTux in given resolution
+Run SuperTux in given resolution (eg. \-g 800x600) 
 .TP
+.B \-a, \-\-aspect WIDTH:HEIGHT
+Run SuperTux with given aspect ratio (eg. \-a 4:3) 
+.TP
 .B \-\-disable\-sfx
 Disable sound effects
 .TP

Modified: trunk/supertux/src/gameconfig.cpp
===================================================================
--- trunk/supertux/src/gameconfig.cpp	2007-01-12 19:31:08 UTC (rev 4543)
+++ trunk/supertux/src/gameconfig.cpp	2007-01-12 19:32:53 UTC (rev 4544)
@@ -44,6 +44,8 @@
 
   screenwidth = 800;
   screenheight = 600;
+  aspectwidth = 4;
+  aspectheight = 3;
 
   enable_script_debugger = false;
 }
@@ -70,6 +72,8 @@
     config_video_lisp->get("fullscreen", use_fullscreen);
     config_video_lisp->get("width", screenwidth);
     config_video_lisp->get("height", screenheight);
+    config_video_lisp->get("aspectwidth", aspectwidth);
+    config_video_lisp->get("aspectheight", aspectheight);
   }
 
   const lisp::Lisp* config_audio_lisp = config_lisp->get_lisp("audio");
@@ -98,6 +102,8 @@
   writer.write_bool("fullscreen", use_fullscreen);
   writer.write_int("width", screenwidth);
   writer.write_int("height", screenheight);
+  writer.write_int("aspectwidth", aspectwidth);
+  writer.write_int("aspectheight", aspectheight);
   writer.end_list("video");
 
   writer.start_list("audio");

Modified: trunk/supertux/src/gameconfig.hpp
===================================================================
--- trunk/supertux/src/gameconfig.hpp	2007-01-12 19:31:08 UTC (rev 4543)
+++ trunk/supertux/src/gameconfig.hpp	2007-01-12 19:32:53 UTC (rev 4544)
@@ -36,6 +36,8 @@
    */
   int screenwidth;
   int screenheight;
+  int aspectwidth;
+  int aspectheight;
 
   bool use_fullscreen;
   bool show_fps;

Modified: trunk/supertux/src/main.cpp
===================================================================
--- trunk/supertux/src/main.cpp	2007-01-12 19:31:08 UTC (rev 4543)
+++ trunk/supertux/src/main.cpp	2007-01-12 19:32:53 UTC (rev 4544)
@@ -61,6 +61,9 @@
 JoystickKeyboardController* main_controller = 0;
 TinyGetText::DictionaryManager dictionary_manager;
 
+int SCREEN_WIDTH;
+int SCREEN_HEIGHT;
+
 static void init_config()
 {
   config = new Config();
@@ -210,6 +213,7 @@
             "  -f, --fullscreen             Run in fullscreen mode\n"
             "  -w, --window                 Run in window mode\n"
             "  -g, --geometry WIDTHxHEIGHT  Run SuperTux in given resolution\n"
+            "  -a, --aspect WIDTH:HEIGHT    Run SuperTux with given aspect ratio\n"
             "  --disable-sfx                Disable sound effects\n"
             "  --disable-music              Disable music\n"
             "  --help                       Show this help message\n"
@@ -265,6 +269,16 @@
         print_usage(argv[0]);
         throw std::runtime_error("Invalid geometry spec, should be WIDTHxHEIGHT");
       }
+    } else if(arg == "--aspect" || arg == "-a") {
+      if(i+1 >= argc) {
+        print_usage(argv[0]);
+        throw std::runtime_error("Need to specify a parameter for aspect switch");
+      }
+      if(sscanf(argv[++i], "%d:%d", &config->aspectwidth, &config->aspectheight)
+         != 2) {
+        print_usage(argv[0]);
+        throw std::runtime_error("Invalid aspect spec, should be WIDTH:HEIGHT");
+      }
     } else if(arg == "--show-fps") {
       config->show_fps = true;
     } else if(arg == "--no-show-fps") {
@@ -371,6 +385,16 @@
   }
 #endif
 
+  // use aspect ratio to calculate logical resolution
+  if (config->aspectwidth > config->aspectheight) {
+  	SCREEN_HEIGHT=600;
+	SCREEN_WIDTH=600*config->aspectwidth/config->aspectheight;
+  }
+  else {
+  	SCREEN_WIDTH=600;
+	SCREEN_HEIGHT=600*config->aspectheight/config->aspectwidth;
+  }
+
   // setup opengl state and transform
   glDisable(GL_DEPTH_TEST);
   glDisable(GL_CULL_FACE);
@@ -382,7 +406,7 @@
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   // logical resolution here not real monitor resolution
-  glOrtho(0, 800, 600, 0, -1.0, 1.0);
+  glOrtho(0, SCREEN_WIDTH, SCREEN_HEIGHT, 0, -1.0, 1.0);
   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
   glTranslatef(0, 0, 0);

Modified: trunk/supertux/src/main.hpp
===================================================================
--- trunk/supertux/src/main.hpp	2007-01-12 19:31:08 UTC (rev 4543)
+++ trunk/supertux/src/main.hpp	2007-01-12 19:32:53 UTC (rev 4544)
@@ -24,9 +24,9 @@
 void wait_for_event(float min_delay, float max_delay);
 
 /// The width of the display (this is a logical value, not the physical value)
-static const float SCREEN_WIDTH = 800;
+extern int SCREEN_WIDTH;
 /// The height of the display (this is a logical value, not the physical value)
-static const float SCREEN_HEIGHT = 600;
+extern int SCREEN_HEIGHT;
 
 // global variables
 class JoystickKeyboardController;

Modified: trunk/supertux/src/textscroller.cpp
===================================================================
--- trunk/supertux/src/textscroller.cpp	2007-01-12 19:31:08 UTC (rev 4543)
+++ trunk/supertux/src/textscroller.cpp	2007-01-12 19:32:53 UTC (rev 4544)
@@ -118,7 +118,9 @@
 void
 TextScroller::draw(DrawingContext& context)
 {
-  context.draw_surface(background.get(), Vector(0,0), 0);
+  context.draw_filled_rect(Vector(0, 0), Vector(SCREEN_WIDTH, SCREEN_HEIGHT),
+      Color(0.6f, 0.7f, 0.8f, 0.5f), 0);
+  context.draw_surface(background.get(), Vector(SCREEN_WIDTH/2 - background->get_width()/2 , SCREEN_HEIGHT/2 - background->get_height()/2), 0);
 
   float y = SCREEN_HEIGHT - scroll;
   for(size_t i = 0; i < lines.size(); i++) {
@@ -164,8 +166,8 @@
 void
 InfoBox::draw(DrawingContext& context)
 {
-  float x1 = 200;
-  float y1 = 100;
+  float x1 = SCREEN_WIDTH/2-200;
+  float y1 = SCREEN_HEIGHT/2-200;
   float width = 400;
   float height = 200;
 



